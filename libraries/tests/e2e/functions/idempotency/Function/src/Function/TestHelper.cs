using System.Text.Json;
using Amazon.Lambda.APIGatewayEvents;

namespace Helpers;

public static class TestHelper
{
    public static APIGatewayProxyResponse TestMethod(APIGatewayProxyRequest apigwProxyEvent)
    {
        var requestContextRequestId = apigwProxyEvent.RequestContext.RequestId;
        var response = new
        {
            RequestId = requestContextRequestId,
            Greeting = "Hello Powertools for AWS Lambda (.NET)",
            MethodGuid = GenerateGuid(), // Guid generated by the GenerateGuid method. used to compare Method output
            HandlerGuid = Guid.NewGuid().ToString() // Guid generated in the Handler. used to compare Handler output
        };

        try
        {
            return new APIGatewayProxyResponse
            {
                Body = JsonSerializer.Serialize(response),
                StatusCode = 200,
                Headers = new Dictionary<string, string> { { "Content-Type", "application/json" } }
            };
        }
        catch (Exception e)
        {
            return new APIGatewayProxyResponse
            {
                Body = e.Message,
                StatusCode = 500,
                Headers = new Dictionary<string, string> { { "Content-Type", "application/json" } }
            };
        }
    }
    
    /// <summary>
    /// Generates a new Guid to check if value is the same between calls (should be when idempotency enabled)
    /// </summary>
    /// <returns>GUID</returns>
    private static string GenerateGuid()
    {
        return Guid.NewGuid().ToString();
    }
}