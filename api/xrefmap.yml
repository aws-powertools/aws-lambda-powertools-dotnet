### YamlMime:XRefMap
sorted: true
references:
- uid: AWS.Lambda.Powertools.Common
  name: AWS.Lambda.Powertools.Common
  href: api/AWS.Lambda.Powertools.Common.html
  commentId: N:AWS.Lambda.Powertools.Common
  fullName: AWS.Lambda.Powertools.Common
  nameWithType: AWS.Lambda.Powertools.Common
- uid: AWS.Lambda.Powertools.Common.AspectEventArgs
  name: AspectEventArgs
  href: api/AWS.Lambda.Powertools.Common.AspectEventArgs.html
  commentId: T:AWS.Lambda.Powertools.Common.AspectEventArgs
  fullName: AWS.Lambda.Powertools.Common.AspectEventArgs
  nameWithType: AspectEventArgs
- uid: AWS.Lambda.Powertools.Common.AspectEventArgs.Args
  name: Args
  href: api/AWS.Lambda.Powertools.Common.AspectEventArgs.html#AWS_Lambda_Powertools_Common_AspectEventArgs_Args
  commentId: P:AWS.Lambda.Powertools.Common.AspectEventArgs.Args
  fullName: AWS.Lambda.Powertools.Common.AspectEventArgs.Args
  nameWithType: AspectEventArgs.Args
- uid: AWS.Lambda.Powertools.Common.AspectEventArgs.Args*
  name: Args
  href: api/AWS.Lambda.Powertools.Common.AspectEventArgs.html#AWS_Lambda_Powertools_Common_AspectEventArgs_Args_
  commentId: Overload:AWS.Lambda.Powertools.Common.AspectEventArgs.Args
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.AspectEventArgs.Args
  nameWithType: AspectEventArgs.Args
- uid: AWS.Lambda.Powertools.Common.AspectEventArgs.Instance
  name: Instance
  href: api/AWS.Lambda.Powertools.Common.AspectEventArgs.html#AWS_Lambda_Powertools_Common_AspectEventArgs_Instance
  commentId: P:AWS.Lambda.Powertools.Common.AspectEventArgs.Instance
  fullName: AWS.Lambda.Powertools.Common.AspectEventArgs.Instance
  nameWithType: AspectEventArgs.Instance
- uid: AWS.Lambda.Powertools.Common.AspectEventArgs.Instance*
  name: Instance
  href: api/AWS.Lambda.Powertools.Common.AspectEventArgs.html#AWS_Lambda_Powertools_Common_AspectEventArgs_Instance_
  commentId: Overload:AWS.Lambda.Powertools.Common.AspectEventArgs.Instance
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.AspectEventArgs.Instance
  nameWithType: AspectEventArgs.Instance
- uid: AWS.Lambda.Powertools.Common.AspectEventArgs.Method
  name: Method
  href: api/AWS.Lambda.Powertools.Common.AspectEventArgs.html#AWS_Lambda_Powertools_Common_AspectEventArgs_Method
  commentId: P:AWS.Lambda.Powertools.Common.AspectEventArgs.Method
  fullName: AWS.Lambda.Powertools.Common.AspectEventArgs.Method
  nameWithType: AspectEventArgs.Method
- uid: AWS.Lambda.Powertools.Common.AspectEventArgs.Method*
  name: Method
  href: api/AWS.Lambda.Powertools.Common.AspectEventArgs.html#AWS_Lambda_Powertools_Common_AspectEventArgs_Method_
  commentId: Overload:AWS.Lambda.Powertools.Common.AspectEventArgs.Method
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.AspectEventArgs.Method
  nameWithType: AspectEventArgs.Method
- uid: AWS.Lambda.Powertools.Common.AspectEventArgs.Name
  name: Name
  href: api/AWS.Lambda.Powertools.Common.AspectEventArgs.html#AWS_Lambda_Powertools_Common_AspectEventArgs_Name
  commentId: P:AWS.Lambda.Powertools.Common.AspectEventArgs.Name
  fullName: AWS.Lambda.Powertools.Common.AspectEventArgs.Name
  nameWithType: AspectEventArgs.Name
- uid: AWS.Lambda.Powertools.Common.AspectEventArgs.Name*
  name: Name
  href: api/AWS.Lambda.Powertools.Common.AspectEventArgs.html#AWS_Lambda_Powertools_Common_AspectEventArgs_Name_
  commentId: Overload:AWS.Lambda.Powertools.Common.AspectEventArgs.Name
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.AspectEventArgs.Name
  nameWithType: AspectEventArgs.Name
- uid: AWS.Lambda.Powertools.Common.AspectEventArgs.ReturnType
  name: ReturnType
  href: api/AWS.Lambda.Powertools.Common.AspectEventArgs.html#AWS_Lambda_Powertools_Common_AspectEventArgs_ReturnType
  commentId: P:AWS.Lambda.Powertools.Common.AspectEventArgs.ReturnType
  fullName: AWS.Lambda.Powertools.Common.AspectEventArgs.ReturnType
  nameWithType: AspectEventArgs.ReturnType
- uid: AWS.Lambda.Powertools.Common.AspectEventArgs.ReturnType*
  name: ReturnType
  href: api/AWS.Lambda.Powertools.Common.AspectEventArgs.html#AWS_Lambda_Powertools_Common_AspectEventArgs_ReturnType_
  commentId: Overload:AWS.Lambda.Powertools.Common.AspectEventArgs.ReturnType
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.AspectEventArgs.ReturnType
  nameWithType: AspectEventArgs.ReturnType
- uid: AWS.Lambda.Powertools.Common.AspectEventArgs.Triggers
  name: Triggers
  href: api/AWS.Lambda.Powertools.Common.AspectEventArgs.html#AWS_Lambda_Powertools_Common_AspectEventArgs_Triggers
  commentId: P:AWS.Lambda.Powertools.Common.AspectEventArgs.Triggers
  fullName: AWS.Lambda.Powertools.Common.AspectEventArgs.Triggers
  nameWithType: AspectEventArgs.Triggers
- uid: AWS.Lambda.Powertools.Common.AspectEventArgs.Triggers*
  name: Triggers
  href: api/AWS.Lambda.Powertools.Common.AspectEventArgs.html#AWS_Lambda_Powertools_Common_AspectEventArgs_Triggers_
  commentId: Overload:AWS.Lambda.Powertools.Common.AspectEventArgs.Triggers
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.AspectEventArgs.Triggers
  nameWithType: AspectEventArgs.Triggers
- uid: AWS.Lambda.Powertools.Common.AspectEventArgs.Type
  name: Type
  href: api/AWS.Lambda.Powertools.Common.AspectEventArgs.html#AWS_Lambda_Powertools_Common_AspectEventArgs_Type
  commentId: P:AWS.Lambda.Powertools.Common.AspectEventArgs.Type
  fullName: AWS.Lambda.Powertools.Common.AspectEventArgs.Type
  nameWithType: AspectEventArgs.Type
- uid: AWS.Lambda.Powertools.Common.AspectEventArgs.Type*
  name: Type
  href: api/AWS.Lambda.Powertools.Common.AspectEventArgs.html#AWS_Lambda_Powertools_Common_AspectEventArgs_Type_
  commentId: Overload:AWS.Lambda.Powertools.Common.AspectEventArgs.Type
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.AspectEventArgs.Type
  nameWithType: AspectEventArgs.Type
- uid: AWS.Lambda.Powertools.Common.IMethodAspectHandler
  name: IMethodAspectHandler
  href: api/AWS.Lambda.Powertools.Common.IMethodAspectHandler.html
  commentId: T:AWS.Lambda.Powertools.Common.IMethodAspectHandler
  fullName: AWS.Lambda.Powertools.Common.IMethodAspectHandler
  nameWithType: IMethodAspectHandler
- uid: AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnEntry(AWS.Lambda.Powertools.Common.AspectEventArgs)
  name: OnEntry(AspectEventArgs)
  href: api/AWS.Lambda.Powertools.Common.IMethodAspectHandler.html#AWS_Lambda_Powertools_Common_IMethodAspectHandler_OnEntry_AWS_Lambda_Powertools_Common_AspectEventArgs_
  commentId: M:AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnEntry(AWS.Lambda.Powertools.Common.AspectEventArgs)
  fullName: AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnEntry(AWS.Lambda.Powertools.Common.AspectEventArgs)
  nameWithType: IMethodAspectHandler.OnEntry(AspectEventArgs)
- uid: AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnEntry*
  name: OnEntry
  href: api/AWS.Lambda.Powertools.Common.IMethodAspectHandler.html#AWS_Lambda_Powertools_Common_IMethodAspectHandler_OnEntry_
  commentId: Overload:AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnEntry
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnEntry
  nameWithType: IMethodAspectHandler.OnEntry
- uid: AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnException*
  name: OnException
  href: api/AWS.Lambda.Powertools.Common.IMethodAspectHandler.html#AWS_Lambda_Powertools_Common_IMethodAspectHandler_OnException_
  commentId: Overload:AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnException
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnException
  nameWithType: IMethodAspectHandler.OnException
- uid: AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnException``1(AWS.Lambda.Powertools.Common.AspectEventArgs,System.Exception)
  name: OnException<T>(AspectEventArgs, Exception)
  href: api/AWS.Lambda.Powertools.Common.IMethodAspectHandler.html#AWS_Lambda_Powertools_Common_IMethodAspectHandler_OnException__1_AWS_Lambda_Powertools_Common_AspectEventArgs_System_Exception_
  commentId: M:AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnException``1(AWS.Lambda.Powertools.Common.AspectEventArgs,System.Exception)
  name.vb: OnException(Of T)(AspectEventArgs, Exception)
  fullName: AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnException<T>(AWS.Lambda.Powertools.Common.AspectEventArgs, System.Exception)
  fullName.vb: AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnException(Of T)(AWS.Lambda.Powertools.Common.AspectEventArgs, System.Exception)
  nameWithType: IMethodAspectHandler.OnException<T>(AspectEventArgs, Exception)
  nameWithType.vb: IMethodAspectHandler.OnException(Of T)(AspectEventArgs, Exception)
- uid: AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnExit(AWS.Lambda.Powertools.Common.AspectEventArgs)
  name: OnExit(AspectEventArgs)
  href: api/AWS.Lambda.Powertools.Common.IMethodAspectHandler.html#AWS_Lambda_Powertools_Common_IMethodAspectHandler_OnExit_AWS_Lambda_Powertools_Common_AspectEventArgs_
  commentId: M:AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnExit(AWS.Lambda.Powertools.Common.AspectEventArgs)
  fullName: AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnExit(AWS.Lambda.Powertools.Common.AspectEventArgs)
  nameWithType: IMethodAspectHandler.OnExit(AspectEventArgs)
- uid: AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnExit*
  name: OnExit
  href: api/AWS.Lambda.Powertools.Common.IMethodAspectHandler.html#AWS_Lambda_Powertools_Common_IMethodAspectHandler_OnExit_
  commentId: Overload:AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnExit
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnExit
  nameWithType: IMethodAspectHandler.OnExit
- uid: AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnSuccess(AWS.Lambda.Powertools.Common.AspectEventArgs,System.Object)
  name: OnSuccess(AspectEventArgs, object)
  href: api/AWS.Lambda.Powertools.Common.IMethodAspectHandler.html#AWS_Lambda_Powertools_Common_IMethodAspectHandler_OnSuccess_AWS_Lambda_Powertools_Common_AspectEventArgs_System_Object_
  commentId: M:AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnSuccess(AWS.Lambda.Powertools.Common.AspectEventArgs,System.Object)
  name.vb: OnSuccess(AspectEventArgs, Object)
  fullName: AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnSuccess(AWS.Lambda.Powertools.Common.AspectEventArgs, object)
  fullName.vb: AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnSuccess(AWS.Lambda.Powertools.Common.AspectEventArgs, Object)
  nameWithType: IMethodAspectHandler.OnSuccess(AspectEventArgs, object)
  nameWithType.vb: IMethodAspectHandler.OnSuccess(AspectEventArgs, Object)
- uid: AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnSuccess*
  name: OnSuccess
  href: api/AWS.Lambda.Powertools.Common.IMethodAspectHandler.html#AWS_Lambda_Powertools_Common_IMethodAspectHandler_OnSuccess_
  commentId: Overload:AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnSuccess
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.IMethodAspectHandler.OnSuccess
  nameWithType: IMethodAspectHandler.OnSuccess
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations
  name: IPowertoolsConfigurations
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html
  commentId: T:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations
  nameWithType: IPowertoolsConfigurations
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.GetEnvironmentVariable(System.String)
  name: GetEnvironmentVariable(string)
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_GetEnvironmentVariable_System_String_
  commentId: M:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.GetEnvironmentVariable(System.String)
  name.vb: GetEnvironmentVariable(String)
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.GetEnvironmentVariable(string)
  fullName.vb: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.GetEnvironmentVariable(String)
  nameWithType: IPowertoolsConfigurations.GetEnvironmentVariable(string)
  nameWithType.vb: IPowertoolsConfigurations.GetEnvironmentVariable(String)
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.GetEnvironmentVariable*
  name: GetEnvironmentVariable
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_GetEnvironmentVariable_
  commentId: Overload:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.GetEnvironmentVariable
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.GetEnvironmentVariable
  nameWithType: IPowertoolsConfigurations.GetEnvironmentVariable
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.GetEnvironmentVariableOrDefault(System.String,System.Boolean)
  name: GetEnvironmentVariableOrDefault(string, bool)
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_GetEnvironmentVariableOrDefault_System_String_System_Boolean_
  commentId: M:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.GetEnvironmentVariableOrDefault(System.String,System.Boolean)
  name.vb: GetEnvironmentVariableOrDefault(String, Boolean)
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.GetEnvironmentVariableOrDefault(string, bool)
  fullName.vb: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.GetEnvironmentVariableOrDefault(String, Boolean)
  nameWithType: IPowertoolsConfigurations.GetEnvironmentVariableOrDefault(string, bool)
  nameWithType.vb: IPowertoolsConfigurations.GetEnvironmentVariableOrDefault(String, Boolean)
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.GetEnvironmentVariableOrDefault(System.String,System.String)
  name: GetEnvironmentVariableOrDefault(string, string)
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_GetEnvironmentVariableOrDefault_System_String_System_String_
  commentId: M:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.GetEnvironmentVariableOrDefault(System.String,System.String)
  name.vb: GetEnvironmentVariableOrDefault(String, String)
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.GetEnvironmentVariableOrDefault(string, string)
  fullName.vb: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.GetEnvironmentVariableOrDefault(String, String)
  nameWithType: IPowertoolsConfigurations.GetEnvironmentVariableOrDefault(string, string)
  nameWithType.vb: IPowertoolsConfigurations.GetEnvironmentVariableOrDefault(String, String)
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.GetEnvironmentVariableOrDefault*
  name: GetEnvironmentVariableOrDefault
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_GetEnvironmentVariableOrDefault_
  commentId: Overload:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.GetEnvironmentVariableOrDefault
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.GetEnvironmentVariableOrDefault
  nameWithType: IPowertoolsConfigurations.GetEnvironmentVariableOrDefault
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.IsLambdaEnvironment
  name: IsLambdaEnvironment
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_IsLambdaEnvironment
  commentId: P:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.IsLambdaEnvironment
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.IsLambdaEnvironment
  nameWithType: IPowertoolsConfigurations.IsLambdaEnvironment
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.IsLambdaEnvironment*
  name: IsLambdaEnvironment
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_IsLambdaEnvironment_
  commentId: Overload:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.IsLambdaEnvironment
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.IsLambdaEnvironment
  nameWithType: IPowertoolsConfigurations.IsLambdaEnvironment
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.IsSamLocal
  name: IsSamLocal
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_IsSamLocal
  commentId: P:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.IsSamLocal
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.IsSamLocal
  nameWithType: IPowertoolsConfigurations.IsSamLocal
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.IsSamLocal*
  name: IsSamLocal
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_IsSamLocal_
  commentId: Overload:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.IsSamLocal
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.IsSamLocal
  nameWithType: IPowertoolsConfigurations.IsSamLocal
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.IsServiceDefined
  name: IsServiceDefined
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_IsServiceDefined
  commentId: P:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.IsServiceDefined
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.IsServiceDefined
  nameWithType: IPowertoolsConfigurations.IsServiceDefined
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.IsServiceDefined*
  name: IsServiceDefined
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_IsServiceDefined_
  commentId: Overload:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.IsServiceDefined
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.IsServiceDefined
  nameWithType: IPowertoolsConfigurations.IsServiceDefined
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LoggerLogEvent
  name: LoggerLogEvent
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_LoggerLogEvent
  commentId: P:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LoggerLogEvent
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LoggerLogEvent
  nameWithType: IPowertoolsConfigurations.LoggerLogEvent
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LoggerLogEvent*
  name: LoggerLogEvent
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_LoggerLogEvent_
  commentId: Overload:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LoggerLogEvent
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LoggerLogEvent
  nameWithType: IPowertoolsConfigurations.LoggerLogEvent
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LoggerOutputCase
  name: LoggerOutputCase
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_LoggerOutputCase
  commentId: P:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LoggerOutputCase
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LoggerOutputCase
  nameWithType: IPowertoolsConfigurations.LoggerOutputCase
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LoggerOutputCase*
  name: LoggerOutputCase
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_LoggerOutputCase_
  commentId: Overload:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LoggerOutputCase
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LoggerOutputCase
  nameWithType: IPowertoolsConfigurations.LoggerOutputCase
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LoggerSampleRate
  name: LoggerSampleRate
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_LoggerSampleRate
  commentId: P:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LoggerSampleRate
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LoggerSampleRate
  nameWithType: IPowertoolsConfigurations.LoggerSampleRate
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LoggerSampleRate*
  name: LoggerSampleRate
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_LoggerSampleRate_
  commentId: Overload:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LoggerSampleRate
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LoggerSampleRate
  nameWithType: IPowertoolsConfigurations.LoggerSampleRate
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LogLevel
  name: LogLevel
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_LogLevel
  commentId: P:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LogLevel
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LogLevel
  nameWithType: IPowertoolsConfigurations.LogLevel
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LogLevel*
  name: LogLevel
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_LogLevel_
  commentId: Overload:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LogLevel
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.LogLevel
  nameWithType: IPowertoolsConfigurations.LogLevel
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.MetricsNamespace
  name: MetricsNamespace
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_MetricsNamespace
  commentId: P:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.MetricsNamespace
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.MetricsNamespace
  nameWithType: IPowertoolsConfigurations.MetricsNamespace
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.MetricsNamespace*
  name: MetricsNamespace
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_MetricsNamespace_
  commentId: Overload:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.MetricsNamespace
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.MetricsNamespace
  nameWithType: IPowertoolsConfigurations.MetricsNamespace
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.Service
  name: Service
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_Service
  commentId: P:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.Service
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.Service
  nameWithType: IPowertoolsConfigurations.Service
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.Service*
  name: Service
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_Service_
  commentId: Overload:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.Service
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.Service
  nameWithType: IPowertoolsConfigurations.Service
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.TracerCaptureError
  name: TracerCaptureError
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_TracerCaptureError
  commentId: P:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.TracerCaptureError
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.TracerCaptureError
  nameWithType: IPowertoolsConfigurations.TracerCaptureError
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.TracerCaptureError*
  name: TracerCaptureError
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_TracerCaptureError_
  commentId: Overload:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.TracerCaptureError
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.TracerCaptureError
  nameWithType: IPowertoolsConfigurations.TracerCaptureError
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.TracerCaptureResponse
  name: TracerCaptureResponse
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_TracerCaptureResponse
  commentId: P:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.TracerCaptureResponse
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.TracerCaptureResponse
  nameWithType: IPowertoolsConfigurations.TracerCaptureResponse
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.TracerCaptureResponse*
  name: TracerCaptureResponse
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_TracerCaptureResponse_
  commentId: Overload:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.TracerCaptureResponse
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.TracerCaptureResponse
  nameWithType: IPowertoolsConfigurations.TracerCaptureResponse
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.TracingDisabled
  name: TracingDisabled
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_TracingDisabled
  commentId: P:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.TracingDisabled
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.TracingDisabled
  nameWithType: IPowertoolsConfigurations.TracingDisabled
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.TracingDisabled*
  name: TracingDisabled
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_TracingDisabled_
  commentId: Overload:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.TracingDisabled
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.TracingDisabled
  nameWithType: IPowertoolsConfigurations.TracingDisabled
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.XRayTraceId
  name: XRayTraceId
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_XRayTraceId
  commentId: P:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.XRayTraceId
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.XRayTraceId
  nameWithType: IPowertoolsConfigurations.XRayTraceId
- uid: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.XRayTraceId*
  name: XRayTraceId
  href: api/AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_IPowertoolsConfigurations_XRayTraceId_
  commentId: Overload:AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.XRayTraceId
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.IPowertoolsConfigurations.XRayTraceId
  nameWithType: IPowertoolsConfigurations.XRayTraceId
- uid: AWS.Lambda.Powertools.Common.ISystemWrapper
  name: ISystemWrapper
  href: api/AWS.Lambda.Powertools.Common.ISystemWrapper.html
  commentId: T:AWS.Lambda.Powertools.Common.ISystemWrapper
  fullName: AWS.Lambda.Powertools.Common.ISystemWrapper
  nameWithType: ISystemWrapper
- uid: AWS.Lambda.Powertools.Common.ISystemWrapper.GetEnvironmentVariable(System.String)
  name: GetEnvironmentVariable(string)
  href: api/AWS.Lambda.Powertools.Common.ISystemWrapper.html#AWS_Lambda_Powertools_Common_ISystemWrapper_GetEnvironmentVariable_System_String_
  commentId: M:AWS.Lambda.Powertools.Common.ISystemWrapper.GetEnvironmentVariable(System.String)
  name.vb: GetEnvironmentVariable(String)
  fullName: AWS.Lambda.Powertools.Common.ISystemWrapper.GetEnvironmentVariable(string)
  fullName.vb: AWS.Lambda.Powertools.Common.ISystemWrapper.GetEnvironmentVariable(String)
  nameWithType: ISystemWrapper.GetEnvironmentVariable(string)
  nameWithType.vb: ISystemWrapper.GetEnvironmentVariable(String)
- uid: AWS.Lambda.Powertools.Common.ISystemWrapper.GetEnvironmentVariable*
  name: GetEnvironmentVariable
  href: api/AWS.Lambda.Powertools.Common.ISystemWrapper.html#AWS_Lambda_Powertools_Common_ISystemWrapper_GetEnvironmentVariable_
  commentId: Overload:AWS.Lambda.Powertools.Common.ISystemWrapper.GetEnvironmentVariable
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.ISystemWrapper.GetEnvironmentVariable
  nameWithType: ISystemWrapper.GetEnvironmentVariable
- uid: AWS.Lambda.Powertools.Common.ISystemWrapper.GetRandom
  name: GetRandom()
  href: api/AWS.Lambda.Powertools.Common.ISystemWrapper.html#AWS_Lambda_Powertools_Common_ISystemWrapper_GetRandom
  commentId: M:AWS.Lambda.Powertools.Common.ISystemWrapper.GetRandom
  fullName: AWS.Lambda.Powertools.Common.ISystemWrapper.GetRandom()
  nameWithType: ISystemWrapper.GetRandom()
- uid: AWS.Lambda.Powertools.Common.ISystemWrapper.GetRandom*
  name: GetRandom
  href: api/AWS.Lambda.Powertools.Common.ISystemWrapper.html#AWS_Lambda_Powertools_Common_ISystemWrapper_GetRandom_
  commentId: Overload:AWS.Lambda.Powertools.Common.ISystemWrapper.GetRandom
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.ISystemWrapper.GetRandom
  nameWithType: ISystemWrapper.GetRandom
- uid: AWS.Lambda.Powertools.Common.ISystemWrapper.Log(System.String)
  name: Log(string)
  href: api/AWS.Lambda.Powertools.Common.ISystemWrapper.html#AWS_Lambda_Powertools_Common_ISystemWrapper_Log_System_String_
  commentId: M:AWS.Lambda.Powertools.Common.ISystemWrapper.Log(System.String)
  name.vb: Log(String)
  fullName: AWS.Lambda.Powertools.Common.ISystemWrapper.Log(string)
  fullName.vb: AWS.Lambda.Powertools.Common.ISystemWrapper.Log(String)
  nameWithType: ISystemWrapper.Log(string)
  nameWithType.vb: ISystemWrapper.Log(String)
- uid: AWS.Lambda.Powertools.Common.ISystemWrapper.Log*
  name: Log
  href: api/AWS.Lambda.Powertools.Common.ISystemWrapper.html#AWS_Lambda_Powertools_Common_ISystemWrapper_Log_
  commentId: Overload:AWS.Lambda.Powertools.Common.ISystemWrapper.Log
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.ISystemWrapper.Log
  nameWithType: ISystemWrapper.Log
- uid: AWS.Lambda.Powertools.Common.ISystemWrapper.LogLine(System.String)
  name: LogLine(string)
  href: api/AWS.Lambda.Powertools.Common.ISystemWrapper.html#AWS_Lambda_Powertools_Common_ISystemWrapper_LogLine_System_String_
  commentId: M:AWS.Lambda.Powertools.Common.ISystemWrapper.LogLine(System.String)
  name.vb: LogLine(String)
  fullName: AWS.Lambda.Powertools.Common.ISystemWrapper.LogLine(string)
  fullName.vb: AWS.Lambda.Powertools.Common.ISystemWrapper.LogLine(String)
  nameWithType: ISystemWrapper.LogLine(string)
  nameWithType.vb: ISystemWrapper.LogLine(String)
- uid: AWS.Lambda.Powertools.Common.ISystemWrapper.LogLine*
  name: LogLine
  href: api/AWS.Lambda.Powertools.Common.ISystemWrapper.html#AWS_Lambda_Powertools_Common_ISystemWrapper_LogLine_
  commentId: Overload:AWS.Lambda.Powertools.Common.ISystemWrapper.LogLine
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.ISystemWrapper.LogLine
  nameWithType: ISystemWrapper.LogLine
- uid: AWS.Lambda.Powertools.Common.MethodAspectAttribute
  name: MethodAspectAttribute
  href: api/AWS.Lambda.Powertools.Common.MethodAspectAttribute.html
  commentId: T:AWS.Lambda.Powertools.Common.MethodAspectAttribute
  fullName: AWS.Lambda.Powertools.Common.MethodAspectAttribute
  nameWithType: MethodAspectAttribute
- uid: AWS.Lambda.Powertools.Common.MethodAspectAttribute.CreateHandler
  name: CreateHandler()
  href: api/AWS.Lambda.Powertools.Common.MethodAspectAttribute.html#AWS_Lambda_Powertools_Common_MethodAspectAttribute_CreateHandler
  commentId: M:AWS.Lambda.Powertools.Common.MethodAspectAttribute.CreateHandler
  fullName: AWS.Lambda.Powertools.Common.MethodAspectAttribute.CreateHandler()
  nameWithType: MethodAspectAttribute.CreateHandler()
- uid: AWS.Lambda.Powertools.Common.MethodAspectAttribute.CreateHandler*
  name: CreateHandler
  href: api/AWS.Lambda.Powertools.Common.MethodAspectAttribute.html#AWS_Lambda_Powertools_Common_MethodAspectAttribute_CreateHandler_
  commentId: Overload:AWS.Lambda.Powertools.Common.MethodAspectAttribute.CreateHandler
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.MethodAspectAttribute.CreateHandler
  nameWithType: MethodAspectAttribute.CreateHandler
- uid: AWS.Lambda.Powertools.Common.MethodAspectAttribute.WrapAsync*
  name: WrapAsync
  href: api/AWS.Lambda.Powertools.Common.MethodAspectAttribute.html#AWS_Lambda_Powertools_Common_MethodAspectAttribute_WrapAsync_
  commentId: Overload:AWS.Lambda.Powertools.Common.MethodAspectAttribute.WrapAsync
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.MethodAspectAttribute.WrapAsync
  nameWithType: MethodAspectAttribute.WrapAsync
- uid: AWS.Lambda.Powertools.Common.MethodAspectAttribute.WrapAsync``1(System.Func{System.Object[],System.Threading.Tasks.Task{``0}},System.Object[],AWS.Lambda.Powertools.Common.AspectEventArgs)
  name: WrapAsync<T>(Func<object[], Task<T>>, object[], AspectEventArgs)
  href: api/AWS.Lambda.Powertools.Common.MethodAspectAttribute.html#AWS_Lambda_Powertools_Common_MethodAspectAttribute_WrapAsync__1_System_Func_System_Object___System_Threading_Tasks_Task___0___System_Object___AWS_Lambda_Powertools_Common_AspectEventArgs_
  commentId: M:AWS.Lambda.Powertools.Common.MethodAspectAttribute.WrapAsync``1(System.Func{System.Object[],System.Threading.Tasks.Task{``0}},System.Object[],AWS.Lambda.Powertools.Common.AspectEventArgs)
  name.vb: WrapAsync(Of T)(Func(Of Object(), Task(Of T)), Object(), AspectEventArgs)
  fullName: AWS.Lambda.Powertools.Common.MethodAspectAttribute.WrapAsync<T>(System.Func<object[], System.Threading.Tasks.Task<T>>, object[], AWS.Lambda.Powertools.Common.AspectEventArgs)
  fullName.vb: AWS.Lambda.Powertools.Common.MethodAspectAttribute.WrapAsync(Of T)(System.Func(Of Object(), System.Threading.Tasks.Task(Of T)), Object(), AWS.Lambda.Powertools.Common.AspectEventArgs)
  nameWithType: MethodAspectAttribute.WrapAsync<T>(Func<object[], Task<T>>, object[], AspectEventArgs)
  nameWithType.vb: MethodAspectAttribute.WrapAsync(Of T)(Func(Of Object(), Task(Of T)), Object(), AspectEventArgs)
- uid: AWS.Lambda.Powertools.Common.MethodAspectAttribute.WrapSync*
  name: WrapSync
  href: api/AWS.Lambda.Powertools.Common.MethodAspectAttribute.html#AWS_Lambda_Powertools_Common_MethodAspectAttribute_WrapSync_
  commentId: Overload:AWS.Lambda.Powertools.Common.MethodAspectAttribute.WrapSync
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.MethodAspectAttribute.WrapSync
  nameWithType: MethodAspectAttribute.WrapSync
- uid: AWS.Lambda.Powertools.Common.MethodAspectAttribute.WrapSync``1(System.Func{System.Object[],``0},System.Object[],AWS.Lambda.Powertools.Common.AspectEventArgs)
  name: WrapSync<T>(Func<object[], T>, object[], AspectEventArgs)
  href: api/AWS.Lambda.Powertools.Common.MethodAspectAttribute.html#AWS_Lambda_Powertools_Common_MethodAspectAttribute_WrapSync__1_System_Func_System_Object_____0__System_Object___AWS_Lambda_Powertools_Common_AspectEventArgs_
  commentId: M:AWS.Lambda.Powertools.Common.MethodAspectAttribute.WrapSync``1(System.Func{System.Object[],``0},System.Object[],AWS.Lambda.Powertools.Common.AspectEventArgs)
  name.vb: WrapSync(Of T)(Func(Of Object(), T), Object(), AspectEventArgs)
  fullName: AWS.Lambda.Powertools.Common.MethodAspectAttribute.WrapSync<T>(System.Func<object[], T>, object[], AWS.Lambda.Powertools.Common.AspectEventArgs)
  fullName.vb: AWS.Lambda.Powertools.Common.MethodAspectAttribute.WrapSync(Of T)(System.Func(Of Object(), T), Object(), AWS.Lambda.Powertools.Common.AspectEventArgs)
  nameWithType: MethodAspectAttribute.WrapSync<T>(Func<object[], T>, object[], AspectEventArgs)
  nameWithType.vb: MethodAspectAttribute.WrapSync(Of T)(Func(Of Object(), T), Object(), AspectEventArgs)
- uid: AWS.Lambda.Powertools.Common.PascalCaseNamingPolicy
  name: PascalCaseNamingPolicy
  href: api/AWS.Lambda.Powertools.Common.PascalCaseNamingPolicy.html
  commentId: T:AWS.Lambda.Powertools.Common.PascalCaseNamingPolicy
  fullName: AWS.Lambda.Powertools.Common.PascalCaseNamingPolicy
  nameWithType: PascalCaseNamingPolicy
- uid: AWS.Lambda.Powertools.Common.PascalCaseNamingPolicy.ConvertName(System.String)
  name: ConvertName(string)
  href: api/AWS.Lambda.Powertools.Common.PascalCaseNamingPolicy.html#AWS_Lambda_Powertools_Common_PascalCaseNamingPolicy_ConvertName_System_String_
  commentId: M:AWS.Lambda.Powertools.Common.PascalCaseNamingPolicy.ConvertName(System.String)
  name.vb: ConvertName(String)
  fullName: AWS.Lambda.Powertools.Common.PascalCaseNamingPolicy.ConvertName(string)
  fullName.vb: AWS.Lambda.Powertools.Common.PascalCaseNamingPolicy.ConvertName(String)
  nameWithType: PascalCaseNamingPolicy.ConvertName(string)
  nameWithType.vb: PascalCaseNamingPolicy.ConvertName(String)
- uid: AWS.Lambda.Powertools.Common.PascalCaseNamingPolicy.ConvertName*
  name: ConvertName
  href: api/AWS.Lambda.Powertools.Common.PascalCaseNamingPolicy.html#AWS_Lambda_Powertools_Common_PascalCaseNamingPolicy_ConvertName_
  commentId: Overload:AWS.Lambda.Powertools.Common.PascalCaseNamingPolicy.ConvertName
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.PascalCaseNamingPolicy.ConvertName
  nameWithType: PascalCaseNamingPolicy.ConvertName
- uid: AWS.Lambda.Powertools.Common.PascalCaseNamingPolicy.Instance
  name: Instance
  href: api/AWS.Lambda.Powertools.Common.PascalCaseNamingPolicy.html#AWS_Lambda_Powertools_Common_PascalCaseNamingPolicy_Instance
  commentId: P:AWS.Lambda.Powertools.Common.PascalCaseNamingPolicy.Instance
  fullName: AWS.Lambda.Powertools.Common.PascalCaseNamingPolicy.Instance
  nameWithType: PascalCaseNamingPolicy.Instance
- uid: AWS.Lambda.Powertools.Common.PascalCaseNamingPolicy.Instance*
  name: Instance
  href: api/AWS.Lambda.Powertools.Common.PascalCaseNamingPolicy.html#AWS_Lambda_Powertools_Common_PascalCaseNamingPolicy_Instance_
  commentId: Overload:AWS.Lambda.Powertools.Common.PascalCaseNamingPolicy.Instance
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.PascalCaseNamingPolicy.Instance
  nameWithType: PascalCaseNamingPolicy.Instance
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations
  name: PowertoolsConfigurations
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html
  commentId: T:AWS.Lambda.Powertools.Common.PowertoolsConfigurations
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations
  nameWithType: PowertoolsConfigurations
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.GetEnvironmentVariable(System.String)
  name: GetEnvironmentVariable(string)
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_GetEnvironmentVariable_System_String_
  commentId: M:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.GetEnvironmentVariable(System.String)
  name.vb: GetEnvironmentVariable(String)
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.GetEnvironmentVariable(string)
  fullName.vb: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.GetEnvironmentVariable(String)
  nameWithType: PowertoolsConfigurations.GetEnvironmentVariable(string)
  nameWithType.vb: PowertoolsConfigurations.GetEnvironmentVariable(String)
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.GetEnvironmentVariable*
  name: GetEnvironmentVariable
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_GetEnvironmentVariable_
  commentId: Overload:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.GetEnvironmentVariable
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.GetEnvironmentVariable
  nameWithType: PowertoolsConfigurations.GetEnvironmentVariable
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.GetEnvironmentVariableOrDefault(System.String,System.Boolean)
  name: GetEnvironmentVariableOrDefault(string, bool)
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_GetEnvironmentVariableOrDefault_System_String_System_Boolean_
  commentId: M:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.GetEnvironmentVariableOrDefault(System.String,System.Boolean)
  name.vb: GetEnvironmentVariableOrDefault(String, Boolean)
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.GetEnvironmentVariableOrDefault(string, bool)
  fullName.vb: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.GetEnvironmentVariableOrDefault(String, Boolean)
  nameWithType: PowertoolsConfigurations.GetEnvironmentVariableOrDefault(string, bool)
  nameWithType.vb: PowertoolsConfigurations.GetEnvironmentVariableOrDefault(String, Boolean)
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.GetEnvironmentVariableOrDefault(System.String,System.String)
  name: GetEnvironmentVariableOrDefault(string, string)
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_GetEnvironmentVariableOrDefault_System_String_System_String_
  commentId: M:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.GetEnvironmentVariableOrDefault(System.String,System.String)
  name.vb: GetEnvironmentVariableOrDefault(String, String)
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.GetEnvironmentVariableOrDefault(string, string)
  fullName.vb: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.GetEnvironmentVariableOrDefault(String, String)
  nameWithType: PowertoolsConfigurations.GetEnvironmentVariableOrDefault(string, string)
  nameWithType.vb: PowertoolsConfigurations.GetEnvironmentVariableOrDefault(String, String)
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.GetEnvironmentVariableOrDefault*
  name: GetEnvironmentVariableOrDefault
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_GetEnvironmentVariableOrDefault_
  commentId: Overload:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.GetEnvironmentVariableOrDefault
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.GetEnvironmentVariableOrDefault
  nameWithType: PowertoolsConfigurations.GetEnvironmentVariableOrDefault
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.Instance
  name: Instance
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_Instance
  commentId: P:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.Instance
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.Instance
  nameWithType: PowertoolsConfigurations.Instance
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.Instance*
  name: Instance
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_Instance_
  commentId: Overload:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.Instance
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.Instance
  nameWithType: PowertoolsConfigurations.Instance
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.IsLambdaEnvironment
  name: IsLambdaEnvironment
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_IsLambdaEnvironment
  commentId: P:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.IsLambdaEnvironment
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.IsLambdaEnvironment
  nameWithType: PowertoolsConfigurations.IsLambdaEnvironment
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.IsLambdaEnvironment*
  name: IsLambdaEnvironment
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_IsLambdaEnvironment_
  commentId: Overload:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.IsLambdaEnvironment
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.IsLambdaEnvironment
  nameWithType: PowertoolsConfigurations.IsLambdaEnvironment
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.IsSamLocal
  name: IsSamLocal
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_IsSamLocal
  commentId: P:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.IsSamLocal
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.IsSamLocal
  nameWithType: PowertoolsConfigurations.IsSamLocal
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.IsSamLocal*
  name: IsSamLocal
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_IsSamLocal_
  commentId: Overload:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.IsSamLocal
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.IsSamLocal
  nameWithType: PowertoolsConfigurations.IsSamLocal
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.IsServiceDefined
  name: IsServiceDefined
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_IsServiceDefined
  commentId: P:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.IsServiceDefined
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.IsServiceDefined
  nameWithType: PowertoolsConfigurations.IsServiceDefined
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.IsServiceDefined*
  name: IsServiceDefined
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_IsServiceDefined_
  commentId: Overload:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.IsServiceDefined
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.IsServiceDefined
  nameWithType: PowertoolsConfigurations.IsServiceDefined
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LoggerLogEvent
  name: LoggerLogEvent
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_LoggerLogEvent
  commentId: P:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LoggerLogEvent
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LoggerLogEvent
  nameWithType: PowertoolsConfigurations.LoggerLogEvent
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LoggerLogEvent*
  name: LoggerLogEvent
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_LoggerLogEvent_
  commentId: Overload:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LoggerLogEvent
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LoggerLogEvent
  nameWithType: PowertoolsConfigurations.LoggerLogEvent
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LoggerOutputCase
  name: LoggerOutputCase
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_LoggerOutputCase
  commentId: P:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LoggerOutputCase
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LoggerOutputCase
  nameWithType: PowertoolsConfigurations.LoggerOutputCase
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LoggerOutputCase*
  name: LoggerOutputCase
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_LoggerOutputCase_
  commentId: Overload:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LoggerOutputCase
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LoggerOutputCase
  nameWithType: PowertoolsConfigurations.LoggerOutputCase
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LoggerSampleRate
  name: LoggerSampleRate
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_LoggerSampleRate
  commentId: P:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LoggerSampleRate
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LoggerSampleRate
  nameWithType: PowertoolsConfigurations.LoggerSampleRate
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LoggerSampleRate*
  name: LoggerSampleRate
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_LoggerSampleRate_
  commentId: Overload:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LoggerSampleRate
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LoggerSampleRate
  nameWithType: PowertoolsConfigurations.LoggerSampleRate
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LogLevel
  name: LogLevel
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_LogLevel
  commentId: P:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LogLevel
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LogLevel
  nameWithType: PowertoolsConfigurations.LogLevel
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LogLevel*
  name: LogLevel
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_LogLevel_
  commentId: Overload:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LogLevel
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.LogLevel
  nameWithType: PowertoolsConfigurations.LogLevel
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.MaxDimensions
  name: MaxDimensions
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_MaxDimensions
  commentId: F:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.MaxDimensions
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.MaxDimensions
  nameWithType: PowertoolsConfigurations.MaxDimensions
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.MaxMetrics
  name: MaxMetrics
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_MaxMetrics
  commentId: F:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.MaxMetrics
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.MaxMetrics
  nameWithType: PowertoolsConfigurations.MaxMetrics
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.MetricsNamespace
  name: MetricsNamespace
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_MetricsNamespace
  commentId: P:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.MetricsNamespace
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.MetricsNamespace
  nameWithType: PowertoolsConfigurations.MetricsNamespace
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.MetricsNamespace*
  name: MetricsNamespace
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_MetricsNamespace_
  commentId: Overload:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.MetricsNamespace
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.MetricsNamespace
  nameWithType: PowertoolsConfigurations.MetricsNamespace
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.Service
  name: Service
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_Service
  commentId: P:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.Service
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.Service
  nameWithType: PowertoolsConfigurations.Service
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.Service*
  name: Service
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_Service_
  commentId: Overload:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.Service
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.Service
  nameWithType: PowertoolsConfigurations.Service
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.TracerCaptureError
  name: TracerCaptureError
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_TracerCaptureError
  commentId: P:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.TracerCaptureError
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.TracerCaptureError
  nameWithType: PowertoolsConfigurations.TracerCaptureError
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.TracerCaptureError*
  name: TracerCaptureError
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_TracerCaptureError_
  commentId: Overload:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.TracerCaptureError
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.TracerCaptureError
  nameWithType: PowertoolsConfigurations.TracerCaptureError
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.TracerCaptureResponse
  name: TracerCaptureResponse
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_TracerCaptureResponse
  commentId: P:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.TracerCaptureResponse
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.TracerCaptureResponse
  nameWithType: PowertoolsConfigurations.TracerCaptureResponse
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.TracerCaptureResponse*
  name: TracerCaptureResponse
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_TracerCaptureResponse_
  commentId: Overload:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.TracerCaptureResponse
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.TracerCaptureResponse
  nameWithType: PowertoolsConfigurations.TracerCaptureResponse
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.TracingDisabled
  name: TracingDisabled
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_TracingDisabled
  commentId: P:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.TracingDisabled
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.TracingDisabled
  nameWithType: PowertoolsConfigurations.TracingDisabled
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.TracingDisabled*
  name: TracingDisabled
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_TracingDisabled_
  commentId: Overload:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.TracingDisabled
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.TracingDisabled
  nameWithType: PowertoolsConfigurations.TracingDisabled
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.XRayTraceId
  name: XRayTraceId
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_XRayTraceId
  commentId: P:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.XRayTraceId
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.XRayTraceId
  nameWithType: PowertoolsConfigurations.XRayTraceId
- uid: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.XRayTraceId*
  name: XRayTraceId
  href: api/AWS.Lambda.Powertools.Common.PowertoolsConfigurations.html#AWS_Lambda_Powertools_Common_PowertoolsConfigurations_XRayTraceId_
  commentId: Overload:AWS.Lambda.Powertools.Common.PowertoolsConfigurations.XRayTraceId
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.PowertoolsConfigurations.XRayTraceId
  nameWithType: PowertoolsConfigurations.XRayTraceId
- uid: AWS.Lambda.Powertools.Common.SnakeCaseNamingPolicy
  name: SnakeCaseNamingPolicy
  href: api/AWS.Lambda.Powertools.Common.SnakeCaseNamingPolicy.html
  commentId: T:AWS.Lambda.Powertools.Common.SnakeCaseNamingPolicy
  fullName: AWS.Lambda.Powertools.Common.SnakeCaseNamingPolicy
  nameWithType: SnakeCaseNamingPolicy
- uid: AWS.Lambda.Powertools.Common.SnakeCaseNamingPolicy.ConvertName(System.String)
  name: ConvertName(string)
  href: api/AWS.Lambda.Powertools.Common.SnakeCaseNamingPolicy.html#AWS_Lambda_Powertools_Common_SnakeCaseNamingPolicy_ConvertName_System_String_
  commentId: M:AWS.Lambda.Powertools.Common.SnakeCaseNamingPolicy.ConvertName(System.String)
  name.vb: ConvertName(String)
  fullName: AWS.Lambda.Powertools.Common.SnakeCaseNamingPolicy.ConvertName(string)
  fullName.vb: AWS.Lambda.Powertools.Common.SnakeCaseNamingPolicy.ConvertName(String)
  nameWithType: SnakeCaseNamingPolicy.ConvertName(string)
  nameWithType.vb: SnakeCaseNamingPolicy.ConvertName(String)
- uid: AWS.Lambda.Powertools.Common.SnakeCaseNamingPolicy.ConvertName*
  name: ConvertName
  href: api/AWS.Lambda.Powertools.Common.SnakeCaseNamingPolicy.html#AWS_Lambda_Powertools_Common_SnakeCaseNamingPolicy_ConvertName_
  commentId: Overload:AWS.Lambda.Powertools.Common.SnakeCaseNamingPolicy.ConvertName
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.SnakeCaseNamingPolicy.ConvertName
  nameWithType: SnakeCaseNamingPolicy.ConvertName
- uid: AWS.Lambda.Powertools.Common.SnakeCaseNamingPolicy.Instance
  name: Instance
  href: api/AWS.Lambda.Powertools.Common.SnakeCaseNamingPolicy.html#AWS_Lambda_Powertools_Common_SnakeCaseNamingPolicy_Instance
  commentId: P:AWS.Lambda.Powertools.Common.SnakeCaseNamingPolicy.Instance
  fullName: AWS.Lambda.Powertools.Common.SnakeCaseNamingPolicy.Instance
  nameWithType: SnakeCaseNamingPolicy.Instance
- uid: AWS.Lambda.Powertools.Common.SnakeCaseNamingPolicy.Instance*
  name: Instance
  href: api/AWS.Lambda.Powertools.Common.SnakeCaseNamingPolicy.html#AWS_Lambda_Powertools_Common_SnakeCaseNamingPolicy_Instance_
  commentId: Overload:AWS.Lambda.Powertools.Common.SnakeCaseNamingPolicy.Instance
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.SnakeCaseNamingPolicy.Instance
  nameWithType: SnakeCaseNamingPolicy.Instance
- uid: AWS.Lambda.Powertools.Common.StringUtils
  name: StringUtils
  href: api/AWS.Lambda.Powertools.Common.StringUtils.html
  commentId: T:AWS.Lambda.Powertools.Common.StringUtils
  fullName: AWS.Lambda.Powertools.Common.StringUtils
  nameWithType: StringUtils
- uid: AWS.Lambda.Powertools.Common.StringUtils.ToPascalCase(System.String)
  name: ToPascalCase(string)
  href: api/AWS.Lambda.Powertools.Common.StringUtils.html#AWS_Lambda_Powertools_Common_StringUtils_ToPascalCase_System_String_
  commentId: M:AWS.Lambda.Powertools.Common.StringUtils.ToPascalCase(System.String)
  name.vb: ToPascalCase(String)
  fullName: AWS.Lambda.Powertools.Common.StringUtils.ToPascalCase(string)
  fullName.vb: AWS.Lambda.Powertools.Common.StringUtils.ToPascalCase(String)
  nameWithType: StringUtils.ToPascalCase(string)
  nameWithType.vb: StringUtils.ToPascalCase(String)
- uid: AWS.Lambda.Powertools.Common.StringUtils.ToPascalCase*
  name: ToPascalCase
  href: api/AWS.Lambda.Powertools.Common.StringUtils.html#AWS_Lambda_Powertools_Common_StringUtils_ToPascalCase_
  commentId: Overload:AWS.Lambda.Powertools.Common.StringUtils.ToPascalCase
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.StringUtils.ToPascalCase
  nameWithType: StringUtils.ToPascalCase
- uid: AWS.Lambda.Powertools.Common.StringUtils.ToSnakeCase(System.String)
  name: ToSnakeCase(string)
  href: api/AWS.Lambda.Powertools.Common.StringUtils.html#AWS_Lambda_Powertools_Common_StringUtils_ToSnakeCase_System_String_
  commentId: M:AWS.Lambda.Powertools.Common.StringUtils.ToSnakeCase(System.String)
  name.vb: ToSnakeCase(String)
  fullName: AWS.Lambda.Powertools.Common.StringUtils.ToSnakeCase(string)
  fullName.vb: AWS.Lambda.Powertools.Common.StringUtils.ToSnakeCase(String)
  nameWithType: StringUtils.ToSnakeCase(string)
  nameWithType.vb: StringUtils.ToSnakeCase(String)
- uid: AWS.Lambda.Powertools.Common.StringUtils.ToSnakeCase*
  name: ToSnakeCase
  href: api/AWS.Lambda.Powertools.Common.StringUtils.html#AWS_Lambda_Powertools_Common_StringUtils_ToSnakeCase_
  commentId: Overload:AWS.Lambda.Powertools.Common.StringUtils.ToSnakeCase
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.StringUtils.ToSnakeCase
  nameWithType: StringUtils.ToSnakeCase
- uid: AWS.Lambda.Powertools.Common.SystemWrapper
  name: SystemWrapper
  href: api/AWS.Lambda.Powertools.Common.SystemWrapper.html
  commentId: T:AWS.Lambda.Powertools.Common.SystemWrapper
  fullName: AWS.Lambda.Powertools.Common.SystemWrapper
  nameWithType: SystemWrapper
- uid: AWS.Lambda.Powertools.Common.SystemWrapper.GetEnvironmentVariable(System.String)
  name: GetEnvironmentVariable(string)
  href: api/AWS.Lambda.Powertools.Common.SystemWrapper.html#AWS_Lambda_Powertools_Common_SystemWrapper_GetEnvironmentVariable_System_String_
  commentId: M:AWS.Lambda.Powertools.Common.SystemWrapper.GetEnvironmentVariable(System.String)
  name.vb: GetEnvironmentVariable(String)
  fullName: AWS.Lambda.Powertools.Common.SystemWrapper.GetEnvironmentVariable(string)
  fullName.vb: AWS.Lambda.Powertools.Common.SystemWrapper.GetEnvironmentVariable(String)
  nameWithType: SystemWrapper.GetEnvironmentVariable(string)
  nameWithType.vb: SystemWrapper.GetEnvironmentVariable(String)
- uid: AWS.Lambda.Powertools.Common.SystemWrapper.GetEnvironmentVariable*
  name: GetEnvironmentVariable
  href: api/AWS.Lambda.Powertools.Common.SystemWrapper.html#AWS_Lambda_Powertools_Common_SystemWrapper_GetEnvironmentVariable_
  commentId: Overload:AWS.Lambda.Powertools.Common.SystemWrapper.GetEnvironmentVariable
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.SystemWrapper.GetEnvironmentVariable
  nameWithType: SystemWrapper.GetEnvironmentVariable
- uid: AWS.Lambda.Powertools.Common.SystemWrapper.GetRandom
  name: GetRandom()
  href: api/AWS.Lambda.Powertools.Common.SystemWrapper.html#AWS_Lambda_Powertools_Common_SystemWrapper_GetRandom
  commentId: M:AWS.Lambda.Powertools.Common.SystemWrapper.GetRandom
  fullName: AWS.Lambda.Powertools.Common.SystemWrapper.GetRandom()
  nameWithType: SystemWrapper.GetRandom()
- uid: AWS.Lambda.Powertools.Common.SystemWrapper.GetRandom*
  name: GetRandom
  href: api/AWS.Lambda.Powertools.Common.SystemWrapper.html#AWS_Lambda_Powertools_Common_SystemWrapper_GetRandom_
  commentId: Overload:AWS.Lambda.Powertools.Common.SystemWrapper.GetRandom
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.SystemWrapper.GetRandom
  nameWithType: SystemWrapper.GetRandom
- uid: AWS.Lambda.Powertools.Common.SystemWrapper.Instance
  name: Instance
  href: api/AWS.Lambda.Powertools.Common.SystemWrapper.html#AWS_Lambda_Powertools_Common_SystemWrapper_Instance
  commentId: P:AWS.Lambda.Powertools.Common.SystemWrapper.Instance
  fullName: AWS.Lambda.Powertools.Common.SystemWrapper.Instance
  nameWithType: SystemWrapper.Instance
- uid: AWS.Lambda.Powertools.Common.SystemWrapper.Instance*
  name: Instance
  href: api/AWS.Lambda.Powertools.Common.SystemWrapper.html#AWS_Lambda_Powertools_Common_SystemWrapper_Instance_
  commentId: Overload:AWS.Lambda.Powertools.Common.SystemWrapper.Instance
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.SystemWrapper.Instance
  nameWithType: SystemWrapper.Instance
- uid: AWS.Lambda.Powertools.Common.SystemWrapper.Log(System.String)
  name: Log(string)
  href: api/AWS.Lambda.Powertools.Common.SystemWrapper.html#AWS_Lambda_Powertools_Common_SystemWrapper_Log_System_String_
  commentId: M:AWS.Lambda.Powertools.Common.SystemWrapper.Log(System.String)
  name.vb: Log(String)
  fullName: AWS.Lambda.Powertools.Common.SystemWrapper.Log(string)
  fullName.vb: AWS.Lambda.Powertools.Common.SystemWrapper.Log(String)
  nameWithType: SystemWrapper.Log(string)
  nameWithType.vb: SystemWrapper.Log(String)
- uid: AWS.Lambda.Powertools.Common.SystemWrapper.Log*
  name: Log
  href: api/AWS.Lambda.Powertools.Common.SystemWrapper.html#AWS_Lambda_Powertools_Common_SystemWrapper_Log_
  commentId: Overload:AWS.Lambda.Powertools.Common.SystemWrapper.Log
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.SystemWrapper.Log
  nameWithType: SystemWrapper.Log
- uid: AWS.Lambda.Powertools.Common.SystemWrapper.LogLine(System.String)
  name: LogLine(string)
  href: api/AWS.Lambda.Powertools.Common.SystemWrapper.html#AWS_Lambda_Powertools_Common_SystemWrapper_LogLine_System_String_
  commentId: M:AWS.Lambda.Powertools.Common.SystemWrapper.LogLine(System.String)
  name.vb: LogLine(String)
  fullName: AWS.Lambda.Powertools.Common.SystemWrapper.LogLine(string)
  fullName.vb: AWS.Lambda.Powertools.Common.SystemWrapper.LogLine(String)
  nameWithType: SystemWrapper.LogLine(string)
  nameWithType.vb: SystemWrapper.LogLine(String)
- uid: AWS.Lambda.Powertools.Common.SystemWrapper.LogLine*
  name: LogLine
  href: api/AWS.Lambda.Powertools.Common.SystemWrapper.html#AWS_Lambda_Powertools_Common_SystemWrapper_LogLine_
  commentId: Overload:AWS.Lambda.Powertools.Common.SystemWrapper.LogLine
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.SystemWrapper.LogLine
  nameWithType: SystemWrapper.LogLine
- uid: AWS.Lambda.Powertools.Common.UniversalWrapperAspect
  name: UniversalWrapperAspect
  href: api/AWS.Lambda.Powertools.Common.UniversalWrapperAspect.html
  commentId: T:AWS.Lambda.Powertools.Common.UniversalWrapperAspect
  fullName: AWS.Lambda.Powertools.Common.UniversalWrapperAspect
  nameWithType: UniversalWrapperAspect
- uid: AWS.Lambda.Powertools.Common.UniversalWrapperAspect.Handle(System.Object,System.Type,System.Reflection.MethodBase,System.Func{System.Object[],System.Object},System.String,System.Object[],System.Type,System.Attribute[])
  name: Handle(object, Type, MethodBase, Func<object[], object>, string, object[], Type, Attribute[])
  href: api/AWS.Lambda.Powertools.Common.UniversalWrapperAspect.html#AWS_Lambda_Powertools_Common_UniversalWrapperAspect_Handle_System_Object_System_Type_System_Reflection_MethodBase_System_Func_System_Object___System_Object__System_String_System_Object___System_Type_System_Attribute___
  commentId: M:AWS.Lambda.Powertools.Common.UniversalWrapperAspect.Handle(System.Object,System.Type,System.Reflection.MethodBase,System.Func{System.Object[],System.Object},System.String,System.Object[],System.Type,System.Attribute[])
  name.vb: Handle(Object, Type, MethodBase, Func(Of Object(), Object), String, Object(), Type, Attribute())
  fullName: AWS.Lambda.Powertools.Common.UniversalWrapperAspect.Handle(object, System.Type, System.Reflection.MethodBase, System.Func<object[], object>, string, object[], System.Type, System.Attribute[])
  fullName.vb: AWS.Lambda.Powertools.Common.UniversalWrapperAspect.Handle(Object, System.Type, System.Reflection.MethodBase, System.Func(Of Object(), Object), String, Object(), System.Type, System.Attribute())
  nameWithType: UniversalWrapperAspect.Handle(object, Type, MethodBase, Func<object[], object>, string, object[], Type, Attribute[])
  nameWithType.vb: UniversalWrapperAspect.Handle(Object, Type, MethodBase, Func(Of Object(), Object), String, Object(), Type, Attribute())
- uid: AWS.Lambda.Powertools.Common.UniversalWrapperAspect.Handle*
  name: Handle
  href: api/AWS.Lambda.Powertools.Common.UniversalWrapperAspect.html#AWS_Lambda_Powertools_Common_UniversalWrapperAspect_Handle_
  commentId: Overload:AWS.Lambda.Powertools.Common.UniversalWrapperAspect.Handle
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.UniversalWrapperAspect.Handle
  nameWithType: UniversalWrapperAspect.Handle
- uid: AWS.Lambda.Powertools.Common.UniversalWrapperAttribute
  name: UniversalWrapperAttribute
  href: api/AWS.Lambda.Powertools.Common.UniversalWrapperAttribute.html
  commentId: T:AWS.Lambda.Powertools.Common.UniversalWrapperAttribute
  fullName: AWS.Lambda.Powertools.Common.UniversalWrapperAttribute
  nameWithType: UniversalWrapperAttribute
- uid: AWS.Lambda.Powertools.Common.UniversalWrapperAttribute.WrapAsync*
  name: WrapAsync
  href: api/AWS.Lambda.Powertools.Common.UniversalWrapperAttribute.html#AWS_Lambda_Powertools_Common_UniversalWrapperAttribute_WrapAsync_
  commentId: Overload:AWS.Lambda.Powertools.Common.UniversalWrapperAttribute.WrapAsync
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.UniversalWrapperAttribute.WrapAsync
  nameWithType: UniversalWrapperAttribute.WrapAsync
- uid: AWS.Lambda.Powertools.Common.UniversalWrapperAttribute.WrapAsync``1(System.Func{System.Object[],System.Threading.Tasks.Task{``0}},System.Object[],AWS.Lambda.Powertools.Common.AspectEventArgs)
  name: WrapAsync<T>(Func<object[], Task<T>>, object[], AspectEventArgs)
  href: api/AWS.Lambda.Powertools.Common.UniversalWrapperAttribute.html#AWS_Lambda_Powertools_Common_UniversalWrapperAttribute_WrapAsync__1_System_Func_System_Object___System_Threading_Tasks_Task___0___System_Object___AWS_Lambda_Powertools_Common_AspectEventArgs_
  commentId: M:AWS.Lambda.Powertools.Common.UniversalWrapperAttribute.WrapAsync``1(System.Func{System.Object[],System.Threading.Tasks.Task{``0}},System.Object[],AWS.Lambda.Powertools.Common.AspectEventArgs)
  name.vb: WrapAsync(Of T)(Func(Of Object(), Task(Of T)), Object(), AspectEventArgs)
  fullName: AWS.Lambda.Powertools.Common.UniversalWrapperAttribute.WrapAsync<T>(System.Func<object[], System.Threading.Tasks.Task<T>>, object[], AWS.Lambda.Powertools.Common.AspectEventArgs)
  fullName.vb: AWS.Lambda.Powertools.Common.UniversalWrapperAttribute.WrapAsync(Of T)(System.Func(Of Object(), System.Threading.Tasks.Task(Of T)), Object(), AWS.Lambda.Powertools.Common.AspectEventArgs)
  nameWithType: UniversalWrapperAttribute.WrapAsync<T>(Func<object[], Task<T>>, object[], AspectEventArgs)
  nameWithType.vb: UniversalWrapperAttribute.WrapAsync(Of T)(Func(Of Object(), Task(Of T)), Object(), AspectEventArgs)
- uid: AWS.Lambda.Powertools.Common.UniversalWrapperAttribute.WrapSync*
  name: WrapSync
  href: api/AWS.Lambda.Powertools.Common.UniversalWrapperAttribute.html#AWS_Lambda_Powertools_Common_UniversalWrapperAttribute_WrapSync_
  commentId: Overload:AWS.Lambda.Powertools.Common.UniversalWrapperAttribute.WrapSync
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Common.UniversalWrapperAttribute.WrapSync
  nameWithType: UniversalWrapperAttribute.WrapSync
- uid: AWS.Lambda.Powertools.Common.UniversalWrapperAttribute.WrapSync``1(System.Func{System.Object[],``0},System.Object[],AWS.Lambda.Powertools.Common.AspectEventArgs)
  name: WrapSync<T>(Func<object[], T>, object[], AspectEventArgs)
  href: api/AWS.Lambda.Powertools.Common.UniversalWrapperAttribute.html#AWS_Lambda_Powertools_Common_UniversalWrapperAttribute_WrapSync__1_System_Func_System_Object_____0__System_Object___AWS_Lambda_Powertools_Common_AspectEventArgs_
  commentId: M:AWS.Lambda.Powertools.Common.UniversalWrapperAttribute.WrapSync``1(System.Func{System.Object[],``0},System.Object[],AWS.Lambda.Powertools.Common.AspectEventArgs)
  name.vb: WrapSync(Of T)(Func(Of Object(), T), Object(), AspectEventArgs)
  fullName: AWS.Lambda.Powertools.Common.UniversalWrapperAttribute.WrapSync<T>(System.Func<object[], T>, object[], AWS.Lambda.Powertools.Common.AspectEventArgs)
  fullName.vb: AWS.Lambda.Powertools.Common.UniversalWrapperAttribute.WrapSync(Of T)(System.Func(Of Object(), T), Object(), AWS.Lambda.Powertools.Common.AspectEventArgs)
  nameWithType: UniversalWrapperAttribute.WrapSync<T>(Func<object[], T>, object[], AspectEventArgs)
  nameWithType.vb: UniversalWrapperAttribute.WrapSync(Of T)(Func(Of Object(), T), Object(), AspectEventArgs)
- uid: AWS.Lambda.Powertools.Logging
  name: AWS.Lambda.Powertools.Logging
  href: api/AWS.Lambda.Powertools.Logging.html
  commentId: N:AWS.Lambda.Powertools.Logging
  fullName: AWS.Lambda.Powertools.Logging
  nameWithType: AWS.Lambda.Powertools.Logging
- uid: AWS.Lambda.Powertools.Logging.CorrelationIdPaths
  name: CorrelationIdPaths
  href: api/AWS.Lambda.Powertools.Logging.CorrelationIdPaths.html
  commentId: T:AWS.Lambda.Powertools.Logging.CorrelationIdPaths
  fullName: AWS.Lambda.Powertools.Logging.CorrelationIdPaths
  nameWithType: CorrelationIdPaths
- uid: AWS.Lambda.Powertools.Logging.CorrelationIdPaths.ApiGatewayHttp
  name: ApiGatewayHttp
  href: api/AWS.Lambda.Powertools.Logging.CorrelationIdPaths.html#AWS_Lambda_Powertools_Logging_CorrelationIdPaths_ApiGatewayHttp
  commentId: F:AWS.Lambda.Powertools.Logging.CorrelationIdPaths.ApiGatewayHttp
  fullName: AWS.Lambda.Powertools.Logging.CorrelationIdPaths.ApiGatewayHttp
  nameWithType: CorrelationIdPaths.ApiGatewayHttp
- uid: AWS.Lambda.Powertools.Logging.CorrelationIdPaths.ApiGatewayRest
  name: ApiGatewayRest
  href: api/AWS.Lambda.Powertools.Logging.CorrelationIdPaths.html#AWS_Lambda_Powertools_Logging_CorrelationIdPaths_ApiGatewayRest
  commentId: F:AWS.Lambda.Powertools.Logging.CorrelationIdPaths.ApiGatewayRest
  fullName: AWS.Lambda.Powertools.Logging.CorrelationIdPaths.ApiGatewayRest
  nameWithType: CorrelationIdPaths.ApiGatewayRest
- uid: AWS.Lambda.Powertools.Logging.CorrelationIdPaths.ApplicationLoadBalancer
  name: ApplicationLoadBalancer
  href: api/AWS.Lambda.Powertools.Logging.CorrelationIdPaths.html#AWS_Lambda_Powertools_Logging_CorrelationIdPaths_ApplicationLoadBalancer
  commentId: F:AWS.Lambda.Powertools.Logging.CorrelationIdPaths.ApplicationLoadBalancer
  fullName: AWS.Lambda.Powertools.Logging.CorrelationIdPaths.ApplicationLoadBalancer
  nameWithType: CorrelationIdPaths.ApplicationLoadBalancer
- uid: AWS.Lambda.Powertools.Logging.CorrelationIdPaths.EventBridge
  name: EventBridge
  href: api/AWS.Lambda.Powertools.Logging.CorrelationIdPaths.html#AWS_Lambda_Powertools_Logging_CorrelationIdPaths_EventBridge
  commentId: F:AWS.Lambda.Powertools.Logging.CorrelationIdPaths.EventBridge
  fullName: AWS.Lambda.Powertools.Logging.CorrelationIdPaths.EventBridge
  nameWithType: CorrelationIdPaths.EventBridge
- uid: AWS.Lambda.Powertools.Logging.Internal
  name: AWS.Lambda.Powertools.Logging.Internal
  href: api/AWS.Lambda.Powertools.Logging.Internal.html
  commentId: N:AWS.Lambda.Powertools.Logging.Internal
  fullName: AWS.Lambda.Powertools.Logging.Internal
  nameWithType: AWS.Lambda.Powertools.Logging.Internal
- uid: AWS.Lambda.Powertools.Logging.Internal.Converters
  name: AWS.Lambda.Powertools.Logging.Internal.Converters
  href: api/AWS.Lambda.Powertools.Logging.Internal.Converters.html
  commentId: N:AWS.Lambda.Powertools.Logging.Internal.Converters
  fullName: AWS.Lambda.Powertools.Logging.Internal.Converters
  nameWithType: AWS.Lambda.Powertools.Logging.Internal.Converters
- uid: AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter
  name: ConstantClassConverter
  href: api/AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.html
  commentId: T:AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter
  fullName: AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter
  nameWithType: ConstantClassConverter
- uid: AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.CanConvert(System.Type)
  name: CanConvert(Type)
  href: api/AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.html#AWS_Lambda_Powertools_Logging_Internal_Converters_ConstantClassConverter_CanConvert_System_Type_
  commentId: M:AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.CanConvert(System.Type)
  fullName: AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.CanConvert(System.Type)
  nameWithType: ConstantClassConverter.CanConvert(Type)
- uid: AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.CanConvert*
  name: CanConvert
  href: api/AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.html#AWS_Lambda_Powertools_Logging_Internal_Converters_ConstantClassConverter_CanConvert_
  commentId: Overload:AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.CanConvert
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.CanConvert
  nameWithType: ConstantClassConverter.CanConvert
- uid: AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  name: Read(ref Utf8JsonReader, Type, JsonSerializerOptions)
  href: api/AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.html#AWS_Lambda_Powertools_Logging_Internal_Converters_ConstantClassConverter_Read_System_Text_Json_Utf8JsonReader__System_Type_System_Text_Json_JsonSerializerOptions_
  commentId: M:AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  name.vb: Read(Utf8JsonReader, Type, JsonSerializerOptions)
  fullName: AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.Read(ref System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions)
  fullName.vb: AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.Read(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions)
  nameWithType: ConstantClassConverter.Read(ref Utf8JsonReader, Type, JsonSerializerOptions)
  nameWithType.vb: ConstantClassConverter.Read(Utf8JsonReader, Type, JsonSerializerOptions)
- uid: AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.Read*
  name: Read
  href: api/AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.html#AWS_Lambda_Powertools_Logging_Internal_Converters_ConstantClassConverter_Read_
  commentId: Overload:AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.Read
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.Read
  nameWithType: ConstantClassConverter.Read
- uid: AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.Write(System.Text.Json.Utf8JsonWriter,System.Object,System.Text.Json.JsonSerializerOptions)
  name: Write(Utf8JsonWriter, object, JsonSerializerOptions)
  href: api/AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.html#AWS_Lambda_Powertools_Logging_Internal_Converters_ConstantClassConverter_Write_System_Text_Json_Utf8JsonWriter_System_Object_System_Text_Json_JsonSerializerOptions_
  commentId: M:AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.Write(System.Text.Json.Utf8JsonWriter,System.Object,System.Text.Json.JsonSerializerOptions)
  name.vb: Write(Utf8JsonWriter, Object, JsonSerializerOptions)
  fullName: AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.Write(System.Text.Json.Utf8JsonWriter, object, System.Text.Json.JsonSerializerOptions)
  fullName.vb: AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.Write(System.Text.Json.Utf8JsonWriter, Object, System.Text.Json.JsonSerializerOptions)
  nameWithType: ConstantClassConverter.Write(Utf8JsonWriter, object, JsonSerializerOptions)
  nameWithType.vb: ConstantClassConverter.Write(Utf8JsonWriter, Object, JsonSerializerOptions)
- uid: AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.Write*
  name: Write
  href: api/AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.html#AWS_Lambda_Powertools_Logging_Internal_Converters_ConstantClassConverter_Write_
  commentId: Overload:AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.Write
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.Internal.Converters.ConstantClassConverter.Write
  nameWithType: ConstantClassConverter.Write
- uid: AWS.Lambda.Powertools.Logging.Internal.LoggerProvider
  name: LoggerProvider
  href: api/AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.html
  commentId: T:AWS.Lambda.Powertools.Logging.Internal.LoggerProvider
  fullName: AWS.Lambda.Powertools.Logging.Internal.LoggerProvider
  nameWithType: LoggerProvider
- uid: AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.#ctor(IOptions{AWS.Lambda.Powertools.Logging.LoggerConfiguration})
  name: LoggerProvider(IOptions<LoggerConfiguration>)
  href: api/AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.html#AWS_Lambda_Powertools_Logging_Internal_LoggerProvider__ctor_IOptions_AWS_Lambda_Powertools_Logging_LoggerConfiguration__
  commentId: M:AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.#ctor(IOptions{AWS.Lambda.Powertools.Logging.LoggerConfiguration})
  name.vb: New(IOptions(Of LoggerConfiguration))
  fullName: AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.LoggerProvider(IOptions<AWS.Lambda.Powertools.Logging.LoggerConfiguration>)
  fullName.vb: AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.New(IOptions(Of AWS.Lambda.Powertools.Logging.LoggerConfiguration))
  nameWithType: LoggerProvider.LoggerProvider(IOptions<LoggerConfiguration>)
  nameWithType.vb: LoggerProvider.New(IOptions(Of LoggerConfiguration))
- uid: AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.#ctor*
  name: LoggerProvider
  href: api/AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.html#AWS_Lambda_Powertools_Logging_Internal_LoggerProvider__ctor_
  commentId: Overload:AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.LoggerProvider
  fullName.vb: AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.New
  nameWithType: LoggerProvider.LoggerProvider
  nameWithType.vb: LoggerProvider.New
- uid: AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.CreateLogger(System.String)
  name: CreateLogger(string)
  href: api/AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.html#AWS_Lambda_Powertools_Logging_Internal_LoggerProvider_CreateLogger_System_String_
  commentId: M:AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.CreateLogger(System.String)
  name.vb: CreateLogger(String)
  fullName: AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.CreateLogger(string)
  fullName.vb: AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.CreateLogger(String)
  nameWithType: LoggerProvider.CreateLogger(string)
  nameWithType.vb: LoggerProvider.CreateLogger(String)
- uid: AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.CreateLogger*
  name: CreateLogger
  href: api/AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.html#AWS_Lambda_Powertools_Logging_Internal_LoggerProvider_CreateLogger_
  commentId: Overload:AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.CreateLogger
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.CreateLogger
  nameWithType: LoggerProvider.CreateLogger
- uid: AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.Dispose
  name: Dispose()
  href: api/AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.html#AWS_Lambda_Powertools_Logging_Internal_LoggerProvider_Dispose
  commentId: M:AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.Dispose
  fullName: AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.Dispose()
  nameWithType: LoggerProvider.Dispose()
- uid: AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.Dispose*
  name: Dispose
  href: api/AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.html#AWS_Lambda_Powertools_Logging_Internal_LoggerProvider_Dispose_
  commentId: Overload:AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.Dispose
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.Internal.LoggerProvider.Dispose
  nameWithType: LoggerProvider.Dispose
- uid: AWS.Lambda.Powertools.Logging.Logger
  name: Logger
  href: api/AWS.Lambda.Powertools.Logging.Logger.html
  commentId: T:AWS.Lambda.Powertools.Logging.Logger
  fullName: AWS.Lambda.Powertools.Logging.Logger
  nameWithType: Logger
- uid: AWS.Lambda.Powertools.Logging.Logger.AppendKey(System.String,System.Object)
  name: AppendKey(string, object)
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_AppendKey_System_String_System_Object_
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.AppendKey(System.String,System.Object)
  name.vb: AppendKey(String, Object)
  fullName: AWS.Lambda.Powertools.Logging.Logger.AppendKey(string, object)
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.AppendKey(String, Object)
  nameWithType: Logger.AppendKey(string, object)
  nameWithType.vb: Logger.AppendKey(String, Object)
- uid: AWS.Lambda.Powertools.Logging.Logger.AppendKey*
  name: AppendKey
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_AppendKey_
  commentId: Overload:AWS.Lambda.Powertools.Logging.Logger.AppendKey
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.Logger.AppendKey
  nameWithType: Logger.AppendKey
- uid: AWS.Lambda.Powertools.Logging.Logger.AppendKeys(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})
  name: AppendKeys(IEnumerable<KeyValuePair<string, object>>)
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_AppendKeys_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.AppendKeys(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})
  name.vb: AppendKeys(IEnumerable(Of KeyValuePair(Of String, Object)))
  fullName: AWS.Lambda.Powertools.Logging.Logger.AppendKeys(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>)
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.AppendKeys(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, Object)))
  nameWithType: Logger.AppendKeys(IEnumerable<KeyValuePair<string, object>>)
  nameWithType.vb: Logger.AppendKeys(IEnumerable(Of KeyValuePair(Of String, Object)))
- uid: AWS.Lambda.Powertools.Logging.Logger.AppendKeys(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name: AppendKeys(IEnumerable<KeyValuePair<string, string>>)
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_AppendKeys_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.AppendKeys(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name.vb: AppendKeys(IEnumerable(Of KeyValuePair(Of String, String)))
  fullName: AWS.Lambda.Powertools.Logging.Logger.AppendKeys(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.AppendKeys(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, String)))
  nameWithType: Logger.AppendKeys(IEnumerable<KeyValuePair<string, string>>)
  nameWithType.vb: Logger.AppendKeys(IEnumerable(Of KeyValuePair(Of String, String)))
- uid: AWS.Lambda.Powertools.Logging.Logger.AppendKeys*
  name: AppendKeys
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_AppendKeys_
  commentId: Overload:AWS.Lambda.Powertools.Logging.Logger.AppendKeys
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.Logger.AppendKeys
  nameWithType: Logger.AppendKeys
- uid: AWS.Lambda.Powertools.Logging.Logger.Create(System.String)
  name: Create(string)
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_Create_System_String_
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.Create(System.String)
  name.vb: Create(String)
  fullName: AWS.Lambda.Powertools.Logging.Logger.Create(string)
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.Create(String)
  nameWithType: Logger.Create(string)
  nameWithType.vb: Logger.Create(String)
- uid: AWS.Lambda.Powertools.Logging.Logger.Create*
  name: Create
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_Create_
  commentId: Overload:AWS.Lambda.Powertools.Logging.Logger.Create
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.Logger.Create
  nameWithType: Logger.Create
- uid: AWS.Lambda.Powertools.Logging.Logger.Create``1
  name: Create<T>()
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_Create__1
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.Create``1
  name.vb: Create(Of T)()
  fullName: AWS.Lambda.Powertools.Logging.Logger.Create<T>()
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.Create(Of T)()
  nameWithType: Logger.Create<T>()
  nameWithType.vb: Logger.Create(Of T)()
- uid: AWS.Lambda.Powertools.Logging.Logger.GetAllKeys
  name: GetAllKeys()
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_GetAllKeys
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.GetAllKeys
  fullName: AWS.Lambda.Powertools.Logging.Logger.GetAllKeys()
  nameWithType: Logger.GetAllKeys()
- uid: AWS.Lambda.Powertools.Logging.Logger.GetAllKeys*
  name: GetAllKeys
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_GetAllKeys_
  commentId: Overload:AWS.Lambda.Powertools.Logging.Logger.GetAllKeys
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.Logger.GetAllKeys
  nameWithType: Logger.GetAllKeys
- uid: AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel,EventId,System.Exception,System.String,System.Object[])
  name: Log(LogLevel, EventId, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_Log_LogLevel_EventId_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel,EventId,System.Exception,System.String,System.Object[])
  name.vb: Log(LogLevel, EventId, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel, EventId, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel, EventId, System.Exception, String, ParamArray Object())
  nameWithType: Logger.Log(LogLevel, EventId, Exception, string, params object[])
  nameWithType.vb: Logger.Log(LogLevel, EventId, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel,EventId,System.String,System.Object[])
  name: Log(LogLevel, EventId, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_Log_LogLevel_EventId_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel,EventId,System.String,System.Object[])
  name.vb: Log(LogLevel, EventId, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel, EventId, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel, EventId, String, ParamArray Object())
  nameWithType: Logger.Log(LogLevel, EventId, string, params object[])
  nameWithType.vb: Logger.Log(LogLevel, EventId, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel,System.Exception,System.String,System.Object[])
  name: Log(LogLevel, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_Log_LogLevel_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel,System.Exception,System.String,System.Object[])
  name.vb: Log(LogLevel, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel, System.Exception, String, ParamArray Object())
  nameWithType: Logger.Log(LogLevel, Exception, string, params object[])
  nameWithType.vb: Logger.Log(LogLevel, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel,System.Exception)
  name: Log(LogLevel, Exception)
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_Log_LogLevel_System_Exception_
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel,System.Exception)
  fullName: AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel, System.Exception)
  nameWithType: Logger.Log(LogLevel, Exception)
- uid: AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel,System.Object)
  name: Log(LogLevel, object)
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_Log_LogLevel_System_Object_
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel,System.Object)
  name.vb: Log(LogLevel, Object)
  fullName: AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel, object)
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel, Object)
  nameWithType: Logger.Log(LogLevel, object)
  nameWithType.vb: Logger.Log(LogLevel, Object)
- uid: AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel,System.String,System.Object[])
  name: Log(LogLevel, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_Log_LogLevel_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel,System.String,System.Object[])
  name.vb: Log(LogLevel, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.Log(LogLevel, String, ParamArray Object())
  nameWithType: Logger.Log(LogLevel, string, params object[])
  nameWithType.vb: Logger.Log(LogLevel, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.Log*
  name: Log
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_Log_
  commentId: Overload:AWS.Lambda.Powertools.Logging.Logger.Log
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.Logger.Log
  nameWithType: Logger.Log
- uid: AWS.Lambda.Powertools.Logging.Logger.Log``1(LogLevel,``0,EventId,System.Exception,System.String,System.Object[])
  name: Log<T>(LogLevel, T, EventId, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_Log__1_LogLevel___0_EventId_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.Log``1(LogLevel,``0,EventId,System.Exception,System.String,System.Object[])
  name.vb: Log(Of T)(LogLevel, T, EventId, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.Log<T>(LogLevel, T, EventId, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.Log(Of T)(LogLevel, T, EventId, System.Exception, String, ParamArray Object())
  nameWithType: Logger.Log<T>(LogLevel, T, EventId, Exception, string, params object[])
  nameWithType.vb: Logger.Log(Of T)(LogLevel, T, EventId, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.Log``1(LogLevel,``0,EventId,System.String,System.Object[])
  name: Log<T>(LogLevel, T, EventId, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_Log__1_LogLevel___0_EventId_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.Log``1(LogLevel,``0,EventId,System.String,System.Object[])
  name.vb: Log(Of T)(LogLevel, T, EventId, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.Log<T>(LogLevel, T, EventId, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.Log(Of T)(LogLevel, T, EventId, String, ParamArray Object())
  nameWithType: Logger.Log<T>(LogLevel, T, EventId, string, params object[])
  nameWithType.vb: Logger.Log(Of T)(LogLevel, T, EventId, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.Log``1(LogLevel,``0,System.Exception,System.String,System.Object[])
  name: Log<T>(LogLevel, T, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_Log__1_LogLevel___0_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.Log``1(LogLevel,``0,System.Exception,System.String,System.Object[])
  name.vb: Log(Of T)(LogLevel, T, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.Log<T>(LogLevel, T, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.Log(Of T)(LogLevel, T, System.Exception, String, ParamArray Object())
  nameWithType: Logger.Log<T>(LogLevel, T, Exception, string, params object[])
  nameWithType.vb: Logger.Log(Of T)(LogLevel, T, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.Log``1(LogLevel,``0,System.String,System.Object[])
  name: Log<T>(LogLevel, T, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_Log__1_LogLevel___0_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.Log``1(LogLevel,``0,System.String,System.Object[])
  name.vb: Log(Of T)(LogLevel, T, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.Log<T>(LogLevel, T, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.Log(Of T)(LogLevel, T, String, ParamArray Object())
  nameWithType: Logger.Log<T>(LogLevel, T, string, params object[])
  nameWithType.vb: Logger.Log(Of T)(LogLevel, T, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.Log``1(LogLevel,EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  name: Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, string>)
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_Log__1_LogLevel_EventId___0_System_Exception_System_Func___0_System_Exception_System_String__
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.Log``1(LogLevel,EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  name.vb: Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
  fullName: AWS.Lambda.Powertools.Logging.Logger.Log<TState>(LogLevel, EventId, TState, System.Exception, System.Func<TState, System.Exception, string>)
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.Log(Of TState)(LogLevel, EventId, TState, System.Exception, System.Func(Of TState, System.Exception, String))
  nameWithType: Logger.Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, string>)
  nameWithType.vb: Logger.Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
- uid: AWS.Lambda.Powertools.Logging.Logger.LogCritical(EventId,System.Exception,System.String,System.Object[])
  name: LogCritical(EventId, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogCritical_EventId_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogCritical(EventId,System.Exception,System.String,System.Object[])
  name.vb: LogCritical(EventId, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogCritical(EventId, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogCritical(EventId, System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogCritical(EventId, Exception, string, params object[])
  nameWithType.vb: Logger.LogCritical(EventId, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogCritical(EventId,System.String,System.Object[])
  name: LogCritical(EventId, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogCritical_EventId_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogCritical(EventId,System.String,System.Object[])
  name.vb: LogCritical(EventId, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogCritical(EventId, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogCritical(EventId, String, ParamArray Object())
  nameWithType: Logger.LogCritical(EventId, string, params object[])
  nameWithType.vb: Logger.LogCritical(EventId, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogCritical(System.Exception,System.String,System.Object[])
  name: LogCritical(Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogCritical_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogCritical(System.Exception,System.String,System.Object[])
  name.vb: LogCritical(Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogCritical(System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogCritical(System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogCritical(Exception, string, params object[])
  nameWithType.vb: Logger.LogCritical(Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogCritical(System.Exception)
  name: LogCritical(Exception)
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogCritical_System_Exception_
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogCritical(System.Exception)
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogCritical(System.Exception)
  nameWithType: Logger.LogCritical(Exception)
- uid: AWS.Lambda.Powertools.Logging.Logger.LogCritical(System.Object)
  name: LogCritical(object)
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogCritical_System_Object_
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogCritical(System.Object)
  name.vb: LogCritical(Object)
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogCritical(object)
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogCritical(Object)
  nameWithType: Logger.LogCritical(object)
  nameWithType.vb: Logger.LogCritical(Object)
- uid: AWS.Lambda.Powertools.Logging.Logger.LogCritical(System.String,System.Object[])
  name: LogCritical(string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogCritical_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogCritical(System.String,System.Object[])
  name.vb: LogCritical(String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogCritical(string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogCritical(String, ParamArray Object())
  nameWithType: Logger.LogCritical(string, params object[])
  nameWithType.vb: Logger.LogCritical(String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogCritical*
  name: LogCritical
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogCritical_
  commentId: Overload:AWS.Lambda.Powertools.Logging.Logger.LogCritical
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogCritical
  nameWithType: Logger.LogCritical
- uid: AWS.Lambda.Powertools.Logging.Logger.LogCritical``1(``0,EventId,System.Exception,System.String,System.Object[])
  name: LogCritical<T>(T, EventId, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogCritical__1___0_EventId_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogCritical``1(``0,EventId,System.Exception,System.String,System.Object[])
  name.vb: LogCritical(Of T)(T, EventId, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogCritical<T>(T, EventId, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogCritical(Of T)(T, EventId, System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogCritical<T>(T, EventId, Exception, string, params object[])
  nameWithType.vb: Logger.LogCritical(Of T)(T, EventId, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogCritical``1(``0,EventId,System.String,System.Object[])
  name: LogCritical<T>(T, EventId, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogCritical__1___0_EventId_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogCritical``1(``0,EventId,System.String,System.Object[])
  name.vb: LogCritical(Of T)(T, EventId, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogCritical<T>(T, EventId, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogCritical(Of T)(T, EventId, String, ParamArray Object())
  nameWithType: Logger.LogCritical<T>(T, EventId, string, params object[])
  nameWithType.vb: Logger.LogCritical(Of T)(T, EventId, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogCritical``1(``0,System.Exception,System.String,System.Object[])
  name: LogCritical<T>(T, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogCritical__1___0_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogCritical``1(``0,System.Exception,System.String,System.Object[])
  name.vb: LogCritical(Of T)(T, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogCritical<T>(T, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogCritical(Of T)(T, System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogCritical<T>(T, Exception, string, params object[])
  nameWithType.vb: Logger.LogCritical(Of T)(T, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogCritical``1(``0,System.String,System.Object[])
  name: LogCritical<T>(T, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogCritical__1___0_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogCritical``1(``0,System.String,System.Object[])
  name.vb: LogCritical(Of T)(T, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogCritical<T>(T, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogCritical(Of T)(T, String, ParamArray Object())
  nameWithType: Logger.LogCritical<T>(T, string, params object[])
  nameWithType.vb: Logger.LogCritical(Of T)(T, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogDebug(EventId,System.Exception,System.String,System.Object[])
  name: LogDebug(EventId, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogDebug_EventId_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogDebug(EventId,System.Exception,System.String,System.Object[])
  name.vb: LogDebug(EventId, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogDebug(EventId, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogDebug(EventId, System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogDebug(EventId, Exception, string, params object[])
  nameWithType.vb: Logger.LogDebug(EventId, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogDebug(EventId,System.String,System.Object[])
  name: LogDebug(EventId, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogDebug_EventId_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogDebug(EventId,System.String,System.Object[])
  name.vb: LogDebug(EventId, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogDebug(EventId, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogDebug(EventId, String, ParamArray Object())
  nameWithType: Logger.LogDebug(EventId, string, params object[])
  nameWithType.vb: Logger.LogDebug(EventId, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogDebug(System.Exception,System.String,System.Object[])
  name: LogDebug(Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogDebug_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogDebug(System.Exception,System.String,System.Object[])
  name.vb: LogDebug(Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogDebug(System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogDebug(System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogDebug(Exception, string, params object[])
  nameWithType.vb: Logger.LogDebug(Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogDebug(System.Exception)
  name: LogDebug(Exception)
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogDebug_System_Exception_
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogDebug(System.Exception)
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogDebug(System.Exception)
  nameWithType: Logger.LogDebug(Exception)
- uid: AWS.Lambda.Powertools.Logging.Logger.LogDebug(System.Object)
  name: LogDebug(object)
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogDebug_System_Object_
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogDebug(System.Object)
  name.vb: LogDebug(Object)
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogDebug(object)
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogDebug(Object)
  nameWithType: Logger.LogDebug(object)
  nameWithType.vb: Logger.LogDebug(Object)
- uid: AWS.Lambda.Powertools.Logging.Logger.LogDebug(System.String,System.Object[])
  name: LogDebug(string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogDebug_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogDebug(System.String,System.Object[])
  name.vb: LogDebug(String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogDebug(string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogDebug(String, ParamArray Object())
  nameWithType: Logger.LogDebug(string, params object[])
  nameWithType.vb: Logger.LogDebug(String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogDebug*
  name: LogDebug
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogDebug_
  commentId: Overload:AWS.Lambda.Powertools.Logging.Logger.LogDebug
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogDebug
  nameWithType: Logger.LogDebug
- uid: AWS.Lambda.Powertools.Logging.Logger.LogDebug``1(``0,EventId,System.Exception,System.String,System.Object[])
  name: LogDebug<T>(T, EventId, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogDebug__1___0_EventId_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogDebug``1(``0,EventId,System.Exception,System.String,System.Object[])
  name.vb: LogDebug(Of T)(T, EventId, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogDebug<T>(T, EventId, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogDebug(Of T)(T, EventId, System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogDebug<T>(T, EventId, Exception, string, params object[])
  nameWithType.vb: Logger.LogDebug(Of T)(T, EventId, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogDebug``1(``0,EventId,System.String,System.Object[])
  name: LogDebug<T>(T, EventId, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogDebug__1___0_EventId_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogDebug``1(``0,EventId,System.String,System.Object[])
  name.vb: LogDebug(Of T)(T, EventId, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogDebug<T>(T, EventId, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogDebug(Of T)(T, EventId, String, ParamArray Object())
  nameWithType: Logger.LogDebug<T>(T, EventId, string, params object[])
  nameWithType.vb: Logger.LogDebug(Of T)(T, EventId, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogDebug``1(``0,System.Exception,System.String,System.Object[])
  name: LogDebug<T>(T, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogDebug__1___0_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogDebug``1(``0,System.Exception,System.String,System.Object[])
  name.vb: LogDebug(Of T)(T, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogDebug<T>(T, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogDebug(Of T)(T, System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogDebug<T>(T, Exception, string, params object[])
  nameWithType.vb: Logger.LogDebug(Of T)(T, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogDebug``1(``0,System.String,System.Object[])
  name: LogDebug<T>(T, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogDebug__1___0_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogDebug``1(``0,System.String,System.Object[])
  name.vb: LogDebug(Of T)(T, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogDebug<T>(T, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogDebug(Of T)(T, String, ParamArray Object())
  nameWithType: Logger.LogDebug<T>(T, string, params object[])
  nameWithType.vb: Logger.LogDebug(Of T)(T, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogError(EventId,System.Exception,System.String,System.Object[])
  name: LogError(EventId, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogError_EventId_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogError(EventId,System.Exception,System.String,System.Object[])
  name.vb: LogError(EventId, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogError(EventId, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogError(EventId, System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogError(EventId, Exception, string, params object[])
  nameWithType.vb: Logger.LogError(EventId, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogError(EventId,System.String,System.Object[])
  name: LogError(EventId, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogError_EventId_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogError(EventId,System.String,System.Object[])
  name.vb: LogError(EventId, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogError(EventId, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogError(EventId, String, ParamArray Object())
  nameWithType: Logger.LogError(EventId, string, params object[])
  nameWithType.vb: Logger.LogError(EventId, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogError(System.Exception,System.String,System.Object[])
  name: LogError(Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogError_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogError(System.Exception,System.String,System.Object[])
  name.vb: LogError(Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogError(System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogError(System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogError(Exception, string, params object[])
  nameWithType.vb: Logger.LogError(Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogError(System.Exception)
  name: LogError(Exception)
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogError_System_Exception_
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogError(System.Exception)
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogError(System.Exception)
  nameWithType: Logger.LogError(Exception)
- uid: AWS.Lambda.Powertools.Logging.Logger.LogError(System.Object)
  name: LogError(object)
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogError_System_Object_
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogError(System.Object)
  name.vb: LogError(Object)
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogError(object)
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogError(Object)
  nameWithType: Logger.LogError(object)
  nameWithType.vb: Logger.LogError(Object)
- uid: AWS.Lambda.Powertools.Logging.Logger.LogError(System.String,System.Object[])
  name: LogError(string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogError_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogError(System.String,System.Object[])
  name.vb: LogError(String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogError(string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogError(String, ParamArray Object())
  nameWithType: Logger.LogError(string, params object[])
  nameWithType.vb: Logger.LogError(String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogError*
  name: LogError
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogError_
  commentId: Overload:AWS.Lambda.Powertools.Logging.Logger.LogError
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogError
  nameWithType: Logger.LogError
- uid: AWS.Lambda.Powertools.Logging.Logger.LogError``1(``0,EventId,System.Exception,System.String,System.Object[])
  name: LogError<T>(T, EventId, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogError__1___0_EventId_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogError``1(``0,EventId,System.Exception,System.String,System.Object[])
  name.vb: LogError(Of T)(T, EventId, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogError<T>(T, EventId, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogError(Of T)(T, EventId, System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogError<T>(T, EventId, Exception, string, params object[])
  nameWithType.vb: Logger.LogError(Of T)(T, EventId, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogError``1(``0,EventId,System.String,System.Object[])
  name: LogError<T>(T, EventId, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogError__1___0_EventId_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogError``1(``0,EventId,System.String,System.Object[])
  name.vb: LogError(Of T)(T, EventId, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogError<T>(T, EventId, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogError(Of T)(T, EventId, String, ParamArray Object())
  nameWithType: Logger.LogError<T>(T, EventId, string, params object[])
  nameWithType.vb: Logger.LogError(Of T)(T, EventId, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogError``1(``0,System.Exception,System.String,System.Object[])
  name: LogError<T>(T, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogError__1___0_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogError``1(``0,System.Exception,System.String,System.Object[])
  name.vb: LogError(Of T)(T, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogError<T>(T, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogError(Of T)(T, System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogError<T>(T, Exception, string, params object[])
  nameWithType.vb: Logger.LogError(Of T)(T, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogError``1(``0,System.String,System.Object[])
  name: LogError<T>(T, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogError__1___0_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogError``1(``0,System.String,System.Object[])
  name.vb: LogError(Of T)(T, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogError<T>(T, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogError(Of T)(T, String, ParamArray Object())
  nameWithType: Logger.LogError<T>(T, string, params object[])
  nameWithType.vb: Logger.LogError(Of T)(T, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogInformation(EventId,System.Exception,System.String,System.Object[])
  name: LogInformation(EventId, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogInformation_EventId_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogInformation(EventId,System.Exception,System.String,System.Object[])
  name.vb: LogInformation(EventId, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogInformation(EventId, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogInformation(EventId, System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogInformation(EventId, Exception, string, params object[])
  nameWithType.vb: Logger.LogInformation(EventId, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogInformation(EventId,System.String,System.Object[])
  name: LogInformation(EventId, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogInformation_EventId_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogInformation(EventId,System.String,System.Object[])
  name.vb: LogInformation(EventId, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogInformation(EventId, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogInformation(EventId, String, ParamArray Object())
  nameWithType: Logger.LogInformation(EventId, string, params object[])
  nameWithType.vb: Logger.LogInformation(EventId, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogInformation(System.Exception,System.String,System.Object[])
  name: LogInformation(Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogInformation_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogInformation(System.Exception,System.String,System.Object[])
  name.vb: LogInformation(Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogInformation(System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogInformation(System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogInformation(Exception, string, params object[])
  nameWithType.vb: Logger.LogInformation(Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogInformation(System.Exception)
  name: LogInformation(Exception)
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogInformation_System_Exception_
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogInformation(System.Exception)
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogInformation(System.Exception)
  nameWithType: Logger.LogInformation(Exception)
- uid: AWS.Lambda.Powertools.Logging.Logger.LogInformation(System.Object)
  name: LogInformation(object)
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogInformation_System_Object_
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogInformation(System.Object)
  name.vb: LogInformation(Object)
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogInformation(object)
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogInformation(Object)
  nameWithType: Logger.LogInformation(object)
  nameWithType.vb: Logger.LogInformation(Object)
- uid: AWS.Lambda.Powertools.Logging.Logger.LogInformation(System.String,System.Object[])
  name: LogInformation(string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogInformation_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogInformation(System.String,System.Object[])
  name.vb: LogInformation(String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogInformation(string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogInformation(String, ParamArray Object())
  nameWithType: Logger.LogInformation(string, params object[])
  nameWithType.vb: Logger.LogInformation(String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogInformation*
  name: LogInformation
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogInformation_
  commentId: Overload:AWS.Lambda.Powertools.Logging.Logger.LogInformation
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogInformation
  nameWithType: Logger.LogInformation
- uid: AWS.Lambda.Powertools.Logging.Logger.LogInformation``1(``0,EventId,System.Exception,System.String,System.Object[])
  name: LogInformation<T>(T, EventId, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogInformation__1___0_EventId_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogInformation``1(``0,EventId,System.Exception,System.String,System.Object[])
  name.vb: LogInformation(Of T)(T, EventId, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogInformation<T>(T, EventId, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogInformation(Of T)(T, EventId, System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogInformation<T>(T, EventId, Exception, string, params object[])
  nameWithType.vb: Logger.LogInformation(Of T)(T, EventId, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogInformation``1(``0,EventId,System.String,System.Object[])
  name: LogInformation<T>(T, EventId, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogInformation__1___0_EventId_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogInformation``1(``0,EventId,System.String,System.Object[])
  name.vb: LogInformation(Of T)(T, EventId, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogInformation<T>(T, EventId, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogInformation(Of T)(T, EventId, String, ParamArray Object())
  nameWithType: Logger.LogInformation<T>(T, EventId, string, params object[])
  nameWithType.vb: Logger.LogInformation(Of T)(T, EventId, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogInformation``1(``0,System.Exception,System.String,System.Object[])
  name: LogInformation<T>(T, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogInformation__1___0_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogInformation``1(``0,System.Exception,System.String,System.Object[])
  name.vb: LogInformation(Of T)(T, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogInformation<T>(T, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogInformation(Of T)(T, System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogInformation<T>(T, Exception, string, params object[])
  nameWithType.vb: Logger.LogInformation(Of T)(T, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogInformation``1(``0,System.String,System.Object[])
  name: LogInformation<T>(T, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogInformation__1___0_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogInformation``1(``0,System.String,System.Object[])
  name.vb: LogInformation(Of T)(T, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogInformation<T>(T, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogInformation(Of T)(T, String, ParamArray Object())
  nameWithType: Logger.LogInformation<T>(T, string, params object[])
  nameWithType.vb: Logger.LogInformation(Of T)(T, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogTrace(EventId,System.Exception,System.String,System.Object[])
  name: LogTrace(EventId, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogTrace_EventId_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogTrace(EventId,System.Exception,System.String,System.Object[])
  name.vb: LogTrace(EventId, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogTrace(EventId, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogTrace(EventId, System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogTrace(EventId, Exception, string, params object[])
  nameWithType.vb: Logger.LogTrace(EventId, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogTrace(EventId,System.String,System.Object[])
  name: LogTrace(EventId, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogTrace_EventId_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogTrace(EventId,System.String,System.Object[])
  name.vb: LogTrace(EventId, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogTrace(EventId, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogTrace(EventId, String, ParamArray Object())
  nameWithType: Logger.LogTrace(EventId, string, params object[])
  nameWithType.vb: Logger.LogTrace(EventId, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogTrace(System.Exception,System.String,System.Object[])
  name: LogTrace(Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogTrace_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogTrace(System.Exception,System.String,System.Object[])
  name.vb: LogTrace(Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogTrace(System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogTrace(System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogTrace(Exception, string, params object[])
  nameWithType.vb: Logger.LogTrace(Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogTrace(System.Exception)
  name: LogTrace(Exception)
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogTrace_System_Exception_
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogTrace(System.Exception)
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogTrace(System.Exception)
  nameWithType: Logger.LogTrace(Exception)
- uid: AWS.Lambda.Powertools.Logging.Logger.LogTrace(System.Object)
  name: LogTrace(object)
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogTrace_System_Object_
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogTrace(System.Object)
  name.vb: LogTrace(Object)
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogTrace(object)
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogTrace(Object)
  nameWithType: Logger.LogTrace(object)
  nameWithType.vb: Logger.LogTrace(Object)
- uid: AWS.Lambda.Powertools.Logging.Logger.LogTrace(System.String,System.Object[])
  name: LogTrace(string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogTrace_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogTrace(System.String,System.Object[])
  name.vb: LogTrace(String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogTrace(string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogTrace(String, ParamArray Object())
  nameWithType: Logger.LogTrace(string, params object[])
  nameWithType.vb: Logger.LogTrace(String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogTrace*
  name: LogTrace
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogTrace_
  commentId: Overload:AWS.Lambda.Powertools.Logging.Logger.LogTrace
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogTrace
  nameWithType: Logger.LogTrace
- uid: AWS.Lambda.Powertools.Logging.Logger.LogTrace``1(``0,EventId,System.Exception,System.String,System.Object[])
  name: LogTrace<T>(T, EventId, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogTrace__1___0_EventId_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogTrace``1(``0,EventId,System.Exception,System.String,System.Object[])
  name.vb: LogTrace(Of T)(T, EventId, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogTrace<T>(T, EventId, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogTrace(Of T)(T, EventId, System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogTrace<T>(T, EventId, Exception, string, params object[])
  nameWithType.vb: Logger.LogTrace(Of T)(T, EventId, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogTrace``1(``0,EventId,System.String,System.Object[])
  name: LogTrace<T>(T, EventId, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogTrace__1___0_EventId_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogTrace``1(``0,EventId,System.String,System.Object[])
  name.vb: LogTrace(Of T)(T, EventId, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogTrace<T>(T, EventId, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogTrace(Of T)(T, EventId, String, ParamArray Object())
  nameWithType: Logger.LogTrace<T>(T, EventId, string, params object[])
  nameWithType.vb: Logger.LogTrace(Of T)(T, EventId, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogTrace``1(``0,System.Exception,System.String,System.Object[])
  name: LogTrace<T>(T, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogTrace__1___0_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogTrace``1(``0,System.Exception,System.String,System.Object[])
  name.vb: LogTrace(Of T)(T, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogTrace<T>(T, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogTrace(Of T)(T, System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogTrace<T>(T, Exception, string, params object[])
  nameWithType.vb: Logger.LogTrace(Of T)(T, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogTrace``1(``0,System.String,System.Object[])
  name: LogTrace<T>(T, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogTrace__1___0_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogTrace``1(``0,System.String,System.Object[])
  name.vb: LogTrace(Of T)(T, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogTrace<T>(T, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogTrace(Of T)(T, String, ParamArray Object())
  nameWithType: Logger.LogTrace<T>(T, string, params object[])
  nameWithType.vb: Logger.LogTrace(Of T)(T, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogWarning(EventId,System.Exception,System.String,System.Object[])
  name: LogWarning(EventId, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogWarning_EventId_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogWarning(EventId,System.Exception,System.String,System.Object[])
  name.vb: LogWarning(EventId, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogWarning(EventId, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogWarning(EventId, System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogWarning(EventId, Exception, string, params object[])
  nameWithType.vb: Logger.LogWarning(EventId, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogWarning(EventId,System.String,System.Object[])
  name: LogWarning(EventId, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogWarning_EventId_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogWarning(EventId,System.String,System.Object[])
  name.vb: LogWarning(EventId, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogWarning(EventId, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogWarning(EventId, String, ParamArray Object())
  nameWithType: Logger.LogWarning(EventId, string, params object[])
  nameWithType.vb: Logger.LogWarning(EventId, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogWarning(System.Exception,System.String,System.Object[])
  name: LogWarning(Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogWarning_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogWarning(System.Exception,System.String,System.Object[])
  name.vb: LogWarning(Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogWarning(System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogWarning(System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogWarning(Exception, string, params object[])
  nameWithType.vb: Logger.LogWarning(Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogWarning(System.Exception)
  name: LogWarning(Exception)
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogWarning_System_Exception_
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogWarning(System.Exception)
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogWarning(System.Exception)
  nameWithType: Logger.LogWarning(Exception)
- uid: AWS.Lambda.Powertools.Logging.Logger.LogWarning(System.Object)
  name: LogWarning(object)
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogWarning_System_Object_
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogWarning(System.Object)
  name.vb: LogWarning(Object)
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogWarning(object)
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogWarning(Object)
  nameWithType: Logger.LogWarning(object)
  nameWithType.vb: Logger.LogWarning(Object)
- uid: AWS.Lambda.Powertools.Logging.Logger.LogWarning(System.String,System.Object[])
  name: LogWarning(string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogWarning_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogWarning(System.String,System.Object[])
  name.vb: LogWarning(String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogWarning(string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogWarning(String, ParamArray Object())
  nameWithType: Logger.LogWarning(string, params object[])
  nameWithType.vb: Logger.LogWarning(String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogWarning*
  name: LogWarning
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogWarning_
  commentId: Overload:AWS.Lambda.Powertools.Logging.Logger.LogWarning
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogWarning
  nameWithType: Logger.LogWarning
- uid: AWS.Lambda.Powertools.Logging.Logger.LogWarning``1(``0,EventId,System.Exception,System.String,System.Object[])
  name: LogWarning<T>(T, EventId, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogWarning__1___0_EventId_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogWarning``1(``0,EventId,System.Exception,System.String,System.Object[])
  name.vb: LogWarning(Of T)(T, EventId, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogWarning<T>(T, EventId, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogWarning(Of T)(T, EventId, System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogWarning<T>(T, EventId, Exception, string, params object[])
  nameWithType.vb: Logger.LogWarning(Of T)(T, EventId, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogWarning``1(``0,EventId,System.String,System.Object[])
  name: LogWarning<T>(T, EventId, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogWarning__1___0_EventId_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogWarning``1(``0,EventId,System.String,System.Object[])
  name.vb: LogWarning(Of T)(T, EventId, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogWarning<T>(T, EventId, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogWarning(Of T)(T, EventId, String, ParamArray Object())
  nameWithType: Logger.LogWarning<T>(T, EventId, string, params object[])
  nameWithType.vb: Logger.LogWarning(Of T)(T, EventId, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogWarning``1(``0,System.Exception,System.String,System.Object[])
  name: LogWarning<T>(T, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogWarning__1___0_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogWarning``1(``0,System.Exception,System.String,System.Object[])
  name.vb: LogWarning(Of T)(T, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogWarning<T>(T, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogWarning(Of T)(T, System.Exception, String, ParamArray Object())
  nameWithType: Logger.LogWarning<T>(T, Exception, string, params object[])
  nameWithType.vb: Logger.LogWarning(Of T)(T, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.LogWarning``1(``0,System.String,System.Object[])
  name: LogWarning<T>(T, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_LogWarning__1___0_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.LogWarning``1(``0,System.String,System.Object[])
  name.vb: LogWarning(Of T)(T, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.Logger.LogWarning<T>(T, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.LogWarning(Of T)(T, String, ParamArray Object())
  nameWithType: Logger.LogWarning<T>(T, string, params object[])
  nameWithType.vb: Logger.LogWarning(Of T)(T, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.Logger.RemoveKeys(System.String[])
  name: RemoveKeys(params string[])
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_RemoveKeys_System_String___
  commentId: M:AWS.Lambda.Powertools.Logging.Logger.RemoveKeys(System.String[])
  name.vb: RemoveKeys(ParamArray String())
  fullName: AWS.Lambda.Powertools.Logging.Logger.RemoveKeys(params string[])
  fullName.vb: AWS.Lambda.Powertools.Logging.Logger.RemoveKeys(ParamArray String())
  nameWithType: Logger.RemoveKeys(params string[])
  nameWithType.vb: Logger.RemoveKeys(ParamArray String())
- uid: AWS.Lambda.Powertools.Logging.Logger.RemoveKeys*
  name: RemoveKeys
  href: api/AWS.Lambda.Powertools.Logging.Logger.html#AWS_Lambda_Powertools_Logging_Logger_RemoveKeys_
  commentId: Overload:AWS.Lambda.Powertools.Logging.Logger.RemoveKeys
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.Logger.RemoveKeys
  nameWithType: Logger.RemoveKeys
- uid: AWS.Lambda.Powertools.Logging.LoggerConfiguration
  name: LoggerConfiguration
  href: api/AWS.Lambda.Powertools.Logging.LoggerConfiguration.html
  commentId: T:AWS.Lambda.Powertools.Logging.LoggerConfiguration
  fullName: AWS.Lambda.Powertools.Logging.LoggerConfiguration
  nameWithType: LoggerConfiguration
- uid: AWS.Lambda.Powertools.Logging.LoggerConfiguration.LoggerOutputCase
  name: LoggerOutputCase
  href: api/AWS.Lambda.Powertools.Logging.LoggerConfiguration.html#AWS_Lambda_Powertools_Logging_LoggerConfiguration_LoggerOutputCase
  commentId: P:AWS.Lambda.Powertools.Logging.LoggerConfiguration.LoggerOutputCase
  fullName: AWS.Lambda.Powertools.Logging.LoggerConfiguration.LoggerOutputCase
  nameWithType: LoggerConfiguration.LoggerOutputCase
- uid: AWS.Lambda.Powertools.Logging.LoggerConfiguration.LoggerOutputCase*
  name: LoggerOutputCase
  href: api/AWS.Lambda.Powertools.Logging.LoggerConfiguration.html#AWS_Lambda_Powertools_Logging_LoggerConfiguration_LoggerOutputCase_
  commentId: Overload:AWS.Lambda.Powertools.Logging.LoggerConfiguration.LoggerOutputCase
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.LoggerConfiguration.LoggerOutputCase
  nameWithType: LoggerConfiguration.LoggerOutputCase
- uid: AWS.Lambda.Powertools.Logging.LoggerConfiguration.MinimumLevel
  name: MinimumLevel
  href: api/AWS.Lambda.Powertools.Logging.LoggerConfiguration.html#AWS_Lambda_Powertools_Logging_LoggerConfiguration_MinimumLevel
  commentId: P:AWS.Lambda.Powertools.Logging.LoggerConfiguration.MinimumLevel
  fullName: AWS.Lambda.Powertools.Logging.LoggerConfiguration.MinimumLevel
  nameWithType: LoggerConfiguration.MinimumLevel
- uid: AWS.Lambda.Powertools.Logging.LoggerConfiguration.MinimumLevel*
  name: MinimumLevel
  href: api/AWS.Lambda.Powertools.Logging.LoggerConfiguration.html#AWS_Lambda_Powertools_Logging_LoggerConfiguration_MinimumLevel_
  commentId: Overload:AWS.Lambda.Powertools.Logging.LoggerConfiguration.MinimumLevel
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.LoggerConfiguration.MinimumLevel
  nameWithType: LoggerConfiguration.MinimumLevel
- uid: AWS.Lambda.Powertools.Logging.LoggerConfiguration.SamplingRate
  name: SamplingRate
  href: api/AWS.Lambda.Powertools.Logging.LoggerConfiguration.html#AWS_Lambda_Powertools_Logging_LoggerConfiguration_SamplingRate
  commentId: P:AWS.Lambda.Powertools.Logging.LoggerConfiguration.SamplingRate
  fullName: AWS.Lambda.Powertools.Logging.LoggerConfiguration.SamplingRate
  nameWithType: LoggerConfiguration.SamplingRate
- uid: AWS.Lambda.Powertools.Logging.LoggerConfiguration.SamplingRate*
  name: SamplingRate
  href: api/AWS.Lambda.Powertools.Logging.LoggerConfiguration.html#AWS_Lambda_Powertools_Logging_LoggerConfiguration_SamplingRate_
  commentId: Overload:AWS.Lambda.Powertools.Logging.LoggerConfiguration.SamplingRate
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.LoggerConfiguration.SamplingRate
  nameWithType: LoggerConfiguration.SamplingRate
- uid: AWS.Lambda.Powertools.Logging.LoggerConfiguration.Service
  name: Service
  href: api/AWS.Lambda.Powertools.Logging.LoggerConfiguration.html#AWS_Lambda_Powertools_Logging_LoggerConfiguration_Service
  commentId: P:AWS.Lambda.Powertools.Logging.LoggerConfiguration.Service
  fullName: AWS.Lambda.Powertools.Logging.LoggerConfiguration.Service
  nameWithType: LoggerConfiguration.Service
- uid: AWS.Lambda.Powertools.Logging.LoggerConfiguration.Service*
  name: Service
  href: api/AWS.Lambda.Powertools.Logging.LoggerConfiguration.html#AWS_Lambda_Powertools_Logging_LoggerConfiguration_Service_
  commentId: Overload:AWS.Lambda.Powertools.Logging.LoggerConfiguration.Service
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.LoggerConfiguration.Service
  nameWithType: LoggerConfiguration.Service
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions
  name: LoggerExtensions
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html
  commentId: T:AWS.Lambda.Powertools.Logging.LoggerExtensions
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions
  nameWithType: LoggerExtensions
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.Log(ILogger,LogLevel,System.Exception)
  name: Log(ILogger, LogLevel, Exception)
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_Log_ILogger_LogLevel_System_Exception_
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.Log(ILogger,LogLevel,System.Exception)
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.Log(ILogger, LogLevel, System.Exception)
  nameWithType: LoggerExtensions.Log(ILogger, LogLevel, Exception)
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.Log(ILogger,LogLevel,System.Object)
  name: Log(ILogger, LogLevel, object)
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_Log_ILogger_LogLevel_System_Object_
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.Log(ILogger,LogLevel,System.Object)
  name.vb: Log(ILogger, LogLevel, Object)
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.Log(ILogger, LogLevel, object)
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.Log(ILogger, LogLevel, Object)
  nameWithType: LoggerExtensions.Log(ILogger, LogLevel, object)
  nameWithType.vb: LoggerExtensions.Log(ILogger, LogLevel, Object)
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.Log*
  name: Log
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_Log_
  commentId: Overload:AWS.Lambda.Powertools.Logging.LoggerExtensions.Log
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.Log
  nameWithType: LoggerExtensions.Log
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.Log``1(ILogger,LogLevel,``0,EventId,System.Exception,System.String,System.Object[])
  name: Log<T>(ILogger, LogLevel, T, EventId, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_Log__1_ILogger_LogLevel___0_EventId_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.Log``1(ILogger,LogLevel,``0,EventId,System.Exception,System.String,System.Object[])
  name.vb: Log(Of T)(ILogger, LogLevel, T, EventId, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.Log<T>(ILogger, LogLevel, T, EventId, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.Log(Of T)(ILogger, LogLevel, T, EventId, System.Exception, String, ParamArray Object())
  nameWithType: LoggerExtensions.Log<T>(ILogger, LogLevel, T, EventId, Exception, string, params object[])
  nameWithType.vb: LoggerExtensions.Log(Of T)(ILogger, LogLevel, T, EventId, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.Log``1(ILogger,LogLevel,``0,EventId,System.String,System.Object[])
  name: Log<T>(ILogger, LogLevel, T, EventId, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_Log__1_ILogger_LogLevel___0_EventId_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.Log``1(ILogger,LogLevel,``0,EventId,System.String,System.Object[])
  name.vb: Log(Of T)(ILogger, LogLevel, T, EventId, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.Log<T>(ILogger, LogLevel, T, EventId, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.Log(Of T)(ILogger, LogLevel, T, EventId, String, ParamArray Object())
  nameWithType: LoggerExtensions.Log<T>(ILogger, LogLevel, T, EventId, string, params object[])
  nameWithType.vb: LoggerExtensions.Log(Of T)(ILogger, LogLevel, T, EventId, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.Log``1(ILogger,LogLevel,``0,System.Exception,System.String,System.Object[])
  name: Log<T>(ILogger, LogLevel, T, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_Log__1_ILogger_LogLevel___0_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.Log``1(ILogger,LogLevel,``0,System.Exception,System.String,System.Object[])
  name.vb: Log(Of T)(ILogger, LogLevel, T, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.Log<T>(ILogger, LogLevel, T, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.Log(Of T)(ILogger, LogLevel, T, System.Exception, String, ParamArray Object())
  nameWithType: LoggerExtensions.Log<T>(ILogger, LogLevel, T, Exception, string, params object[])
  nameWithType.vb: LoggerExtensions.Log(Of T)(ILogger, LogLevel, T, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.Log``1(ILogger,LogLevel,``0,System.String,System.Object[])
  name: Log<T>(ILogger, LogLevel, T, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_Log__1_ILogger_LogLevel___0_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.Log``1(ILogger,LogLevel,``0,System.String,System.Object[])
  name.vb: Log(Of T)(ILogger, LogLevel, T, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.Log<T>(ILogger, LogLevel, T, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.Log(Of T)(ILogger, LogLevel, T, String, ParamArray Object())
  nameWithType: LoggerExtensions.Log<T>(ILogger, LogLevel, T, string, params object[])
  nameWithType.vb: LoggerExtensions.Log(Of T)(ILogger, LogLevel, T, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical(ILogger,System.Exception)
  name: LogCritical(ILogger, Exception)
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogCritical_ILogger_System_Exception_
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical(ILogger,System.Exception)
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical(ILogger, System.Exception)
  nameWithType: LoggerExtensions.LogCritical(ILogger, Exception)
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical(ILogger,System.Object)
  name: LogCritical(ILogger, object)
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogCritical_ILogger_System_Object_
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical(ILogger,System.Object)
  name.vb: LogCritical(ILogger, Object)
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical(ILogger, object)
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical(ILogger, Object)
  nameWithType: LoggerExtensions.LogCritical(ILogger, object)
  nameWithType.vb: LoggerExtensions.LogCritical(ILogger, Object)
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical*
  name: LogCritical
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogCritical_
  commentId: Overload:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical
  nameWithType: LoggerExtensions.LogCritical
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical``1(ILogger,``0,EventId,System.Exception,System.String,System.Object[])
  name: LogCritical<T>(ILogger, T, EventId, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogCritical__1_ILogger___0_EventId_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical``1(ILogger,``0,EventId,System.Exception,System.String,System.Object[])
  name.vb: LogCritical(Of T)(ILogger, T, EventId, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical<T>(ILogger, T, EventId, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical(Of T)(ILogger, T, EventId, System.Exception, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogCritical<T>(ILogger, T, EventId, Exception, string, params object[])
  nameWithType.vb: LoggerExtensions.LogCritical(Of T)(ILogger, T, EventId, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical``1(ILogger,``0,EventId,System.String,System.Object[])
  name: LogCritical<T>(ILogger, T, EventId, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogCritical__1_ILogger___0_EventId_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical``1(ILogger,``0,EventId,System.String,System.Object[])
  name.vb: LogCritical(Of T)(ILogger, T, EventId, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical<T>(ILogger, T, EventId, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical(Of T)(ILogger, T, EventId, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogCritical<T>(ILogger, T, EventId, string, params object[])
  nameWithType.vb: LoggerExtensions.LogCritical(Of T)(ILogger, T, EventId, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical``1(ILogger,``0,System.Exception,System.String,System.Object[])
  name: LogCritical<T>(ILogger, T, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogCritical__1_ILogger___0_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical``1(ILogger,``0,System.Exception,System.String,System.Object[])
  name.vb: LogCritical(Of T)(ILogger, T, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical<T>(ILogger, T, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical(Of T)(ILogger, T, System.Exception, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogCritical<T>(ILogger, T, Exception, string, params object[])
  nameWithType.vb: LoggerExtensions.LogCritical(Of T)(ILogger, T, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical``1(ILogger,``0,System.String,System.Object[])
  name: LogCritical<T>(ILogger, T, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogCritical__1_ILogger___0_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical``1(ILogger,``0,System.String,System.Object[])
  name.vb: LogCritical(Of T)(ILogger, T, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical<T>(ILogger, T, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogCritical(Of T)(ILogger, T, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogCritical<T>(ILogger, T, string, params object[])
  nameWithType.vb: LoggerExtensions.LogCritical(Of T)(ILogger, T, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug(ILogger,System.Exception)
  name: LogDebug(ILogger, Exception)
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogDebug_ILogger_System_Exception_
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug(ILogger,System.Exception)
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug(ILogger, System.Exception)
  nameWithType: LoggerExtensions.LogDebug(ILogger, Exception)
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug(ILogger,System.Object)
  name: LogDebug(ILogger, object)
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogDebug_ILogger_System_Object_
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug(ILogger,System.Object)
  name.vb: LogDebug(ILogger, Object)
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug(ILogger, object)
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug(ILogger, Object)
  nameWithType: LoggerExtensions.LogDebug(ILogger, object)
  nameWithType.vb: LoggerExtensions.LogDebug(ILogger, Object)
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug*
  name: LogDebug
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogDebug_
  commentId: Overload:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug
  nameWithType: LoggerExtensions.LogDebug
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug``1(ILogger,``0,EventId,System.Exception,System.String,System.Object[])
  name: LogDebug<T>(ILogger, T, EventId, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogDebug__1_ILogger___0_EventId_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug``1(ILogger,``0,EventId,System.Exception,System.String,System.Object[])
  name.vb: LogDebug(Of T)(ILogger, T, EventId, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug<T>(ILogger, T, EventId, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug(Of T)(ILogger, T, EventId, System.Exception, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogDebug<T>(ILogger, T, EventId, Exception, string, params object[])
  nameWithType.vb: LoggerExtensions.LogDebug(Of T)(ILogger, T, EventId, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug``1(ILogger,``0,EventId,System.String,System.Object[])
  name: LogDebug<T>(ILogger, T, EventId, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogDebug__1_ILogger___0_EventId_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug``1(ILogger,``0,EventId,System.String,System.Object[])
  name.vb: LogDebug(Of T)(ILogger, T, EventId, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug<T>(ILogger, T, EventId, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug(Of T)(ILogger, T, EventId, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogDebug<T>(ILogger, T, EventId, string, params object[])
  nameWithType.vb: LoggerExtensions.LogDebug(Of T)(ILogger, T, EventId, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug``1(ILogger,``0,System.Exception,System.String,System.Object[])
  name: LogDebug<T>(ILogger, T, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogDebug__1_ILogger___0_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug``1(ILogger,``0,System.Exception,System.String,System.Object[])
  name.vb: LogDebug(Of T)(ILogger, T, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug<T>(ILogger, T, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug(Of T)(ILogger, T, System.Exception, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogDebug<T>(ILogger, T, Exception, string, params object[])
  nameWithType.vb: LoggerExtensions.LogDebug(Of T)(ILogger, T, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug``1(ILogger,``0,System.String,System.Object[])
  name: LogDebug<T>(ILogger, T, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogDebug__1_ILogger___0_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug``1(ILogger,``0,System.String,System.Object[])
  name.vb: LogDebug(Of T)(ILogger, T, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug<T>(ILogger, T, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogDebug(Of T)(ILogger, T, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogDebug<T>(ILogger, T, string, params object[])
  nameWithType.vb: LoggerExtensions.LogDebug(Of T)(ILogger, T, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError(ILogger,System.Exception)
  name: LogError(ILogger, Exception)
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogError_ILogger_System_Exception_
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError(ILogger,System.Exception)
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError(ILogger, System.Exception)
  nameWithType: LoggerExtensions.LogError(ILogger, Exception)
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError(ILogger,System.Object)
  name: LogError(ILogger, object)
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogError_ILogger_System_Object_
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError(ILogger,System.Object)
  name.vb: LogError(ILogger, Object)
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError(ILogger, object)
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError(ILogger, Object)
  nameWithType: LoggerExtensions.LogError(ILogger, object)
  nameWithType.vb: LoggerExtensions.LogError(ILogger, Object)
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError*
  name: LogError
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogError_
  commentId: Overload:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError
  nameWithType: LoggerExtensions.LogError
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError``1(ILogger,``0,EventId,System.Exception,System.String,System.Object[])
  name: LogError<T>(ILogger, T, EventId, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogError__1_ILogger___0_EventId_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError``1(ILogger,``0,EventId,System.Exception,System.String,System.Object[])
  name.vb: LogError(Of T)(ILogger, T, EventId, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError<T>(ILogger, T, EventId, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError(Of T)(ILogger, T, EventId, System.Exception, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogError<T>(ILogger, T, EventId, Exception, string, params object[])
  nameWithType.vb: LoggerExtensions.LogError(Of T)(ILogger, T, EventId, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError``1(ILogger,``0,EventId,System.String,System.Object[])
  name: LogError<T>(ILogger, T, EventId, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogError__1_ILogger___0_EventId_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError``1(ILogger,``0,EventId,System.String,System.Object[])
  name.vb: LogError(Of T)(ILogger, T, EventId, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError<T>(ILogger, T, EventId, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError(Of T)(ILogger, T, EventId, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogError<T>(ILogger, T, EventId, string, params object[])
  nameWithType.vb: LoggerExtensions.LogError(Of T)(ILogger, T, EventId, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError``1(ILogger,``0,System.Exception,System.String,System.Object[])
  name: LogError<T>(ILogger, T, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogError__1_ILogger___0_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError``1(ILogger,``0,System.Exception,System.String,System.Object[])
  name.vb: LogError(Of T)(ILogger, T, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError<T>(ILogger, T, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError(Of T)(ILogger, T, System.Exception, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogError<T>(ILogger, T, Exception, string, params object[])
  nameWithType.vb: LoggerExtensions.LogError(Of T)(ILogger, T, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError``1(ILogger,``0,System.String,System.Object[])
  name: LogError<T>(ILogger, T, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogError__1_ILogger___0_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError``1(ILogger,``0,System.String,System.Object[])
  name.vb: LogError(Of T)(ILogger, T, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError<T>(ILogger, T, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogError(Of T)(ILogger, T, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogError<T>(ILogger, T, string, params object[])
  nameWithType.vb: LoggerExtensions.LogError(Of T)(ILogger, T, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation(ILogger,System.Exception)
  name: LogInformation(ILogger, Exception)
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogInformation_ILogger_System_Exception_
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation(ILogger,System.Exception)
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation(ILogger, System.Exception)
  nameWithType: LoggerExtensions.LogInformation(ILogger, Exception)
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation(ILogger,System.Object)
  name: LogInformation(ILogger, object)
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogInformation_ILogger_System_Object_
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation(ILogger,System.Object)
  name.vb: LogInformation(ILogger, Object)
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation(ILogger, object)
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation(ILogger, Object)
  nameWithType: LoggerExtensions.LogInformation(ILogger, object)
  nameWithType.vb: LoggerExtensions.LogInformation(ILogger, Object)
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation*
  name: LogInformation
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogInformation_
  commentId: Overload:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation
  nameWithType: LoggerExtensions.LogInformation
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation``1(ILogger,``0,EventId,System.Exception,System.String,System.Object[])
  name: LogInformation<T>(ILogger, T, EventId, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogInformation__1_ILogger___0_EventId_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation``1(ILogger,``0,EventId,System.Exception,System.String,System.Object[])
  name.vb: LogInformation(Of T)(ILogger, T, EventId, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation<T>(ILogger, T, EventId, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation(Of T)(ILogger, T, EventId, System.Exception, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogInformation<T>(ILogger, T, EventId, Exception, string, params object[])
  nameWithType.vb: LoggerExtensions.LogInformation(Of T)(ILogger, T, EventId, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation``1(ILogger,``0,EventId,System.String,System.Object[])
  name: LogInformation<T>(ILogger, T, EventId, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogInformation__1_ILogger___0_EventId_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation``1(ILogger,``0,EventId,System.String,System.Object[])
  name.vb: LogInformation(Of T)(ILogger, T, EventId, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation<T>(ILogger, T, EventId, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation(Of T)(ILogger, T, EventId, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogInformation<T>(ILogger, T, EventId, string, params object[])
  nameWithType.vb: LoggerExtensions.LogInformation(Of T)(ILogger, T, EventId, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation``1(ILogger,``0,System.Exception,System.String,System.Object[])
  name: LogInformation<T>(ILogger, T, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogInformation__1_ILogger___0_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation``1(ILogger,``0,System.Exception,System.String,System.Object[])
  name.vb: LogInformation(Of T)(ILogger, T, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation<T>(ILogger, T, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation(Of T)(ILogger, T, System.Exception, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogInformation<T>(ILogger, T, Exception, string, params object[])
  nameWithType.vb: LoggerExtensions.LogInformation(Of T)(ILogger, T, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation``1(ILogger,``0,System.String,System.Object[])
  name: LogInformation<T>(ILogger, T, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogInformation__1_ILogger___0_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation``1(ILogger,``0,System.String,System.Object[])
  name.vb: LogInformation(Of T)(ILogger, T, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation<T>(ILogger, T, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogInformation(Of T)(ILogger, T, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogInformation<T>(ILogger, T, string, params object[])
  nameWithType.vb: LoggerExtensions.LogInformation(Of T)(ILogger, T, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace(ILogger,System.Exception)
  name: LogTrace(ILogger, Exception)
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogTrace_ILogger_System_Exception_
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace(ILogger,System.Exception)
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace(ILogger, System.Exception)
  nameWithType: LoggerExtensions.LogTrace(ILogger, Exception)
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace(ILogger,System.Object)
  name: LogTrace(ILogger, object)
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogTrace_ILogger_System_Object_
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace(ILogger,System.Object)
  name.vb: LogTrace(ILogger, Object)
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace(ILogger, object)
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace(ILogger, Object)
  nameWithType: LoggerExtensions.LogTrace(ILogger, object)
  nameWithType.vb: LoggerExtensions.LogTrace(ILogger, Object)
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace*
  name: LogTrace
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogTrace_
  commentId: Overload:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace
  nameWithType: LoggerExtensions.LogTrace
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace``1(ILogger,``0,EventId,System.Exception,System.String,System.Object[])
  name: LogTrace<T>(ILogger, T, EventId, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogTrace__1_ILogger___0_EventId_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace``1(ILogger,``0,EventId,System.Exception,System.String,System.Object[])
  name.vb: LogTrace(Of T)(ILogger, T, EventId, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace<T>(ILogger, T, EventId, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace(Of T)(ILogger, T, EventId, System.Exception, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogTrace<T>(ILogger, T, EventId, Exception, string, params object[])
  nameWithType.vb: LoggerExtensions.LogTrace(Of T)(ILogger, T, EventId, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace``1(ILogger,``0,EventId,System.String,System.Object[])
  name: LogTrace<T>(ILogger, T, EventId, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogTrace__1_ILogger___0_EventId_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace``1(ILogger,``0,EventId,System.String,System.Object[])
  name.vb: LogTrace(Of T)(ILogger, T, EventId, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace<T>(ILogger, T, EventId, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace(Of T)(ILogger, T, EventId, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogTrace<T>(ILogger, T, EventId, string, params object[])
  nameWithType.vb: LoggerExtensions.LogTrace(Of T)(ILogger, T, EventId, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace``1(ILogger,``0,System.Exception,System.String,System.Object[])
  name: LogTrace<T>(ILogger, T, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogTrace__1_ILogger___0_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace``1(ILogger,``0,System.Exception,System.String,System.Object[])
  name.vb: LogTrace(Of T)(ILogger, T, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace<T>(ILogger, T, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace(Of T)(ILogger, T, System.Exception, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogTrace<T>(ILogger, T, Exception, string, params object[])
  nameWithType.vb: LoggerExtensions.LogTrace(Of T)(ILogger, T, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace``1(ILogger,``0,System.String,System.Object[])
  name: LogTrace<T>(ILogger, T, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogTrace__1_ILogger___0_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace``1(ILogger,``0,System.String,System.Object[])
  name.vb: LogTrace(Of T)(ILogger, T, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace<T>(ILogger, T, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogTrace(Of T)(ILogger, T, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogTrace<T>(ILogger, T, string, params object[])
  nameWithType.vb: LoggerExtensions.LogTrace(Of T)(ILogger, T, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning(ILogger,System.Exception)
  name: LogWarning(ILogger, Exception)
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogWarning_ILogger_System_Exception_
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning(ILogger,System.Exception)
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning(ILogger, System.Exception)
  nameWithType: LoggerExtensions.LogWarning(ILogger, Exception)
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning(ILogger,System.Object)
  name: LogWarning(ILogger, object)
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogWarning_ILogger_System_Object_
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning(ILogger,System.Object)
  name.vb: LogWarning(ILogger, Object)
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning(ILogger, object)
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning(ILogger, Object)
  nameWithType: LoggerExtensions.LogWarning(ILogger, object)
  nameWithType.vb: LoggerExtensions.LogWarning(ILogger, Object)
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning*
  name: LogWarning
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogWarning_
  commentId: Overload:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning
  nameWithType: LoggerExtensions.LogWarning
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning``1(ILogger,``0,EventId,System.Exception,System.String,System.Object[])
  name: LogWarning<T>(ILogger, T, EventId, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogWarning__1_ILogger___0_EventId_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning``1(ILogger,``0,EventId,System.Exception,System.String,System.Object[])
  name.vb: LogWarning(Of T)(ILogger, T, EventId, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning<T>(ILogger, T, EventId, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning(Of T)(ILogger, T, EventId, System.Exception, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogWarning<T>(ILogger, T, EventId, Exception, string, params object[])
  nameWithType.vb: LoggerExtensions.LogWarning(Of T)(ILogger, T, EventId, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning``1(ILogger,``0,EventId,System.String,System.Object[])
  name: LogWarning<T>(ILogger, T, EventId, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogWarning__1_ILogger___0_EventId_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning``1(ILogger,``0,EventId,System.String,System.Object[])
  name.vb: LogWarning(Of T)(ILogger, T, EventId, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning<T>(ILogger, T, EventId, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning(Of T)(ILogger, T, EventId, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogWarning<T>(ILogger, T, EventId, string, params object[])
  nameWithType.vb: LoggerExtensions.LogWarning(Of T)(ILogger, T, EventId, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning``1(ILogger,``0,System.Exception,System.String,System.Object[])
  name: LogWarning<T>(ILogger, T, Exception, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogWarning__1_ILogger___0_System_Exception_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning``1(ILogger,``0,System.Exception,System.String,System.Object[])
  name.vb: LogWarning(Of T)(ILogger, T, Exception, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning<T>(ILogger, T, System.Exception, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning(Of T)(ILogger, T, System.Exception, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogWarning<T>(ILogger, T, Exception, string, params object[])
  nameWithType.vb: LoggerExtensions.LogWarning(Of T)(ILogger, T, Exception, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning``1(ILogger,``0,System.String,System.Object[])
  name: LogWarning<T>(ILogger, T, string, params object[])
  href: api/AWS.Lambda.Powertools.Logging.LoggerExtensions.html#AWS_Lambda_Powertools_Logging_LoggerExtensions_LogWarning__1_ILogger___0_System_String_System_Object___
  commentId: M:AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning``1(ILogger,``0,System.String,System.Object[])
  name.vb: LogWarning(Of T)(ILogger, T, String, ParamArray Object())
  fullName: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning<T>(ILogger, T, string, params object[])
  fullName.vb: AWS.Lambda.Powertools.Logging.LoggerExtensions.LogWarning(Of T)(ILogger, T, String, ParamArray Object())
  nameWithType: LoggerExtensions.LogWarning<T>(ILogger, T, string, params object[])
  nameWithType.vb: LoggerExtensions.LogWarning(Of T)(ILogger, T, String, ParamArray Object())
- uid: AWS.Lambda.Powertools.Logging.LoggerOutputCase
  name: LoggerOutputCase
  href: api/AWS.Lambda.Powertools.Logging.LoggerOutputCase.html
  commentId: T:AWS.Lambda.Powertools.Logging.LoggerOutputCase
  fullName: AWS.Lambda.Powertools.Logging.LoggerOutputCase
  nameWithType: LoggerOutputCase
- uid: AWS.Lambda.Powertools.Logging.LoggerOutputCase.CamelCase
  name: CamelCase
  href: api/AWS.Lambda.Powertools.Logging.LoggerOutputCase.html#AWS_Lambda_Powertools_Logging_LoggerOutputCase_CamelCase
  commentId: F:AWS.Lambda.Powertools.Logging.LoggerOutputCase.CamelCase
  fullName: AWS.Lambda.Powertools.Logging.LoggerOutputCase.CamelCase
  nameWithType: LoggerOutputCase.CamelCase
- uid: AWS.Lambda.Powertools.Logging.LoggerOutputCase.PascalCase
  name: PascalCase
  href: api/AWS.Lambda.Powertools.Logging.LoggerOutputCase.html#AWS_Lambda_Powertools_Logging_LoggerOutputCase_PascalCase
  commentId: F:AWS.Lambda.Powertools.Logging.LoggerOutputCase.PascalCase
  fullName: AWS.Lambda.Powertools.Logging.LoggerOutputCase.PascalCase
  nameWithType: LoggerOutputCase.PascalCase
- uid: AWS.Lambda.Powertools.Logging.LoggerOutputCase.SnakeCase
  name: SnakeCase
  href: api/AWS.Lambda.Powertools.Logging.LoggerOutputCase.html#AWS_Lambda_Powertools_Logging_LoggerOutputCase_SnakeCase
  commentId: F:AWS.Lambda.Powertools.Logging.LoggerOutputCase.SnakeCase
  fullName: AWS.Lambda.Powertools.Logging.LoggerOutputCase.SnakeCase
  nameWithType: LoggerOutputCase.SnakeCase
- uid: AWS.Lambda.Powertools.Logging.LoggingAttribute
  name: LoggingAttribute
  href: api/AWS.Lambda.Powertools.Logging.LoggingAttribute.html
  commentId: T:AWS.Lambda.Powertools.Logging.LoggingAttribute
  fullName: AWS.Lambda.Powertools.Logging.LoggingAttribute
  nameWithType: LoggingAttribute
- uid: AWS.Lambda.Powertools.Logging.LoggingAttribute.ClearState
  name: ClearState
  href: api/AWS.Lambda.Powertools.Logging.LoggingAttribute.html#AWS_Lambda_Powertools_Logging_LoggingAttribute_ClearState
  commentId: P:AWS.Lambda.Powertools.Logging.LoggingAttribute.ClearState
  fullName: AWS.Lambda.Powertools.Logging.LoggingAttribute.ClearState
  nameWithType: LoggingAttribute.ClearState
- uid: AWS.Lambda.Powertools.Logging.LoggingAttribute.ClearState*
  name: ClearState
  href: api/AWS.Lambda.Powertools.Logging.LoggingAttribute.html#AWS_Lambda_Powertools_Logging_LoggingAttribute_ClearState_
  commentId: Overload:AWS.Lambda.Powertools.Logging.LoggingAttribute.ClearState
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.LoggingAttribute.ClearState
  nameWithType: LoggingAttribute.ClearState
- uid: AWS.Lambda.Powertools.Logging.LoggingAttribute.CorrelationIdPath
  name: CorrelationIdPath
  href: api/AWS.Lambda.Powertools.Logging.LoggingAttribute.html#AWS_Lambda_Powertools_Logging_LoggingAttribute_CorrelationIdPath
  commentId: P:AWS.Lambda.Powertools.Logging.LoggingAttribute.CorrelationIdPath
  fullName: AWS.Lambda.Powertools.Logging.LoggingAttribute.CorrelationIdPath
  nameWithType: LoggingAttribute.CorrelationIdPath
- uid: AWS.Lambda.Powertools.Logging.LoggingAttribute.CorrelationIdPath*
  name: CorrelationIdPath
  href: api/AWS.Lambda.Powertools.Logging.LoggingAttribute.html#AWS_Lambda_Powertools_Logging_LoggingAttribute_CorrelationIdPath_
  commentId: Overload:AWS.Lambda.Powertools.Logging.LoggingAttribute.CorrelationIdPath
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.LoggingAttribute.CorrelationIdPath
  nameWithType: LoggingAttribute.CorrelationIdPath
- uid: AWS.Lambda.Powertools.Logging.LoggingAttribute.CreateHandler
  name: CreateHandler()
  href: api/AWS.Lambda.Powertools.Logging.LoggingAttribute.html#AWS_Lambda_Powertools_Logging_LoggingAttribute_CreateHandler
  commentId: M:AWS.Lambda.Powertools.Logging.LoggingAttribute.CreateHandler
  fullName: AWS.Lambda.Powertools.Logging.LoggingAttribute.CreateHandler()
  nameWithType: LoggingAttribute.CreateHandler()
- uid: AWS.Lambda.Powertools.Logging.LoggingAttribute.CreateHandler*
  name: CreateHandler
  href: api/AWS.Lambda.Powertools.Logging.LoggingAttribute.html#AWS_Lambda_Powertools_Logging_LoggingAttribute_CreateHandler_
  commentId: Overload:AWS.Lambda.Powertools.Logging.LoggingAttribute.CreateHandler
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.LoggingAttribute.CreateHandler
  nameWithType: LoggingAttribute.CreateHandler
- uid: AWS.Lambda.Powertools.Logging.LoggingAttribute.LogEvent
  name: LogEvent
  href: api/AWS.Lambda.Powertools.Logging.LoggingAttribute.html#AWS_Lambda_Powertools_Logging_LoggingAttribute_LogEvent
  commentId: P:AWS.Lambda.Powertools.Logging.LoggingAttribute.LogEvent
  fullName: AWS.Lambda.Powertools.Logging.LoggingAttribute.LogEvent
  nameWithType: LoggingAttribute.LogEvent
- uid: AWS.Lambda.Powertools.Logging.LoggingAttribute.LogEvent*
  name: LogEvent
  href: api/AWS.Lambda.Powertools.Logging.LoggingAttribute.html#AWS_Lambda_Powertools_Logging_LoggingAttribute_LogEvent_
  commentId: Overload:AWS.Lambda.Powertools.Logging.LoggingAttribute.LogEvent
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.LoggingAttribute.LogEvent
  nameWithType: LoggingAttribute.LogEvent
- uid: AWS.Lambda.Powertools.Logging.LoggingAttribute.LoggerOutputCase
  name: LoggerOutputCase
  href: api/AWS.Lambda.Powertools.Logging.LoggingAttribute.html#AWS_Lambda_Powertools_Logging_LoggingAttribute_LoggerOutputCase
  commentId: P:AWS.Lambda.Powertools.Logging.LoggingAttribute.LoggerOutputCase
  fullName: AWS.Lambda.Powertools.Logging.LoggingAttribute.LoggerOutputCase
  nameWithType: LoggingAttribute.LoggerOutputCase
- uid: AWS.Lambda.Powertools.Logging.LoggingAttribute.LoggerOutputCase*
  name: LoggerOutputCase
  href: api/AWS.Lambda.Powertools.Logging.LoggingAttribute.html#AWS_Lambda_Powertools_Logging_LoggingAttribute_LoggerOutputCase_
  commentId: Overload:AWS.Lambda.Powertools.Logging.LoggingAttribute.LoggerOutputCase
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.LoggingAttribute.LoggerOutputCase
  nameWithType: LoggingAttribute.LoggerOutputCase
- uid: AWS.Lambda.Powertools.Logging.LoggingAttribute.LogLevel
  name: LogLevel
  href: api/AWS.Lambda.Powertools.Logging.LoggingAttribute.html#AWS_Lambda_Powertools_Logging_LoggingAttribute_LogLevel
  commentId: P:AWS.Lambda.Powertools.Logging.LoggingAttribute.LogLevel
  fullName: AWS.Lambda.Powertools.Logging.LoggingAttribute.LogLevel
  nameWithType: LoggingAttribute.LogLevel
- uid: AWS.Lambda.Powertools.Logging.LoggingAttribute.LogLevel*
  name: LogLevel
  href: api/AWS.Lambda.Powertools.Logging.LoggingAttribute.html#AWS_Lambda_Powertools_Logging_LoggingAttribute_LogLevel_
  commentId: Overload:AWS.Lambda.Powertools.Logging.LoggingAttribute.LogLevel
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.LoggingAttribute.LogLevel
  nameWithType: LoggingAttribute.LogLevel
- uid: AWS.Lambda.Powertools.Logging.LoggingAttribute.SamplingRate
  name: SamplingRate
  href: api/AWS.Lambda.Powertools.Logging.LoggingAttribute.html#AWS_Lambda_Powertools_Logging_LoggingAttribute_SamplingRate
  commentId: P:AWS.Lambda.Powertools.Logging.LoggingAttribute.SamplingRate
  fullName: AWS.Lambda.Powertools.Logging.LoggingAttribute.SamplingRate
  nameWithType: LoggingAttribute.SamplingRate
- uid: AWS.Lambda.Powertools.Logging.LoggingAttribute.SamplingRate*
  name: SamplingRate
  href: api/AWS.Lambda.Powertools.Logging.LoggingAttribute.html#AWS_Lambda_Powertools_Logging_LoggingAttribute_SamplingRate_
  commentId: Overload:AWS.Lambda.Powertools.Logging.LoggingAttribute.SamplingRate
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.LoggingAttribute.SamplingRate
  nameWithType: LoggingAttribute.SamplingRate
- uid: AWS.Lambda.Powertools.Logging.LoggingAttribute.Service
  name: Service
  href: api/AWS.Lambda.Powertools.Logging.LoggingAttribute.html#AWS_Lambda_Powertools_Logging_LoggingAttribute_Service
  commentId: P:AWS.Lambda.Powertools.Logging.LoggingAttribute.Service
  fullName: AWS.Lambda.Powertools.Logging.LoggingAttribute.Service
  nameWithType: LoggingAttribute.Service
- uid: AWS.Lambda.Powertools.Logging.LoggingAttribute.Service*
  name: Service
  href: api/AWS.Lambda.Powertools.Logging.LoggingAttribute.html#AWS_Lambda_Powertools_Logging_LoggingAttribute_Service_
  commentId: Overload:AWS.Lambda.Powertools.Logging.LoggingAttribute.Service
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Logging.LoggingAttribute.Service
  nameWithType: LoggingAttribute.Service
- uid: AWS.Lambda.Powertools.Metrics
  name: AWS.Lambda.Powertools.Metrics
  href: api/AWS.Lambda.Powertools.Metrics.html
  commentId: N:AWS.Lambda.Powertools.Metrics
  fullName: AWS.Lambda.Powertools.Metrics
  nameWithType: AWS.Lambda.Powertools.Metrics
- uid: AWS.Lambda.Powertools.Metrics.DimensionSet
  name: DimensionSet
  href: api/AWS.Lambda.Powertools.Metrics.DimensionSet.html
  commentId: T:AWS.Lambda.Powertools.Metrics.DimensionSet
  fullName: AWS.Lambda.Powertools.Metrics.DimensionSet
  nameWithType: DimensionSet
- uid: AWS.Lambda.Powertools.Metrics.DimensionSet.#ctor(System.String,System.String)
  name: DimensionSet(string, string)
  href: api/AWS.Lambda.Powertools.Metrics.DimensionSet.html#AWS_Lambda_Powertools_Metrics_DimensionSet__ctor_System_String_System_String_
  commentId: M:AWS.Lambda.Powertools.Metrics.DimensionSet.#ctor(System.String,System.String)
  name.vb: New(String, String)
  fullName: AWS.Lambda.Powertools.Metrics.DimensionSet.DimensionSet(string, string)
  fullName.vb: AWS.Lambda.Powertools.Metrics.DimensionSet.New(String, String)
  nameWithType: DimensionSet.DimensionSet(string, string)
  nameWithType.vb: DimensionSet.New(String, String)
- uid: AWS.Lambda.Powertools.Metrics.DimensionSet.#ctor*
  name: DimensionSet
  href: api/AWS.Lambda.Powertools.Metrics.DimensionSet.html#AWS_Lambda_Powertools_Metrics_DimensionSet__ctor_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.DimensionSet.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AWS.Lambda.Powertools.Metrics.DimensionSet.DimensionSet
  fullName.vb: AWS.Lambda.Powertools.Metrics.DimensionSet.New
  nameWithType: DimensionSet.DimensionSet
  nameWithType.vb: DimensionSet.New
- uid: AWS.Lambda.Powertools.Metrics.DimensionSet.DimensionKeys
  name: DimensionKeys
  href: api/AWS.Lambda.Powertools.Metrics.DimensionSet.html#AWS_Lambda_Powertools_Metrics_DimensionSet_DimensionKeys
  commentId: P:AWS.Lambda.Powertools.Metrics.DimensionSet.DimensionKeys
  fullName: AWS.Lambda.Powertools.Metrics.DimensionSet.DimensionKeys
  nameWithType: DimensionSet.DimensionKeys
- uid: AWS.Lambda.Powertools.Metrics.DimensionSet.DimensionKeys*
  name: DimensionKeys
  href: api/AWS.Lambda.Powertools.Metrics.DimensionSet.html#AWS_Lambda_Powertools_Metrics_DimensionSet_DimensionKeys_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.DimensionSet.DimensionKeys
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.DimensionSet.DimensionKeys
  nameWithType: DimensionSet.DimensionKeys
- uid: AWS.Lambda.Powertools.Metrics.IMetrics
  name: IMetrics
  href: api/AWS.Lambda.Powertools.Metrics.IMetrics.html
  commentId: T:AWS.Lambda.Powertools.Metrics.IMetrics
  fullName: AWS.Lambda.Powertools.Metrics.IMetrics
  nameWithType: IMetrics
- uid: AWS.Lambda.Powertools.Metrics.IMetrics.AddDimension(System.String,System.String)
  name: AddDimension(string, string)
  href: api/AWS.Lambda.Powertools.Metrics.IMetrics.html#AWS_Lambda_Powertools_Metrics_IMetrics_AddDimension_System_String_System_String_
  commentId: M:AWS.Lambda.Powertools.Metrics.IMetrics.AddDimension(System.String,System.String)
  name.vb: AddDimension(String, String)
  fullName: AWS.Lambda.Powertools.Metrics.IMetrics.AddDimension(string, string)
  fullName.vb: AWS.Lambda.Powertools.Metrics.IMetrics.AddDimension(String, String)
  nameWithType: IMetrics.AddDimension(string, string)
  nameWithType.vb: IMetrics.AddDimension(String, String)
- uid: AWS.Lambda.Powertools.Metrics.IMetrics.AddDimension*
  name: AddDimension
  href: api/AWS.Lambda.Powertools.Metrics.IMetrics.html#AWS_Lambda_Powertools_Metrics_IMetrics_AddDimension_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.IMetrics.AddDimension
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.IMetrics.AddDimension
  nameWithType: IMetrics.AddDimension
- uid: AWS.Lambda.Powertools.Metrics.IMetrics.AddMetadata(System.String,System.Object)
  name: AddMetadata(string, object)
  href: api/AWS.Lambda.Powertools.Metrics.IMetrics.html#AWS_Lambda_Powertools_Metrics_IMetrics_AddMetadata_System_String_System_Object_
  commentId: M:AWS.Lambda.Powertools.Metrics.IMetrics.AddMetadata(System.String,System.Object)
  name.vb: AddMetadata(String, Object)
  fullName: AWS.Lambda.Powertools.Metrics.IMetrics.AddMetadata(string, object)
  fullName.vb: AWS.Lambda.Powertools.Metrics.IMetrics.AddMetadata(String, Object)
  nameWithType: IMetrics.AddMetadata(string, object)
  nameWithType.vb: IMetrics.AddMetadata(String, Object)
- uid: AWS.Lambda.Powertools.Metrics.IMetrics.AddMetadata*
  name: AddMetadata
  href: api/AWS.Lambda.Powertools.Metrics.IMetrics.html#AWS_Lambda_Powertools_Metrics_IMetrics_AddMetadata_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.IMetrics.AddMetadata
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.IMetrics.AddMetadata
  nameWithType: IMetrics.AddMetadata
- uid: AWS.Lambda.Powertools.Metrics.IMetrics.AddMetric(System.String,System.Double,AWS.Lambda.Powertools.Metrics.MetricUnit)
  name: AddMetric(string, double, MetricUnit)
  href: api/AWS.Lambda.Powertools.Metrics.IMetrics.html#AWS_Lambda_Powertools_Metrics_IMetrics_AddMetric_System_String_System_Double_AWS_Lambda_Powertools_Metrics_MetricUnit_
  commentId: M:AWS.Lambda.Powertools.Metrics.IMetrics.AddMetric(System.String,System.Double,AWS.Lambda.Powertools.Metrics.MetricUnit)
  name.vb: AddMetric(String, Double, MetricUnit)
  fullName: AWS.Lambda.Powertools.Metrics.IMetrics.AddMetric(string, double, AWS.Lambda.Powertools.Metrics.MetricUnit)
  fullName.vb: AWS.Lambda.Powertools.Metrics.IMetrics.AddMetric(String, Double, AWS.Lambda.Powertools.Metrics.MetricUnit)
  nameWithType: IMetrics.AddMetric(string, double, MetricUnit)
  nameWithType.vb: IMetrics.AddMetric(String, Double, MetricUnit)
- uid: AWS.Lambda.Powertools.Metrics.IMetrics.AddMetric*
  name: AddMetric
  href: api/AWS.Lambda.Powertools.Metrics.IMetrics.html#AWS_Lambda_Powertools_Metrics_IMetrics_AddMetric_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.IMetrics.AddMetric
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.IMetrics.AddMetric
  nameWithType: IMetrics.AddMetric
- uid: AWS.Lambda.Powertools.Metrics.IMetrics.Flush(System.Boolean)
  name: Flush(bool)
  href: api/AWS.Lambda.Powertools.Metrics.IMetrics.html#AWS_Lambda_Powertools_Metrics_IMetrics_Flush_System_Boolean_
  commentId: M:AWS.Lambda.Powertools.Metrics.IMetrics.Flush(System.Boolean)
  name.vb: Flush(Boolean)
  fullName: AWS.Lambda.Powertools.Metrics.IMetrics.Flush(bool)
  fullName.vb: AWS.Lambda.Powertools.Metrics.IMetrics.Flush(Boolean)
  nameWithType: IMetrics.Flush(bool)
  nameWithType.vb: IMetrics.Flush(Boolean)
- uid: AWS.Lambda.Powertools.Metrics.IMetrics.Flush*
  name: Flush
  href: api/AWS.Lambda.Powertools.Metrics.IMetrics.html#AWS_Lambda_Powertools_Metrics_IMetrics_Flush_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.IMetrics.Flush
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.IMetrics.Flush
  nameWithType: IMetrics.Flush
- uid: AWS.Lambda.Powertools.Metrics.IMetrics.GetNamespace
  name: GetNamespace()
  href: api/AWS.Lambda.Powertools.Metrics.IMetrics.html#AWS_Lambda_Powertools_Metrics_IMetrics_GetNamespace
  commentId: M:AWS.Lambda.Powertools.Metrics.IMetrics.GetNamespace
  fullName: AWS.Lambda.Powertools.Metrics.IMetrics.GetNamespace()
  nameWithType: IMetrics.GetNamespace()
- uid: AWS.Lambda.Powertools.Metrics.IMetrics.GetNamespace*
  name: GetNamespace
  href: api/AWS.Lambda.Powertools.Metrics.IMetrics.html#AWS_Lambda_Powertools_Metrics_IMetrics_GetNamespace_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.IMetrics.GetNamespace
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.IMetrics.GetNamespace
  nameWithType: IMetrics.GetNamespace
- uid: AWS.Lambda.Powertools.Metrics.IMetrics.GetService
  name: GetService()
  href: api/AWS.Lambda.Powertools.Metrics.IMetrics.html#AWS_Lambda_Powertools_Metrics_IMetrics_GetService
  commentId: M:AWS.Lambda.Powertools.Metrics.IMetrics.GetService
  fullName: AWS.Lambda.Powertools.Metrics.IMetrics.GetService()
  nameWithType: IMetrics.GetService()
- uid: AWS.Lambda.Powertools.Metrics.IMetrics.GetService*
  name: GetService
  href: api/AWS.Lambda.Powertools.Metrics.IMetrics.html#AWS_Lambda_Powertools_Metrics_IMetrics_GetService_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.IMetrics.GetService
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.IMetrics.GetService
  nameWithType: IMetrics.GetService
- uid: AWS.Lambda.Powertools.Metrics.IMetrics.PushSingleMetric(System.String,System.Double,AWS.Lambda.Powertools.Metrics.MetricUnit,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  name: PushSingleMetric(string, double, MetricUnit, string, string, Dictionary<string, string>)
  href: api/AWS.Lambda.Powertools.Metrics.IMetrics.html#AWS_Lambda_Powertools_Metrics_IMetrics_PushSingleMetric_System_String_System_Double_AWS_Lambda_Powertools_Metrics_MetricUnit_System_String_System_String_System_Collections_Generic_Dictionary_System_String_System_String__
  commentId: M:AWS.Lambda.Powertools.Metrics.IMetrics.PushSingleMetric(System.String,System.Double,AWS.Lambda.Powertools.Metrics.MetricUnit,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  name.vb: PushSingleMetric(String, Double, MetricUnit, String, String, Dictionary(Of String, String))
  fullName: AWS.Lambda.Powertools.Metrics.IMetrics.PushSingleMetric(string, double, AWS.Lambda.Powertools.Metrics.MetricUnit, string, string, System.Collections.Generic.Dictionary<string, string>)
  fullName.vb: AWS.Lambda.Powertools.Metrics.IMetrics.PushSingleMetric(String, Double, AWS.Lambda.Powertools.Metrics.MetricUnit, String, String, System.Collections.Generic.Dictionary(Of String, String))
  nameWithType: IMetrics.PushSingleMetric(string, double, MetricUnit, string, string, Dictionary<string, string>)
  nameWithType.vb: IMetrics.PushSingleMetric(String, Double, MetricUnit, String, String, Dictionary(Of String, String))
- uid: AWS.Lambda.Powertools.Metrics.IMetrics.PushSingleMetric*
  name: PushSingleMetric
  href: api/AWS.Lambda.Powertools.Metrics.IMetrics.html#AWS_Lambda_Powertools_Metrics_IMetrics_PushSingleMetric_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.IMetrics.PushSingleMetric
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.IMetrics.PushSingleMetric
  nameWithType: IMetrics.PushSingleMetric
- uid: AWS.Lambda.Powertools.Metrics.IMetrics.Serialize
  name: Serialize()
  href: api/AWS.Lambda.Powertools.Metrics.IMetrics.html#AWS_Lambda_Powertools_Metrics_IMetrics_Serialize
  commentId: M:AWS.Lambda.Powertools.Metrics.IMetrics.Serialize
  fullName: AWS.Lambda.Powertools.Metrics.IMetrics.Serialize()
  nameWithType: IMetrics.Serialize()
- uid: AWS.Lambda.Powertools.Metrics.IMetrics.Serialize*
  name: Serialize
  href: api/AWS.Lambda.Powertools.Metrics.IMetrics.html#AWS_Lambda_Powertools_Metrics_IMetrics_Serialize_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.IMetrics.Serialize
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.IMetrics.Serialize
  nameWithType: IMetrics.Serialize
- uid: AWS.Lambda.Powertools.Metrics.IMetrics.SetDefaultDimensions(System.Collections.Generic.Dictionary{System.String,System.String})
  name: SetDefaultDimensions(Dictionary<string, string>)
  href: api/AWS.Lambda.Powertools.Metrics.IMetrics.html#AWS_Lambda_Powertools_Metrics_IMetrics_SetDefaultDimensions_System_Collections_Generic_Dictionary_System_String_System_String__
  commentId: M:AWS.Lambda.Powertools.Metrics.IMetrics.SetDefaultDimensions(System.Collections.Generic.Dictionary{System.String,System.String})
  name.vb: SetDefaultDimensions(Dictionary(Of String, String))
  fullName: AWS.Lambda.Powertools.Metrics.IMetrics.SetDefaultDimensions(System.Collections.Generic.Dictionary<string, string>)
  fullName.vb: AWS.Lambda.Powertools.Metrics.IMetrics.SetDefaultDimensions(System.Collections.Generic.Dictionary(Of String, String))
  nameWithType: IMetrics.SetDefaultDimensions(Dictionary<string, string>)
  nameWithType.vb: IMetrics.SetDefaultDimensions(Dictionary(Of String, String))
- uid: AWS.Lambda.Powertools.Metrics.IMetrics.SetDefaultDimensions*
  name: SetDefaultDimensions
  href: api/AWS.Lambda.Powertools.Metrics.IMetrics.html#AWS_Lambda_Powertools_Metrics_IMetrics_SetDefaultDimensions_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.IMetrics.SetDefaultDimensions
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.IMetrics.SetDefaultDimensions
  nameWithType: IMetrics.SetDefaultDimensions
- uid: AWS.Lambda.Powertools.Metrics.IMetrics.SetNamespace(System.String)
  name: SetNamespace(string)
  href: api/AWS.Lambda.Powertools.Metrics.IMetrics.html#AWS_Lambda_Powertools_Metrics_IMetrics_SetNamespace_System_String_
  commentId: M:AWS.Lambda.Powertools.Metrics.IMetrics.SetNamespace(System.String)
  name.vb: SetNamespace(String)
  fullName: AWS.Lambda.Powertools.Metrics.IMetrics.SetNamespace(string)
  fullName.vb: AWS.Lambda.Powertools.Metrics.IMetrics.SetNamespace(String)
  nameWithType: IMetrics.SetNamespace(string)
  nameWithType.vb: IMetrics.SetNamespace(String)
- uid: AWS.Lambda.Powertools.Metrics.IMetrics.SetNamespace*
  name: SetNamespace
  href: api/AWS.Lambda.Powertools.Metrics.IMetrics.html#AWS_Lambda_Powertools_Metrics_IMetrics_SetNamespace_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.IMetrics.SetNamespace
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.IMetrics.SetNamespace
  nameWithType: IMetrics.SetNamespace
- uid: AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator
  name: JsonNamingPolicyDecorator
  href: api/AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator.html
  commentId: T:AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator
  fullName: AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator
  nameWithType: JsonNamingPolicyDecorator
- uid: AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator.#ctor(System.Text.Json.JsonNamingPolicy)
  name: JsonNamingPolicyDecorator(JsonNamingPolicy)
  href: api/AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator.html#AWS_Lambda_Powertools_Metrics_JsonNamingPolicyDecorator__ctor_System_Text_Json_JsonNamingPolicy_
  commentId: M:AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator.#ctor(System.Text.Json.JsonNamingPolicy)
  name.vb: New(JsonNamingPolicy)
  fullName: AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator.JsonNamingPolicyDecorator(System.Text.Json.JsonNamingPolicy)
  fullName.vb: AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator.New(System.Text.Json.JsonNamingPolicy)
  nameWithType: JsonNamingPolicyDecorator.JsonNamingPolicyDecorator(JsonNamingPolicy)
  nameWithType.vb: JsonNamingPolicyDecorator.New(JsonNamingPolicy)
- uid: AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator.#ctor*
  name: JsonNamingPolicyDecorator
  href: api/AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator.html#AWS_Lambda_Powertools_Metrics_JsonNamingPolicyDecorator__ctor_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator.JsonNamingPolicyDecorator
  fullName.vb: AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator.New
  nameWithType: JsonNamingPolicyDecorator.JsonNamingPolicyDecorator
  nameWithType.vb: JsonNamingPolicyDecorator.New
- uid: AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator.ConvertName(System.String)
  name: ConvertName(string)
  href: api/AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator.html#AWS_Lambda_Powertools_Metrics_JsonNamingPolicyDecorator_ConvertName_System_String_
  commentId: M:AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator.ConvertName(System.String)
  name.vb: ConvertName(String)
  fullName: AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator.ConvertName(string)
  fullName.vb: AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator.ConvertName(String)
  nameWithType: JsonNamingPolicyDecorator.ConvertName(string)
  nameWithType.vb: JsonNamingPolicyDecorator.ConvertName(String)
- uid: AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator.ConvertName*
  name: ConvertName
  href: api/AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator.html#AWS_Lambda_Powertools_Metrics_JsonNamingPolicyDecorator_ConvertName_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator.ConvertName
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.JsonNamingPolicyDecorator.ConvertName
  nameWithType: JsonNamingPolicyDecorator.ConvertName
- uid: AWS.Lambda.Powertools.Metrics.Metadata
  name: Metadata
  href: api/AWS.Lambda.Powertools.Metrics.Metadata.html
  commentId: T:AWS.Lambda.Powertools.Metrics.Metadata
  fullName: AWS.Lambda.Powertools.Metrics.Metadata
  nameWithType: Metadata
- uid: AWS.Lambda.Powertools.Metrics.Metadata.#ctor
  name: Metadata()
  href: api/AWS.Lambda.Powertools.Metrics.Metadata.html#AWS_Lambda_Powertools_Metrics_Metadata__ctor
  commentId: M:AWS.Lambda.Powertools.Metrics.Metadata.#ctor
  name.vb: New()
  fullName: AWS.Lambda.Powertools.Metrics.Metadata.Metadata()
  fullName.vb: AWS.Lambda.Powertools.Metrics.Metadata.New()
  nameWithType: Metadata.Metadata()
  nameWithType.vb: Metadata.New()
- uid: AWS.Lambda.Powertools.Metrics.Metadata.#ctor*
  name: Metadata
  href: api/AWS.Lambda.Powertools.Metrics.Metadata.html#AWS_Lambda_Powertools_Metrics_Metadata__ctor_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metadata.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AWS.Lambda.Powertools.Metrics.Metadata.Metadata
  fullName.vb: AWS.Lambda.Powertools.Metrics.Metadata.New
  nameWithType: Metadata.Metadata
  nameWithType.vb: Metadata.New
- uid: AWS.Lambda.Powertools.Metrics.Metadata.CloudWatchMetrics
  name: CloudWatchMetrics
  href: api/AWS.Lambda.Powertools.Metrics.Metadata.html#AWS_Lambda_Powertools_Metrics_Metadata_CloudWatchMetrics
  commentId: P:AWS.Lambda.Powertools.Metrics.Metadata.CloudWatchMetrics
  fullName: AWS.Lambda.Powertools.Metrics.Metadata.CloudWatchMetrics
  nameWithType: Metadata.CloudWatchMetrics
- uid: AWS.Lambda.Powertools.Metrics.Metadata.CloudWatchMetrics*
  name: CloudWatchMetrics
  href: api/AWS.Lambda.Powertools.Metrics.Metadata.html#AWS_Lambda_Powertools_Metrics_Metadata_CloudWatchMetrics_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metadata.CloudWatchMetrics
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.Metadata.CloudWatchMetrics
  nameWithType: Metadata.CloudWatchMetrics
- uid: AWS.Lambda.Powertools.Metrics.Metadata.CustomMetadata
  name: CustomMetadata
  href: api/AWS.Lambda.Powertools.Metrics.Metadata.html#AWS_Lambda_Powertools_Metrics_Metadata_CustomMetadata
  commentId: P:AWS.Lambda.Powertools.Metrics.Metadata.CustomMetadata
  fullName: AWS.Lambda.Powertools.Metrics.Metadata.CustomMetadata
  nameWithType: Metadata.CustomMetadata
- uid: AWS.Lambda.Powertools.Metrics.Metadata.CustomMetadata*
  name: CustomMetadata
  href: api/AWS.Lambda.Powertools.Metrics.Metadata.html#AWS_Lambda_Powertools_Metrics_Metadata_CustomMetadata_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metadata.CustomMetadata
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.Metadata.CustomMetadata
  nameWithType: Metadata.CustomMetadata
- uid: AWS.Lambda.Powertools.Metrics.Metadata.Timestamp
  name: Timestamp
  href: api/AWS.Lambda.Powertools.Metrics.Metadata.html#AWS_Lambda_Powertools_Metrics_Metadata_Timestamp
  commentId: P:AWS.Lambda.Powertools.Metrics.Metadata.Timestamp
  fullName: AWS.Lambda.Powertools.Metrics.Metadata.Timestamp
  nameWithType: Metadata.Timestamp
- uid: AWS.Lambda.Powertools.Metrics.Metadata.Timestamp*
  name: Timestamp
  href: api/AWS.Lambda.Powertools.Metrics.Metadata.html#AWS_Lambda_Powertools_Metrics_Metadata_Timestamp_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metadata.Timestamp
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.Metadata.Timestamp
  nameWithType: Metadata.Timestamp
- uid: AWS.Lambda.Powertools.Metrics.MetricDefinition
  name: MetricDefinition
  href: api/AWS.Lambda.Powertools.Metrics.MetricDefinition.html
  commentId: T:AWS.Lambda.Powertools.Metrics.MetricDefinition
  fullName: AWS.Lambda.Powertools.Metrics.MetricDefinition
  nameWithType: MetricDefinition
- uid: AWS.Lambda.Powertools.Metrics.MetricDefinition.#ctor(System.String,AWS.Lambda.Powertools.Metrics.MetricUnit,System.Collections.Generic.List{System.Double})
  name: MetricDefinition(string, MetricUnit, List<double>)
  href: api/AWS.Lambda.Powertools.Metrics.MetricDefinition.html#AWS_Lambda_Powertools_Metrics_MetricDefinition__ctor_System_String_AWS_Lambda_Powertools_Metrics_MetricUnit_System_Collections_Generic_List_System_Double__
  commentId: M:AWS.Lambda.Powertools.Metrics.MetricDefinition.#ctor(System.String,AWS.Lambda.Powertools.Metrics.MetricUnit,System.Collections.Generic.List{System.Double})
  name.vb: New(String, MetricUnit, List(Of Double))
  fullName: AWS.Lambda.Powertools.Metrics.MetricDefinition.MetricDefinition(string, AWS.Lambda.Powertools.Metrics.MetricUnit, System.Collections.Generic.List<double>)
  fullName.vb: AWS.Lambda.Powertools.Metrics.MetricDefinition.New(String, AWS.Lambda.Powertools.Metrics.MetricUnit, System.Collections.Generic.List(Of Double))
  nameWithType: MetricDefinition.MetricDefinition(string, MetricUnit, List<double>)
  nameWithType.vb: MetricDefinition.New(String, MetricUnit, List(Of Double))
- uid: AWS.Lambda.Powertools.Metrics.MetricDefinition.#ctor(System.String,AWS.Lambda.Powertools.Metrics.MetricUnit,System.Double)
  name: MetricDefinition(string, MetricUnit, double)
  href: api/AWS.Lambda.Powertools.Metrics.MetricDefinition.html#AWS_Lambda_Powertools_Metrics_MetricDefinition__ctor_System_String_AWS_Lambda_Powertools_Metrics_MetricUnit_System_Double_
  commentId: M:AWS.Lambda.Powertools.Metrics.MetricDefinition.#ctor(System.String,AWS.Lambda.Powertools.Metrics.MetricUnit,System.Double)
  name.vb: New(String, MetricUnit, Double)
  fullName: AWS.Lambda.Powertools.Metrics.MetricDefinition.MetricDefinition(string, AWS.Lambda.Powertools.Metrics.MetricUnit, double)
  fullName.vb: AWS.Lambda.Powertools.Metrics.MetricDefinition.New(String, AWS.Lambda.Powertools.Metrics.MetricUnit, Double)
  nameWithType: MetricDefinition.MetricDefinition(string, MetricUnit, double)
  nameWithType.vb: MetricDefinition.New(String, MetricUnit, Double)
- uid: AWS.Lambda.Powertools.Metrics.MetricDefinition.#ctor(System.String,System.Double)
  name: MetricDefinition(string, double)
  href: api/AWS.Lambda.Powertools.Metrics.MetricDefinition.html#AWS_Lambda_Powertools_Metrics_MetricDefinition__ctor_System_String_System_Double_
  commentId: M:AWS.Lambda.Powertools.Metrics.MetricDefinition.#ctor(System.String,System.Double)
  name.vb: New(String, Double)
  fullName: AWS.Lambda.Powertools.Metrics.MetricDefinition.MetricDefinition(string, double)
  fullName.vb: AWS.Lambda.Powertools.Metrics.MetricDefinition.New(String, Double)
  nameWithType: MetricDefinition.MetricDefinition(string, double)
  nameWithType.vb: MetricDefinition.New(String, Double)
- uid: AWS.Lambda.Powertools.Metrics.MetricDefinition.#ctor*
  name: MetricDefinition
  href: api/AWS.Lambda.Powertools.Metrics.MetricDefinition.html#AWS_Lambda_Powertools_Metrics_MetricDefinition__ctor_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricDefinition.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AWS.Lambda.Powertools.Metrics.MetricDefinition.MetricDefinition
  fullName.vb: AWS.Lambda.Powertools.Metrics.MetricDefinition.New
  nameWithType: MetricDefinition.MetricDefinition
  nameWithType.vb: MetricDefinition.New
- uid: AWS.Lambda.Powertools.Metrics.MetricDefinition.AddValue(System.Double)
  name: AddValue(double)
  href: api/AWS.Lambda.Powertools.Metrics.MetricDefinition.html#AWS_Lambda_Powertools_Metrics_MetricDefinition_AddValue_System_Double_
  commentId: M:AWS.Lambda.Powertools.Metrics.MetricDefinition.AddValue(System.Double)
  name.vb: AddValue(Double)
  fullName: AWS.Lambda.Powertools.Metrics.MetricDefinition.AddValue(double)
  fullName.vb: AWS.Lambda.Powertools.Metrics.MetricDefinition.AddValue(Double)
  nameWithType: MetricDefinition.AddValue(double)
  nameWithType.vb: MetricDefinition.AddValue(Double)
- uid: AWS.Lambda.Powertools.Metrics.MetricDefinition.AddValue*
  name: AddValue
  href: api/AWS.Lambda.Powertools.Metrics.MetricDefinition.html#AWS_Lambda_Powertools_Metrics_MetricDefinition_AddValue_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricDefinition.AddValue
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricDefinition.AddValue
  nameWithType: MetricDefinition.AddValue
- uid: AWS.Lambda.Powertools.Metrics.MetricDefinition.Name
  name: Name
  href: api/AWS.Lambda.Powertools.Metrics.MetricDefinition.html#AWS_Lambda_Powertools_Metrics_MetricDefinition_Name
  commentId: P:AWS.Lambda.Powertools.Metrics.MetricDefinition.Name
  fullName: AWS.Lambda.Powertools.Metrics.MetricDefinition.Name
  nameWithType: MetricDefinition.Name
- uid: AWS.Lambda.Powertools.Metrics.MetricDefinition.Name*
  name: Name
  href: api/AWS.Lambda.Powertools.Metrics.MetricDefinition.html#AWS_Lambda_Powertools_Metrics_MetricDefinition_Name_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricDefinition.Name
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricDefinition.Name
  nameWithType: MetricDefinition.Name
- uid: AWS.Lambda.Powertools.Metrics.MetricDefinition.Unit
  name: Unit
  href: api/AWS.Lambda.Powertools.Metrics.MetricDefinition.html#AWS_Lambda_Powertools_Metrics_MetricDefinition_Unit
  commentId: P:AWS.Lambda.Powertools.Metrics.MetricDefinition.Unit
  fullName: AWS.Lambda.Powertools.Metrics.MetricDefinition.Unit
  nameWithType: MetricDefinition.Unit
- uid: AWS.Lambda.Powertools.Metrics.MetricDefinition.Unit*
  name: Unit
  href: api/AWS.Lambda.Powertools.Metrics.MetricDefinition.html#AWS_Lambda_Powertools_Metrics_MetricDefinition_Unit_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricDefinition.Unit
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricDefinition.Unit
  nameWithType: MetricDefinition.Unit
- uid: AWS.Lambda.Powertools.Metrics.MetricDefinition.Values
  name: Values
  href: api/AWS.Lambda.Powertools.Metrics.MetricDefinition.html#AWS_Lambda_Powertools_Metrics_MetricDefinition_Values
  commentId: P:AWS.Lambda.Powertools.Metrics.MetricDefinition.Values
  fullName: AWS.Lambda.Powertools.Metrics.MetricDefinition.Values
  nameWithType: MetricDefinition.Values
- uid: AWS.Lambda.Powertools.Metrics.MetricDefinition.Values*
  name: Values
  href: api/AWS.Lambda.Powertools.Metrics.MetricDefinition.html#AWS_Lambda_Powertools_Metrics_MetricDefinition_Values_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricDefinition.Values
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricDefinition.Values
  nameWithType: MetricDefinition.Values
- uid: AWS.Lambda.Powertools.Metrics.MetricDirective
  name: MetricDirective
  href: api/AWS.Lambda.Powertools.Metrics.MetricDirective.html
  commentId: T:AWS.Lambda.Powertools.Metrics.MetricDirective
  fullName: AWS.Lambda.Powertools.Metrics.MetricDirective
  nameWithType: MetricDirective
- uid: AWS.Lambda.Powertools.Metrics.MetricDirective.#ctor
  name: MetricDirective()
  href: api/AWS.Lambda.Powertools.Metrics.MetricDirective.html#AWS_Lambda_Powertools_Metrics_MetricDirective__ctor
  commentId: M:AWS.Lambda.Powertools.Metrics.MetricDirective.#ctor
  name.vb: New()
  fullName: AWS.Lambda.Powertools.Metrics.MetricDirective.MetricDirective()
  fullName.vb: AWS.Lambda.Powertools.Metrics.MetricDirective.New()
  nameWithType: MetricDirective.MetricDirective()
  nameWithType.vb: MetricDirective.New()
- uid: AWS.Lambda.Powertools.Metrics.MetricDirective.#ctor(System.String,System.Collections.Generic.List{AWS.Lambda.Powertools.Metrics.DimensionSet})
  name: MetricDirective(string, List<DimensionSet>)
  href: api/AWS.Lambda.Powertools.Metrics.MetricDirective.html#AWS_Lambda_Powertools_Metrics_MetricDirective__ctor_System_String_System_Collections_Generic_List_AWS_Lambda_Powertools_Metrics_DimensionSet__
  commentId: M:AWS.Lambda.Powertools.Metrics.MetricDirective.#ctor(System.String,System.Collections.Generic.List{AWS.Lambda.Powertools.Metrics.DimensionSet})
  name.vb: New(String, List(Of DimensionSet))
  fullName: AWS.Lambda.Powertools.Metrics.MetricDirective.MetricDirective(string, System.Collections.Generic.List<AWS.Lambda.Powertools.Metrics.DimensionSet>)
  fullName.vb: AWS.Lambda.Powertools.Metrics.MetricDirective.New(String, System.Collections.Generic.List(Of AWS.Lambda.Powertools.Metrics.DimensionSet))
  nameWithType: MetricDirective.MetricDirective(string, List<DimensionSet>)
  nameWithType.vb: MetricDirective.New(String, List(Of DimensionSet))
- uid: AWS.Lambda.Powertools.Metrics.MetricDirective.#ctor(System.String)
  name: MetricDirective(string)
  href: api/AWS.Lambda.Powertools.Metrics.MetricDirective.html#AWS_Lambda_Powertools_Metrics_MetricDirective__ctor_System_String_
  commentId: M:AWS.Lambda.Powertools.Metrics.MetricDirective.#ctor(System.String)
  name.vb: New(String)
  fullName: AWS.Lambda.Powertools.Metrics.MetricDirective.MetricDirective(string)
  fullName.vb: AWS.Lambda.Powertools.Metrics.MetricDirective.New(String)
  nameWithType: MetricDirective.MetricDirective(string)
  nameWithType.vb: MetricDirective.New(String)
- uid: AWS.Lambda.Powertools.Metrics.MetricDirective.#ctor*
  name: MetricDirective
  href: api/AWS.Lambda.Powertools.Metrics.MetricDirective.html#AWS_Lambda_Powertools_Metrics_MetricDirective__ctor_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricDirective.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AWS.Lambda.Powertools.Metrics.MetricDirective.MetricDirective
  fullName.vb: AWS.Lambda.Powertools.Metrics.MetricDirective.New
  nameWithType: MetricDirective.MetricDirective
  nameWithType.vb: MetricDirective.New
- uid: AWS.Lambda.Powertools.Metrics.MetricDirective.AddMetric(System.String,System.Double,AWS.Lambda.Powertools.Metrics.MetricUnit)
  name: AddMetric(string, double, MetricUnit)
  href: api/AWS.Lambda.Powertools.Metrics.MetricDirective.html#AWS_Lambda_Powertools_Metrics_MetricDirective_AddMetric_System_String_System_Double_AWS_Lambda_Powertools_Metrics_MetricUnit_
  commentId: M:AWS.Lambda.Powertools.Metrics.MetricDirective.AddMetric(System.String,System.Double,AWS.Lambda.Powertools.Metrics.MetricUnit)
  name.vb: AddMetric(String, Double, MetricUnit)
  fullName: AWS.Lambda.Powertools.Metrics.MetricDirective.AddMetric(string, double, AWS.Lambda.Powertools.Metrics.MetricUnit)
  fullName.vb: AWS.Lambda.Powertools.Metrics.MetricDirective.AddMetric(String, Double, AWS.Lambda.Powertools.Metrics.MetricUnit)
  nameWithType: MetricDirective.AddMetric(string, double, MetricUnit)
  nameWithType.vb: MetricDirective.AddMetric(String, Double, MetricUnit)
- uid: AWS.Lambda.Powertools.Metrics.MetricDirective.AddMetric*
  name: AddMetric
  href: api/AWS.Lambda.Powertools.Metrics.MetricDirective.html#AWS_Lambda_Powertools_Metrics_MetricDirective_AddMetric_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricDirective.AddMetric
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricDirective.AddMetric
  nameWithType: MetricDirective.AddMetric
- uid: AWS.Lambda.Powertools.Metrics.MetricDirective.AllDimensionKeys
  name: AllDimensionKeys
  href: api/AWS.Lambda.Powertools.Metrics.MetricDirective.html#AWS_Lambda_Powertools_Metrics_MetricDirective_AllDimensionKeys
  commentId: P:AWS.Lambda.Powertools.Metrics.MetricDirective.AllDimensionKeys
  fullName: AWS.Lambda.Powertools.Metrics.MetricDirective.AllDimensionKeys
  nameWithType: MetricDirective.AllDimensionKeys
- uid: AWS.Lambda.Powertools.Metrics.MetricDirective.AllDimensionKeys*
  name: AllDimensionKeys
  href: api/AWS.Lambda.Powertools.Metrics.MetricDirective.html#AWS_Lambda_Powertools_Metrics_MetricDirective_AllDimensionKeys_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricDirective.AllDimensionKeys
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricDirective.AllDimensionKeys
  nameWithType: MetricDirective.AllDimensionKeys
- uid: AWS.Lambda.Powertools.Metrics.MetricDirective.DefaultDimensions
  name: DefaultDimensions
  href: api/AWS.Lambda.Powertools.Metrics.MetricDirective.html#AWS_Lambda_Powertools_Metrics_MetricDirective_DefaultDimensions
  commentId: P:AWS.Lambda.Powertools.Metrics.MetricDirective.DefaultDimensions
  fullName: AWS.Lambda.Powertools.Metrics.MetricDirective.DefaultDimensions
  nameWithType: MetricDirective.DefaultDimensions
- uid: AWS.Lambda.Powertools.Metrics.MetricDirective.DefaultDimensions*
  name: DefaultDimensions
  href: api/AWS.Lambda.Powertools.Metrics.MetricDirective.html#AWS_Lambda_Powertools_Metrics_MetricDirective_DefaultDimensions_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricDirective.DefaultDimensions
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricDirective.DefaultDimensions
  nameWithType: MetricDirective.DefaultDimensions
- uid: AWS.Lambda.Powertools.Metrics.MetricDirective.Dimensions
  name: Dimensions
  href: api/AWS.Lambda.Powertools.Metrics.MetricDirective.html#AWS_Lambda_Powertools_Metrics_MetricDirective_Dimensions
  commentId: P:AWS.Lambda.Powertools.Metrics.MetricDirective.Dimensions
  fullName: AWS.Lambda.Powertools.Metrics.MetricDirective.Dimensions
  nameWithType: MetricDirective.Dimensions
- uid: AWS.Lambda.Powertools.Metrics.MetricDirective.Dimensions*
  name: Dimensions
  href: api/AWS.Lambda.Powertools.Metrics.MetricDirective.html#AWS_Lambda_Powertools_Metrics_MetricDirective_Dimensions_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricDirective.Dimensions
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricDirective.Dimensions
  nameWithType: MetricDirective.Dimensions
- uid: AWS.Lambda.Powertools.Metrics.MetricDirective.Metrics
  name: Metrics
  href: api/AWS.Lambda.Powertools.Metrics.MetricDirective.html#AWS_Lambda_Powertools_Metrics_MetricDirective_Metrics
  commentId: P:AWS.Lambda.Powertools.Metrics.MetricDirective.Metrics
  fullName: AWS.Lambda.Powertools.Metrics.MetricDirective.Metrics
  nameWithType: MetricDirective.Metrics
- uid: AWS.Lambda.Powertools.Metrics.MetricDirective.Metrics*
  name: Metrics
  href: api/AWS.Lambda.Powertools.Metrics.MetricDirective.html#AWS_Lambda_Powertools_Metrics_MetricDirective_Metrics_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricDirective.Metrics
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricDirective.Metrics
  nameWithType: MetricDirective.Metrics
- uid: AWS.Lambda.Powertools.Metrics.MetricDirective.Namespace
  name: Namespace
  href: api/AWS.Lambda.Powertools.Metrics.MetricDirective.html#AWS_Lambda_Powertools_Metrics_MetricDirective_Namespace
  commentId: P:AWS.Lambda.Powertools.Metrics.MetricDirective.Namespace
  fullName: AWS.Lambda.Powertools.Metrics.MetricDirective.Namespace
  nameWithType: MetricDirective.Namespace
- uid: AWS.Lambda.Powertools.Metrics.MetricDirective.Namespace*
  name: Namespace
  href: api/AWS.Lambda.Powertools.Metrics.MetricDirective.html#AWS_Lambda_Powertools_Metrics_MetricDirective_Namespace_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricDirective.Namespace
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricDirective.Namespace
  nameWithType: MetricDirective.Namespace
- uid: AWS.Lambda.Powertools.Metrics.MetricDirective.Service
  name: Service
  href: api/AWS.Lambda.Powertools.Metrics.MetricDirective.html#AWS_Lambda_Powertools_Metrics_MetricDirective_Service
  commentId: P:AWS.Lambda.Powertools.Metrics.MetricDirective.Service
  fullName: AWS.Lambda.Powertools.Metrics.MetricDirective.Service
  nameWithType: MetricDirective.Service
- uid: AWS.Lambda.Powertools.Metrics.MetricDirective.Service*
  name: Service
  href: api/AWS.Lambda.Powertools.Metrics.MetricDirective.html#AWS_Lambda_Powertools_Metrics_MetricDirective_Service_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricDirective.Service
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricDirective.Service
  nameWithType: MetricDirective.Service
- uid: AWS.Lambda.Powertools.Metrics.Metrics
  name: Metrics
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html
  commentId: T:AWS.Lambda.Powertools.Metrics.Metrics
  fullName: AWS.Lambda.Powertools.Metrics.Metrics
  nameWithType: Metrics
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AddDimension(System.String,System.String)
  name: AddDimension(string, string)
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AddDimension_System_String_System_String_
  commentId: M:AWS.Lambda.Powertools.Metrics.Metrics.AddDimension(System.String,System.String)
  name.vb: AddDimension(String, String)
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AddDimension(string, string)
  fullName.vb: AWS.Lambda.Powertools.Metrics.Metrics.AddDimension(String, String)
  nameWithType: Metrics.AddDimension(string, string)
  nameWithType.vb: Metrics.AddDimension(String, String)
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AddDimension*
  name: AddDimension
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AddDimension_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metrics.AddDimension
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AddDimension
  nameWithType: Metrics.AddDimension
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AddMetadata(System.String,System.Object)
  name: AddMetadata(string, object)
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AddMetadata_System_String_System_Object_
  commentId: M:AWS.Lambda.Powertools.Metrics.Metrics.AddMetadata(System.String,System.Object)
  name.vb: AddMetadata(String, Object)
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AddMetadata(string, object)
  fullName.vb: AWS.Lambda.Powertools.Metrics.Metrics.AddMetadata(String, Object)
  nameWithType: Metrics.AddMetadata(string, object)
  nameWithType.vb: Metrics.AddMetadata(String, Object)
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AddMetadata*
  name: AddMetadata
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AddMetadata_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metrics.AddMetadata
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AddMetadata
  nameWithType: Metrics.AddMetadata
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AddMetric(System.String,System.Double,AWS.Lambda.Powertools.Metrics.MetricUnit)
  name: AddMetric(string, double, MetricUnit)
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AddMetric_System_String_System_Double_AWS_Lambda_Powertools_Metrics_MetricUnit_
  commentId: M:AWS.Lambda.Powertools.Metrics.Metrics.AddMetric(System.String,System.Double,AWS.Lambda.Powertools.Metrics.MetricUnit)
  name.vb: AddMetric(String, Double, MetricUnit)
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AddMetric(string, double, AWS.Lambda.Powertools.Metrics.MetricUnit)
  fullName.vb: AWS.Lambda.Powertools.Metrics.Metrics.AddMetric(String, Double, AWS.Lambda.Powertools.Metrics.MetricUnit)
  nameWithType: Metrics.AddMetric(string, double, MetricUnit)
  nameWithType.vb: Metrics.AddMetric(String, Double, MetricUnit)
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AddMetric*
  name: AddMetric
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AddMetric_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metrics.AddMetric
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AddMetric
  nameWithType: Metrics.AddMetric
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#AddDimension(System.String,System.String)
  name: IMetrics.AddDimension(string, string)
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AWS_Lambda_Powertools_Metrics_IMetrics_AddDimension_System_String_System_String_
  commentId: M:AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#AddDimension(System.String,System.String)
  name.vb: ''
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AWS.Lambda.Powertools.Metrics.IMetrics.AddDimension(string, string)
  fullName.vb: ''
  nameWithType: Metrics.IMetrics.AddDimension(string, string)
  nameWithType.vb: ''
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#AddDimension*
  name: IMetrics.AddDimension
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AWS_Lambda_Powertools_Metrics_IMetrics_AddDimension_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#AddDimension
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AWS.Lambda.Powertools.Metrics.IMetrics.AddDimension
  nameWithType: Metrics.IMetrics.AddDimension
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#AddMetadata(System.String,System.Object)
  name: IMetrics.AddMetadata(string, object)
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AWS_Lambda_Powertools_Metrics_IMetrics_AddMetadata_System_String_System_Object_
  commentId: M:AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#AddMetadata(System.String,System.Object)
  name.vb: ''
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AWS.Lambda.Powertools.Metrics.IMetrics.AddMetadata(string, object)
  fullName.vb: ''
  nameWithType: Metrics.IMetrics.AddMetadata(string, object)
  nameWithType.vb: ''
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#AddMetadata*
  name: IMetrics.AddMetadata
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AWS_Lambda_Powertools_Metrics_IMetrics_AddMetadata_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#AddMetadata
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AWS.Lambda.Powertools.Metrics.IMetrics.AddMetadata
  nameWithType: Metrics.IMetrics.AddMetadata
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#AddMetric(System.String,System.Double,AWS.Lambda.Powertools.Metrics.MetricUnit)
  name: IMetrics.AddMetric(string, double, MetricUnit)
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AWS_Lambda_Powertools_Metrics_IMetrics_AddMetric_System_String_System_Double_AWS_Lambda_Powertools_Metrics_MetricUnit_
  commentId: M:AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#AddMetric(System.String,System.Double,AWS.Lambda.Powertools.Metrics.MetricUnit)
  name.vb: ''
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AWS.Lambda.Powertools.Metrics.IMetrics.AddMetric(string, double, AWS.Lambda.Powertools.Metrics.MetricUnit)
  fullName.vb: ''
  nameWithType: Metrics.IMetrics.AddMetric(string, double, MetricUnit)
  nameWithType.vb: ''
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#AddMetric*
  name: IMetrics.AddMetric
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AWS_Lambda_Powertools_Metrics_IMetrics_AddMetric_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#AddMetric
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AWS.Lambda.Powertools.Metrics.IMetrics.AddMetric
  nameWithType: Metrics.IMetrics.AddMetric
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#Flush(System.Boolean)
  name: IMetrics.Flush(bool)
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AWS_Lambda_Powertools_Metrics_IMetrics_Flush_System_Boolean_
  commentId: M:AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#Flush(System.Boolean)
  name.vb: ''
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AWS.Lambda.Powertools.Metrics.IMetrics.Flush(bool)
  fullName.vb: ''
  nameWithType: Metrics.IMetrics.Flush(bool)
  nameWithType.vb: ''
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#Flush*
  name: IMetrics.Flush
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AWS_Lambda_Powertools_Metrics_IMetrics_Flush_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#Flush
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AWS.Lambda.Powertools.Metrics.IMetrics.Flush
  nameWithType: Metrics.IMetrics.Flush
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#GetNamespace
  name: IMetrics.GetNamespace()
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AWS_Lambda_Powertools_Metrics_IMetrics_GetNamespace
  commentId: M:AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#GetNamespace
  name.vb: ''
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AWS.Lambda.Powertools.Metrics.IMetrics.GetNamespace()
  fullName.vb: ''
  nameWithType: Metrics.IMetrics.GetNamespace()
  nameWithType.vb: ''
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#GetNamespace*
  name: IMetrics.GetNamespace
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AWS_Lambda_Powertools_Metrics_IMetrics_GetNamespace_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#GetNamespace
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AWS.Lambda.Powertools.Metrics.IMetrics.GetNamespace
  nameWithType: Metrics.IMetrics.GetNamespace
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#GetService
  name: IMetrics.GetService()
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AWS_Lambda_Powertools_Metrics_IMetrics_GetService
  commentId: M:AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#GetService
  name.vb: ''
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AWS.Lambda.Powertools.Metrics.IMetrics.GetService()
  fullName.vb: ''
  nameWithType: Metrics.IMetrics.GetService()
  nameWithType.vb: ''
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#GetService*
  name: IMetrics.GetService
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AWS_Lambda_Powertools_Metrics_IMetrics_GetService_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#GetService
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AWS.Lambda.Powertools.Metrics.IMetrics.GetService
  nameWithType: Metrics.IMetrics.GetService
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#PushSingleMetric(System.String,System.Double,AWS.Lambda.Powertools.Metrics.MetricUnit,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  name: IMetrics.PushSingleMetric(string, double, MetricUnit, string, string, Dictionary<string, string>)
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AWS_Lambda_Powertools_Metrics_IMetrics_PushSingleMetric_System_String_System_Double_AWS_Lambda_Powertools_Metrics_MetricUnit_System_String_System_String_System_Collections_Generic_Dictionary_System_String_System_String__
  commentId: M:AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#PushSingleMetric(System.String,System.Double,AWS.Lambda.Powertools.Metrics.MetricUnit,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  name.vb: ''
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AWS.Lambda.Powertools.Metrics.IMetrics.PushSingleMetric(string, double, AWS.Lambda.Powertools.Metrics.MetricUnit, string, string, System.Collections.Generic.Dictionary<string, string>)
  fullName.vb: ''
  nameWithType: Metrics.IMetrics.PushSingleMetric(string, double, MetricUnit, string, string, Dictionary<string, string>)
  nameWithType.vb: ''
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#PushSingleMetric*
  name: IMetrics.PushSingleMetric
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AWS_Lambda_Powertools_Metrics_IMetrics_PushSingleMetric_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#PushSingleMetric
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AWS.Lambda.Powertools.Metrics.IMetrics.PushSingleMetric
  nameWithType: Metrics.IMetrics.PushSingleMetric
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#SetDefaultDimensions(System.Collections.Generic.Dictionary{System.String,System.String})
  name: IMetrics.SetDefaultDimensions(Dictionary<string, string>)
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AWS_Lambda_Powertools_Metrics_IMetrics_SetDefaultDimensions_System_Collections_Generic_Dictionary_System_String_System_String__
  commentId: M:AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#SetDefaultDimensions(System.Collections.Generic.Dictionary{System.String,System.String})
  name.vb: ''
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AWS.Lambda.Powertools.Metrics.IMetrics.SetDefaultDimensions(System.Collections.Generic.Dictionary<string, string>)
  fullName.vb: ''
  nameWithType: Metrics.IMetrics.SetDefaultDimensions(Dictionary<string, string>)
  nameWithType.vb: ''
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#SetDefaultDimensions*
  name: IMetrics.SetDefaultDimensions
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AWS_Lambda_Powertools_Metrics_IMetrics_SetDefaultDimensions_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#SetDefaultDimensions
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AWS.Lambda.Powertools.Metrics.IMetrics.SetDefaultDimensions
  nameWithType: Metrics.IMetrics.SetDefaultDimensions
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#SetNamespace(System.String)
  name: IMetrics.SetNamespace(string)
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AWS_Lambda_Powertools_Metrics_IMetrics_SetNamespace_System_String_
  commentId: M:AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#SetNamespace(System.String)
  name.vb: ''
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AWS.Lambda.Powertools.Metrics.IMetrics.SetNamespace(string)
  fullName.vb: ''
  nameWithType: Metrics.IMetrics.SetNamespace(string)
  nameWithType.vb: ''
- uid: AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#SetNamespace*
  name: IMetrics.SetNamespace
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_AWS_Lambda_Powertools_Metrics_IMetrics_SetNamespace_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metrics.AWS#Lambda#Powertools#Metrics#IMetrics#SetNamespace
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.AWS.Lambda.Powertools.Metrics.IMetrics.SetNamespace
  nameWithType: Metrics.IMetrics.SetNamespace
- uid: AWS.Lambda.Powertools.Metrics.Metrics.Dispose
  name: Dispose()
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_Dispose
  commentId: M:AWS.Lambda.Powertools.Metrics.Metrics.Dispose
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.Dispose()
  nameWithType: Metrics.Dispose()
- uid: AWS.Lambda.Powertools.Metrics.Metrics.Dispose*
  name: Dispose
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_Dispose_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metrics.Dispose
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.Dispose
  nameWithType: Metrics.Dispose
- uid: AWS.Lambda.Powertools.Metrics.Metrics.GetNamespace
  name: GetNamespace()
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_GetNamespace
  commentId: M:AWS.Lambda.Powertools.Metrics.Metrics.GetNamespace
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.GetNamespace()
  nameWithType: Metrics.GetNamespace()
- uid: AWS.Lambda.Powertools.Metrics.Metrics.GetNamespace*
  name: GetNamespace
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_GetNamespace_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metrics.GetNamespace
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.GetNamespace
  nameWithType: Metrics.GetNamespace
- uid: AWS.Lambda.Powertools.Metrics.Metrics.PushSingleMetric(System.String,System.Double,AWS.Lambda.Powertools.Metrics.MetricUnit,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  name: PushSingleMetric(string, double, MetricUnit, string, string, Dictionary<string, string>)
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_PushSingleMetric_System_String_System_Double_AWS_Lambda_Powertools_Metrics_MetricUnit_System_String_System_String_System_Collections_Generic_Dictionary_System_String_System_String__
  commentId: M:AWS.Lambda.Powertools.Metrics.Metrics.PushSingleMetric(System.String,System.Double,AWS.Lambda.Powertools.Metrics.MetricUnit,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  name.vb: PushSingleMetric(String, Double, MetricUnit, String, String, Dictionary(Of String, String))
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.PushSingleMetric(string, double, AWS.Lambda.Powertools.Metrics.MetricUnit, string, string, System.Collections.Generic.Dictionary<string, string>)
  fullName.vb: AWS.Lambda.Powertools.Metrics.Metrics.PushSingleMetric(String, Double, AWS.Lambda.Powertools.Metrics.MetricUnit, String, String, System.Collections.Generic.Dictionary(Of String, String))
  nameWithType: Metrics.PushSingleMetric(string, double, MetricUnit, string, string, Dictionary<string, string>)
  nameWithType.vb: Metrics.PushSingleMetric(String, Double, MetricUnit, String, String, Dictionary(Of String, String))
- uid: AWS.Lambda.Powertools.Metrics.Metrics.PushSingleMetric*
  name: PushSingleMetric
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_PushSingleMetric_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metrics.PushSingleMetric
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.PushSingleMetric
  nameWithType: Metrics.PushSingleMetric
- uid: AWS.Lambda.Powertools.Metrics.Metrics.Serialize
  name: Serialize()
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_Serialize
  commentId: M:AWS.Lambda.Powertools.Metrics.Metrics.Serialize
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.Serialize()
  nameWithType: Metrics.Serialize()
- uid: AWS.Lambda.Powertools.Metrics.Metrics.Serialize*
  name: Serialize
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_Serialize_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metrics.Serialize
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.Serialize
  nameWithType: Metrics.Serialize
- uid: AWS.Lambda.Powertools.Metrics.Metrics.SetDefaultDimensions(System.Collections.Generic.Dictionary{System.String,System.String})
  name: SetDefaultDimensions(Dictionary<string, string>)
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_SetDefaultDimensions_System_Collections_Generic_Dictionary_System_String_System_String__
  commentId: M:AWS.Lambda.Powertools.Metrics.Metrics.SetDefaultDimensions(System.Collections.Generic.Dictionary{System.String,System.String})
  name.vb: SetDefaultDimensions(Dictionary(Of String, String))
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.SetDefaultDimensions(System.Collections.Generic.Dictionary<string, string>)
  fullName.vb: AWS.Lambda.Powertools.Metrics.Metrics.SetDefaultDimensions(System.Collections.Generic.Dictionary(Of String, String))
  nameWithType: Metrics.SetDefaultDimensions(Dictionary<string, string>)
  nameWithType.vb: Metrics.SetDefaultDimensions(Dictionary(Of String, String))
- uid: AWS.Lambda.Powertools.Metrics.Metrics.SetDefaultDimensions*
  name: SetDefaultDimensions
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_SetDefaultDimensions_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metrics.SetDefaultDimensions
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.SetDefaultDimensions
  nameWithType: Metrics.SetDefaultDimensions
- uid: AWS.Lambda.Powertools.Metrics.Metrics.SetNamespace(System.String)
  name: SetNamespace(string)
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_SetNamespace_System_String_
  commentId: M:AWS.Lambda.Powertools.Metrics.Metrics.SetNamespace(System.String)
  name.vb: SetNamespace(String)
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.SetNamespace(string)
  fullName.vb: AWS.Lambda.Powertools.Metrics.Metrics.SetNamespace(String)
  nameWithType: Metrics.SetNamespace(string)
  nameWithType.vb: Metrics.SetNamespace(String)
- uid: AWS.Lambda.Powertools.Metrics.Metrics.SetNamespace*
  name: SetNamespace
  href: api/AWS.Lambda.Powertools.Metrics.Metrics.html#AWS_Lambda_Powertools_Metrics_Metrics_SetNamespace_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.Metrics.SetNamespace
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.Metrics.SetNamespace
  nameWithType: Metrics.SetNamespace
- uid: AWS.Lambda.Powertools.Metrics.MetricsAttribute
  name: MetricsAttribute
  href: api/AWS.Lambda.Powertools.Metrics.MetricsAttribute.html
  commentId: T:AWS.Lambda.Powertools.Metrics.MetricsAttribute
  fullName: AWS.Lambda.Powertools.Metrics.MetricsAttribute
  nameWithType: MetricsAttribute
- uid: AWS.Lambda.Powertools.Metrics.MetricsAttribute.CaptureColdStart
  name: CaptureColdStart
  href: api/AWS.Lambda.Powertools.Metrics.MetricsAttribute.html#AWS_Lambda_Powertools_Metrics_MetricsAttribute_CaptureColdStart
  commentId: P:AWS.Lambda.Powertools.Metrics.MetricsAttribute.CaptureColdStart
  fullName: AWS.Lambda.Powertools.Metrics.MetricsAttribute.CaptureColdStart
  nameWithType: MetricsAttribute.CaptureColdStart
- uid: AWS.Lambda.Powertools.Metrics.MetricsAttribute.CaptureColdStart*
  name: CaptureColdStart
  href: api/AWS.Lambda.Powertools.Metrics.MetricsAttribute.html#AWS_Lambda_Powertools_Metrics_MetricsAttribute_CaptureColdStart_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricsAttribute.CaptureColdStart
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricsAttribute.CaptureColdStart
  nameWithType: MetricsAttribute.CaptureColdStart
- uid: AWS.Lambda.Powertools.Metrics.MetricsAttribute.CreateHandler
  name: CreateHandler()
  href: api/AWS.Lambda.Powertools.Metrics.MetricsAttribute.html#AWS_Lambda_Powertools_Metrics_MetricsAttribute_CreateHandler
  commentId: M:AWS.Lambda.Powertools.Metrics.MetricsAttribute.CreateHandler
  fullName: AWS.Lambda.Powertools.Metrics.MetricsAttribute.CreateHandler()
  nameWithType: MetricsAttribute.CreateHandler()
- uid: AWS.Lambda.Powertools.Metrics.MetricsAttribute.CreateHandler*
  name: CreateHandler
  href: api/AWS.Lambda.Powertools.Metrics.MetricsAttribute.html#AWS_Lambda_Powertools_Metrics_MetricsAttribute_CreateHandler_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricsAttribute.CreateHandler
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricsAttribute.CreateHandler
  nameWithType: MetricsAttribute.CreateHandler
- uid: AWS.Lambda.Powertools.Metrics.MetricsAttribute.Namespace
  name: Namespace
  href: api/AWS.Lambda.Powertools.Metrics.MetricsAttribute.html#AWS_Lambda_Powertools_Metrics_MetricsAttribute_Namespace
  commentId: P:AWS.Lambda.Powertools.Metrics.MetricsAttribute.Namespace
  fullName: AWS.Lambda.Powertools.Metrics.MetricsAttribute.Namespace
  nameWithType: MetricsAttribute.Namespace
- uid: AWS.Lambda.Powertools.Metrics.MetricsAttribute.Namespace*
  name: Namespace
  href: api/AWS.Lambda.Powertools.Metrics.MetricsAttribute.html#AWS_Lambda_Powertools_Metrics_MetricsAttribute_Namespace_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricsAttribute.Namespace
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricsAttribute.Namespace
  nameWithType: MetricsAttribute.Namespace
- uid: AWS.Lambda.Powertools.Metrics.MetricsAttribute.RaiseOnEmptyMetrics
  name: RaiseOnEmptyMetrics
  href: api/AWS.Lambda.Powertools.Metrics.MetricsAttribute.html#AWS_Lambda_Powertools_Metrics_MetricsAttribute_RaiseOnEmptyMetrics
  commentId: P:AWS.Lambda.Powertools.Metrics.MetricsAttribute.RaiseOnEmptyMetrics
  fullName: AWS.Lambda.Powertools.Metrics.MetricsAttribute.RaiseOnEmptyMetrics
  nameWithType: MetricsAttribute.RaiseOnEmptyMetrics
- uid: AWS.Lambda.Powertools.Metrics.MetricsAttribute.RaiseOnEmptyMetrics*
  name: RaiseOnEmptyMetrics
  href: api/AWS.Lambda.Powertools.Metrics.MetricsAttribute.html#AWS_Lambda_Powertools_Metrics_MetricsAttribute_RaiseOnEmptyMetrics_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricsAttribute.RaiseOnEmptyMetrics
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricsAttribute.RaiseOnEmptyMetrics
  nameWithType: MetricsAttribute.RaiseOnEmptyMetrics
- uid: AWS.Lambda.Powertools.Metrics.MetricsAttribute.Service
  name: Service
  href: api/AWS.Lambda.Powertools.Metrics.MetricsAttribute.html#AWS_Lambda_Powertools_Metrics_MetricsAttribute_Service
  commentId: P:AWS.Lambda.Powertools.Metrics.MetricsAttribute.Service
  fullName: AWS.Lambda.Powertools.Metrics.MetricsAttribute.Service
  nameWithType: MetricsAttribute.Service
- uid: AWS.Lambda.Powertools.Metrics.MetricsAttribute.Service*
  name: Service
  href: api/AWS.Lambda.Powertools.Metrics.MetricsAttribute.html#AWS_Lambda_Powertools_Metrics_MetricsAttribute_Service_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricsAttribute.Service
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricsAttribute.Service
  nameWithType: MetricsAttribute.Service
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext
  name: MetricsContext
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html
  commentId: T:AWS.Lambda.Powertools.Metrics.MetricsContext
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext
  nameWithType: MetricsContext
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.#ctor
  name: MetricsContext()
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext__ctor
  commentId: M:AWS.Lambda.Powertools.Metrics.MetricsContext.#ctor
  name.vb: New()
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.MetricsContext()
  fullName.vb: AWS.Lambda.Powertools.Metrics.MetricsContext.New()
  nameWithType: MetricsContext.MetricsContext()
  nameWithType.vb: MetricsContext.New()
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.#ctor*
  name: MetricsContext
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext__ctor_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricsContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.MetricsContext
  fullName.vb: AWS.Lambda.Powertools.Metrics.MetricsContext.New
  nameWithType: MetricsContext.MetricsContext
  nameWithType.vb: MetricsContext.New
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.AddDimension(System.String,System.String)
  name: AddDimension(string, string)
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext_AddDimension_System_String_System_String_
  commentId: M:AWS.Lambda.Powertools.Metrics.MetricsContext.AddDimension(System.String,System.String)
  name.vb: AddDimension(String, String)
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.AddDimension(string, string)
  fullName.vb: AWS.Lambda.Powertools.Metrics.MetricsContext.AddDimension(String, String)
  nameWithType: MetricsContext.AddDimension(string, string)
  nameWithType.vb: MetricsContext.AddDimension(String, String)
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.AddDimension*
  name: AddDimension
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext_AddDimension_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricsContext.AddDimension
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.AddDimension
  nameWithType: MetricsContext.AddDimension
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.AddMetadata(System.String,System.Object)
  name: AddMetadata(string, object)
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext_AddMetadata_System_String_System_Object_
  commentId: M:AWS.Lambda.Powertools.Metrics.MetricsContext.AddMetadata(System.String,System.Object)
  name.vb: AddMetadata(String, Object)
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.AddMetadata(string, object)
  fullName.vb: AWS.Lambda.Powertools.Metrics.MetricsContext.AddMetadata(String, Object)
  nameWithType: MetricsContext.AddMetadata(string, object)
  nameWithType.vb: MetricsContext.AddMetadata(String, Object)
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.AddMetadata*
  name: AddMetadata
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext_AddMetadata_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricsContext.AddMetadata
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.AddMetadata
  nameWithType: MetricsContext.AddMetadata
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.AddMetric(System.String,System.Double,AWS.Lambda.Powertools.Metrics.MetricUnit)
  name: AddMetric(string, double, MetricUnit)
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext_AddMetric_System_String_System_Double_AWS_Lambda_Powertools_Metrics_MetricUnit_
  commentId: M:AWS.Lambda.Powertools.Metrics.MetricsContext.AddMetric(System.String,System.Double,AWS.Lambda.Powertools.Metrics.MetricUnit)
  name.vb: AddMetric(String, Double, MetricUnit)
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.AddMetric(string, double, AWS.Lambda.Powertools.Metrics.MetricUnit)
  fullName.vb: AWS.Lambda.Powertools.Metrics.MetricsContext.AddMetric(String, Double, AWS.Lambda.Powertools.Metrics.MetricUnit)
  nameWithType: MetricsContext.AddMetric(string, double, MetricUnit)
  nameWithType.vb: MetricsContext.AddMetric(String, Double, MetricUnit)
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.AddMetric*
  name: AddMetric
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext_AddMetric_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricsContext.AddMetric
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.AddMetric
  nameWithType: MetricsContext.AddMetric
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.ClearMetrics
  name: ClearMetrics()
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext_ClearMetrics
  commentId: M:AWS.Lambda.Powertools.Metrics.MetricsContext.ClearMetrics
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.ClearMetrics()
  nameWithType: MetricsContext.ClearMetrics()
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.ClearMetrics*
  name: ClearMetrics
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext_ClearMetrics_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricsContext.ClearMetrics
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.ClearMetrics
  nameWithType: MetricsContext.ClearMetrics
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.Dispose
  name: Dispose()
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext_Dispose
  commentId: M:AWS.Lambda.Powertools.Metrics.MetricsContext.Dispose
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.Dispose()
  nameWithType: MetricsContext.Dispose()
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.Dispose*
  name: Dispose
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext_Dispose_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricsContext.Dispose
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.Dispose
  nameWithType: MetricsContext.Dispose
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.GetMetrics
  name: GetMetrics()
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext_GetMetrics
  commentId: M:AWS.Lambda.Powertools.Metrics.MetricsContext.GetMetrics
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.GetMetrics()
  nameWithType: MetricsContext.GetMetrics()
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.GetMetrics*
  name: GetMetrics
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext_GetMetrics_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricsContext.GetMetrics
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.GetMetrics
  nameWithType: MetricsContext.GetMetrics
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.Serialize
  name: Serialize()
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext_Serialize
  commentId: M:AWS.Lambda.Powertools.Metrics.MetricsContext.Serialize
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.Serialize()
  nameWithType: MetricsContext.Serialize()
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.Serialize*
  name: Serialize
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext_Serialize_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricsContext.Serialize
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.Serialize
  nameWithType: MetricsContext.Serialize
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.SetDefaultDimensions(System.Collections.Generic.List{AWS.Lambda.Powertools.Metrics.DimensionSet})
  name: SetDefaultDimensions(List<DimensionSet>)
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext_SetDefaultDimensions_System_Collections_Generic_List_AWS_Lambda_Powertools_Metrics_DimensionSet__
  commentId: M:AWS.Lambda.Powertools.Metrics.MetricsContext.SetDefaultDimensions(System.Collections.Generic.List{AWS.Lambda.Powertools.Metrics.DimensionSet})
  name.vb: SetDefaultDimensions(List(Of DimensionSet))
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.SetDefaultDimensions(System.Collections.Generic.List<AWS.Lambda.Powertools.Metrics.DimensionSet>)
  fullName.vb: AWS.Lambda.Powertools.Metrics.MetricsContext.SetDefaultDimensions(System.Collections.Generic.List(Of AWS.Lambda.Powertools.Metrics.DimensionSet))
  nameWithType: MetricsContext.SetDefaultDimensions(List<DimensionSet>)
  nameWithType.vb: MetricsContext.SetDefaultDimensions(List(Of DimensionSet))
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.SetDefaultDimensions*
  name: SetDefaultDimensions
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext_SetDefaultDimensions_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricsContext.SetDefaultDimensions
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.SetDefaultDimensions
  nameWithType: MetricsContext.SetDefaultDimensions
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.SetNamespace(System.String)
  name: SetNamespace(string)
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext_SetNamespace_System_String_
  commentId: M:AWS.Lambda.Powertools.Metrics.MetricsContext.SetNamespace(System.String)
  name.vb: SetNamespace(String)
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.SetNamespace(string)
  fullName.vb: AWS.Lambda.Powertools.Metrics.MetricsContext.SetNamespace(String)
  nameWithType: MetricsContext.SetNamespace(string)
  nameWithType.vb: MetricsContext.SetNamespace(String)
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.SetNamespace*
  name: SetNamespace
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext_SetNamespace_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricsContext.SetNamespace
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.SetNamespace
  nameWithType: MetricsContext.SetNamespace
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.SetService(System.String)
  name: SetService(string)
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext_SetService_System_String_
  commentId: M:AWS.Lambda.Powertools.Metrics.MetricsContext.SetService(System.String)
  name.vb: SetService(String)
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.SetService(string)
  fullName.vb: AWS.Lambda.Powertools.Metrics.MetricsContext.SetService(String)
  nameWithType: MetricsContext.SetService(string)
  nameWithType.vb: MetricsContext.SetService(String)
- uid: AWS.Lambda.Powertools.Metrics.MetricsContext.SetService*
  name: SetService
  href: api/AWS.Lambda.Powertools.Metrics.MetricsContext.html#AWS_Lambda_Powertools_Metrics_MetricsContext_SetService_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.MetricsContext.SetService
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.MetricsContext.SetService
  nameWithType: MetricsContext.SetService
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit
  name: MetricUnit
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html
  commentId: T:AWS.Lambda.Powertools.Metrics.MetricUnit
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit
  nameWithType: MetricUnit
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.Bits
  name: Bits
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_Bits
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.Bits
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.Bits
  nameWithType: MetricUnit.Bits
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.BitsPerSecond
  name: BitsPerSecond
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_BitsPerSecond
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.BitsPerSecond
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.BitsPerSecond
  nameWithType: MetricUnit.BitsPerSecond
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.Bytes
  name: Bytes
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_Bytes
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.Bytes
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.Bytes
  nameWithType: MetricUnit.Bytes
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.BytesPerSecond
  name: BytesPerSecond
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_BytesPerSecond
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.BytesPerSecond
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.BytesPerSecond
  nameWithType: MetricUnit.BytesPerSecond
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.Count
  name: Count
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_Count
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.Count
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.Count
  nameWithType: MetricUnit.Count
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.CountPerSecond
  name: CountPerSecond
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_CountPerSecond
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.CountPerSecond
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.CountPerSecond
  nameWithType: MetricUnit.CountPerSecond
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.Gigabits
  name: Gigabits
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_Gigabits
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.Gigabits
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.Gigabits
  nameWithType: MetricUnit.Gigabits
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.GigabitsPerSecond
  name: GigabitsPerSecond
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_GigabitsPerSecond
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.GigabitsPerSecond
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.GigabitsPerSecond
  nameWithType: MetricUnit.GigabitsPerSecond
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.Gigabytes
  name: Gigabytes
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_Gigabytes
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.Gigabytes
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.Gigabytes
  nameWithType: MetricUnit.Gigabytes
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.GigabytesPerSecond
  name: GigabytesPerSecond
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_GigabytesPerSecond
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.GigabytesPerSecond
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.GigabytesPerSecond
  nameWithType: MetricUnit.GigabytesPerSecond
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.Kilobits
  name: Kilobits
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_Kilobits
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.Kilobits
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.Kilobits
  nameWithType: MetricUnit.Kilobits
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.KilobitsPerSecond
  name: KilobitsPerSecond
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_KilobitsPerSecond
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.KilobitsPerSecond
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.KilobitsPerSecond
  nameWithType: MetricUnit.KilobitsPerSecond
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.Kilobytes
  name: Kilobytes
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_Kilobytes
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.Kilobytes
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.Kilobytes
  nameWithType: MetricUnit.Kilobytes
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.KilobytesPerSecond
  name: KilobytesPerSecond
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_KilobytesPerSecond
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.KilobytesPerSecond
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.KilobytesPerSecond
  nameWithType: MetricUnit.KilobytesPerSecond
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.Megabits
  name: Megabits
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_Megabits
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.Megabits
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.Megabits
  nameWithType: MetricUnit.Megabits
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.MegabitsPerSecond
  name: MegabitsPerSecond
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_MegabitsPerSecond
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.MegabitsPerSecond
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.MegabitsPerSecond
  nameWithType: MetricUnit.MegabitsPerSecond
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.Megabytes
  name: Megabytes
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_Megabytes
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.Megabytes
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.Megabytes
  nameWithType: MetricUnit.Megabytes
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.MegabytesPerSecond
  name: MegabytesPerSecond
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_MegabytesPerSecond
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.MegabytesPerSecond
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.MegabytesPerSecond
  nameWithType: MetricUnit.MegabytesPerSecond
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.Microseconds
  name: Microseconds
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_Microseconds
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.Microseconds
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.Microseconds
  nameWithType: MetricUnit.Microseconds
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.Milliseconds
  name: Milliseconds
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_Milliseconds
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.Milliseconds
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.Milliseconds
  nameWithType: MetricUnit.Milliseconds
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.None
  name: None
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_None
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.None
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.None
  nameWithType: MetricUnit.None
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.Percent
  name: Percent
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_Percent
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.Percent
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.Percent
  nameWithType: MetricUnit.Percent
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.Seconds
  name: Seconds
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_Seconds
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.Seconds
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.Seconds
  nameWithType: MetricUnit.Seconds
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.Terabits
  name: Terabits
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_Terabits
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.Terabits
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.Terabits
  nameWithType: MetricUnit.Terabits
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.TerabitsPerSecond
  name: TerabitsPerSecond
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_TerabitsPerSecond
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.TerabitsPerSecond
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.TerabitsPerSecond
  nameWithType: MetricUnit.TerabitsPerSecond
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.Terabytes
  name: Terabytes
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_Terabytes
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.Terabytes
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.Terabytes
  nameWithType: MetricUnit.Terabytes
- uid: AWS.Lambda.Powertools.Metrics.MetricUnit.TerabytesPerSecond
  name: TerabytesPerSecond
  href: api/AWS.Lambda.Powertools.Metrics.MetricUnit.html#AWS_Lambda_Powertools_Metrics_MetricUnit_TerabytesPerSecond
  commentId: F:AWS.Lambda.Powertools.Metrics.MetricUnit.TerabytesPerSecond
  fullName: AWS.Lambda.Powertools.Metrics.MetricUnit.TerabytesPerSecond
  nameWithType: MetricUnit.TerabytesPerSecond
- uid: AWS.Lambda.Powertools.Metrics.RootNode
  name: RootNode
  href: api/AWS.Lambda.Powertools.Metrics.RootNode.html
  commentId: T:AWS.Lambda.Powertools.Metrics.RootNode
  fullName: AWS.Lambda.Powertools.Metrics.RootNode
  nameWithType: RootNode
- uid: AWS.Lambda.Powertools.Metrics.RootNode.AWS
  name: AWS
  href: api/AWS.Lambda.Powertools.Metrics.RootNode.html#AWS_Lambda_Powertools_Metrics_RootNode_AWS
  commentId: P:AWS.Lambda.Powertools.Metrics.RootNode.AWS
  fullName: AWS.Lambda.Powertools.Metrics.RootNode.AWS
  nameWithType: RootNode.AWS
- uid: AWS.Lambda.Powertools.Metrics.RootNode.AWS*
  name: AWS
  href: api/AWS.Lambda.Powertools.Metrics.RootNode.html#AWS_Lambda_Powertools_Metrics_RootNode_AWS_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.RootNode.AWS
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.RootNode.AWS
  nameWithType: RootNode.AWS
- uid: AWS.Lambda.Powertools.Metrics.RootNode.MetricData
  name: MetricData
  href: api/AWS.Lambda.Powertools.Metrics.RootNode.html#AWS_Lambda_Powertools_Metrics_RootNode_MetricData
  commentId: P:AWS.Lambda.Powertools.Metrics.RootNode.MetricData
  fullName: AWS.Lambda.Powertools.Metrics.RootNode.MetricData
  nameWithType: RootNode.MetricData
- uid: AWS.Lambda.Powertools.Metrics.RootNode.MetricData*
  name: MetricData
  href: api/AWS.Lambda.Powertools.Metrics.RootNode.html#AWS_Lambda_Powertools_Metrics_RootNode_MetricData_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.RootNode.MetricData
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.RootNode.MetricData
  nameWithType: RootNode.MetricData
- uid: AWS.Lambda.Powertools.Metrics.RootNode.Serialize
  name: Serialize()
  href: api/AWS.Lambda.Powertools.Metrics.RootNode.html#AWS_Lambda_Powertools_Metrics_RootNode_Serialize
  commentId: M:AWS.Lambda.Powertools.Metrics.RootNode.Serialize
  fullName: AWS.Lambda.Powertools.Metrics.RootNode.Serialize()
  nameWithType: RootNode.Serialize()
- uid: AWS.Lambda.Powertools.Metrics.RootNode.Serialize*
  name: Serialize
  href: api/AWS.Lambda.Powertools.Metrics.RootNode.html#AWS_Lambda_Powertools_Metrics_RootNode_Serialize_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.RootNode.Serialize
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.RootNode.Serialize
  nameWithType: RootNode.Serialize
- uid: AWS.Lambda.Powertools.Metrics.SchemaValidationException
  name: SchemaValidationException
  href: api/AWS.Lambda.Powertools.Metrics.SchemaValidationException.html
  commentId: T:AWS.Lambda.Powertools.Metrics.SchemaValidationException
  fullName: AWS.Lambda.Powertools.Metrics.SchemaValidationException
  nameWithType: SchemaValidationException
- uid: AWS.Lambda.Powertools.Metrics.SchemaValidationException.#ctor(System.Boolean)
  name: SchemaValidationException(bool)
  href: api/AWS.Lambda.Powertools.Metrics.SchemaValidationException.html#AWS_Lambda_Powertools_Metrics_SchemaValidationException__ctor_System_Boolean_
  commentId: M:AWS.Lambda.Powertools.Metrics.SchemaValidationException.#ctor(System.Boolean)
  name.vb: New(Boolean)
  fullName: AWS.Lambda.Powertools.Metrics.SchemaValidationException.SchemaValidationException(bool)
  fullName.vb: AWS.Lambda.Powertools.Metrics.SchemaValidationException.New(Boolean)
  nameWithType: SchemaValidationException.SchemaValidationException(bool)
  nameWithType.vb: SchemaValidationException.New(Boolean)
- uid: AWS.Lambda.Powertools.Metrics.SchemaValidationException.#ctor(System.String)
  name: SchemaValidationException(string)
  href: api/AWS.Lambda.Powertools.Metrics.SchemaValidationException.html#AWS_Lambda_Powertools_Metrics_SchemaValidationException__ctor_System_String_
  commentId: M:AWS.Lambda.Powertools.Metrics.SchemaValidationException.#ctor(System.String)
  name.vb: New(String)
  fullName: AWS.Lambda.Powertools.Metrics.SchemaValidationException.SchemaValidationException(string)
  fullName.vb: AWS.Lambda.Powertools.Metrics.SchemaValidationException.New(String)
  nameWithType: SchemaValidationException.SchemaValidationException(string)
  nameWithType.vb: SchemaValidationException.New(String)
- uid: AWS.Lambda.Powertools.Metrics.SchemaValidationException.#ctor*
  name: SchemaValidationException
  href: api/AWS.Lambda.Powertools.Metrics.SchemaValidationException.html#AWS_Lambda_Powertools_Metrics_SchemaValidationException__ctor_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.SchemaValidationException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AWS.Lambda.Powertools.Metrics.SchemaValidationException.SchemaValidationException
  fullName.vb: AWS.Lambda.Powertools.Metrics.SchemaValidationException.New
  nameWithType: SchemaValidationException.SchemaValidationException
  nameWithType.vb: SchemaValidationException.New
- uid: AWS.Lambda.Powertools.Metrics.StringEnumConverter
  name: StringEnumConverter
  href: api/AWS.Lambda.Powertools.Metrics.StringEnumConverter.html
  commentId: T:AWS.Lambda.Powertools.Metrics.StringEnumConverter
  fullName: AWS.Lambda.Powertools.Metrics.StringEnumConverter
  nameWithType: StringEnumConverter
- uid: AWS.Lambda.Powertools.Metrics.StringEnumConverter.#ctor
  name: StringEnumConverter()
  href: api/AWS.Lambda.Powertools.Metrics.StringEnumConverter.html#AWS_Lambda_Powertools_Metrics_StringEnumConverter__ctor
  commentId: M:AWS.Lambda.Powertools.Metrics.StringEnumConverter.#ctor
  name.vb: New()
  fullName: AWS.Lambda.Powertools.Metrics.StringEnumConverter.StringEnumConverter()
  fullName.vb: AWS.Lambda.Powertools.Metrics.StringEnumConverter.New()
  nameWithType: StringEnumConverter.StringEnumConverter()
  nameWithType.vb: StringEnumConverter.New()
- uid: AWS.Lambda.Powertools.Metrics.StringEnumConverter.#ctor*
  name: StringEnumConverter
  href: api/AWS.Lambda.Powertools.Metrics.StringEnumConverter.html#AWS_Lambda_Powertools_Metrics_StringEnumConverter__ctor_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.StringEnumConverter.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AWS.Lambda.Powertools.Metrics.StringEnumConverter.StringEnumConverter
  fullName.vb: AWS.Lambda.Powertools.Metrics.StringEnumConverter.New
  nameWithType: StringEnumConverter.StringEnumConverter
  nameWithType.vb: StringEnumConverter.New
- uid: AWS.Lambda.Powertools.Metrics.StringEnumConverter.CanConvert(System.Type)
  name: CanConvert(Type)
  href: api/AWS.Lambda.Powertools.Metrics.StringEnumConverter.html#AWS_Lambda_Powertools_Metrics_StringEnumConverter_CanConvert_System_Type_
  commentId: M:AWS.Lambda.Powertools.Metrics.StringEnumConverter.CanConvert(System.Type)
  fullName: AWS.Lambda.Powertools.Metrics.StringEnumConverter.CanConvert(System.Type)
  nameWithType: StringEnumConverter.CanConvert(Type)
- uid: AWS.Lambda.Powertools.Metrics.StringEnumConverter.CanConvert*
  name: CanConvert
  href: api/AWS.Lambda.Powertools.Metrics.StringEnumConverter.html#AWS_Lambda_Powertools_Metrics_StringEnumConverter_CanConvert_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.StringEnumConverter.CanConvert
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.StringEnumConverter.CanConvert
  nameWithType: StringEnumConverter.CanConvert
- uid: AWS.Lambda.Powertools.Metrics.StringEnumConverter.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)
  name: CreateConverter(Type, JsonSerializerOptions)
  href: api/AWS.Lambda.Powertools.Metrics.StringEnumConverter.html#AWS_Lambda_Powertools_Metrics_StringEnumConverter_CreateConverter_System_Type_System_Text_Json_JsonSerializerOptions_
  commentId: M:AWS.Lambda.Powertools.Metrics.StringEnumConverter.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)
  fullName: AWS.Lambda.Powertools.Metrics.StringEnumConverter.CreateConverter(System.Type, System.Text.Json.JsonSerializerOptions)
  nameWithType: StringEnumConverter.CreateConverter(Type, JsonSerializerOptions)
- uid: AWS.Lambda.Powertools.Metrics.StringEnumConverter.CreateConverter*
  name: CreateConverter
  href: api/AWS.Lambda.Powertools.Metrics.StringEnumConverter.html#AWS_Lambda_Powertools_Metrics_StringEnumConverter_CreateConverter_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.StringEnumConverter.CreateConverter
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.StringEnumConverter.CreateConverter
  nameWithType: StringEnumConverter.CreateConverter
- uid: AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter
  name: UnixMillisecondDateTimeConverter
  href: api/AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter.html
  commentId: T:AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter
  fullName: AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter
  nameWithType: UnixMillisecondDateTimeConverter
- uid: AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  name: Read(ref Utf8JsonReader, Type, JsonSerializerOptions)
  href: api/AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter.html#AWS_Lambda_Powertools_Metrics_UnixMillisecondDateTimeConverter_Read_System_Text_Json_Utf8JsonReader__System_Type_System_Text_Json_JsonSerializerOptions_
  commentId: M:AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  name.vb: Read(Utf8JsonReader, Type, JsonSerializerOptions)
  fullName: AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter.Read(ref System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions)
  fullName.vb: AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter.Read(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions)
  nameWithType: UnixMillisecondDateTimeConverter.Read(ref Utf8JsonReader, Type, JsonSerializerOptions)
  nameWithType.vb: UnixMillisecondDateTimeConverter.Read(Utf8JsonReader, Type, JsonSerializerOptions)
- uid: AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter.Read*
  name: Read
  href: api/AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter.html#AWS_Lambda_Powertools_Metrics_UnixMillisecondDateTimeConverter_Read_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter.Read
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter.Read
  nameWithType: UnixMillisecondDateTimeConverter.Read
- uid: AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter.Write(System.Text.Json.Utf8JsonWriter,System.DateTime,System.Text.Json.JsonSerializerOptions)
  name: Write(Utf8JsonWriter, DateTime, JsonSerializerOptions)
  href: api/AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter.html#AWS_Lambda_Powertools_Metrics_UnixMillisecondDateTimeConverter_Write_System_Text_Json_Utf8JsonWriter_System_DateTime_System_Text_Json_JsonSerializerOptions_
  commentId: M:AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter.Write(System.Text.Json.Utf8JsonWriter,System.DateTime,System.Text.Json.JsonSerializerOptions)
  name.vb: Write(Utf8JsonWriter, Date, JsonSerializerOptions)
  fullName: AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter.Write(System.Text.Json.Utf8JsonWriter, System.DateTime, System.Text.Json.JsonSerializerOptions)
  fullName.vb: AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter.Write(System.Text.Json.Utf8JsonWriter, Date, System.Text.Json.JsonSerializerOptions)
  nameWithType: UnixMillisecondDateTimeConverter.Write(Utf8JsonWriter, DateTime, JsonSerializerOptions)
  nameWithType.vb: UnixMillisecondDateTimeConverter.Write(Utf8JsonWriter, Date, JsonSerializerOptions)
- uid: AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter.Write*
  name: Write
  href: api/AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter.html#AWS_Lambda_Powertools_Metrics_UnixMillisecondDateTimeConverter_Write_
  commentId: Overload:AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter.Write
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Metrics.UnixMillisecondDateTimeConverter.Write
  nameWithType: UnixMillisecondDateTimeConverter.Write
- uid: AWS.Lambda.Powertools.Tracing
  name: AWS.Lambda.Powertools.Tracing
  href: api/AWS.Lambda.Powertools.Tracing.html
  commentId: N:AWS.Lambda.Powertools.Tracing
  fullName: AWS.Lambda.Powertools.Tracing
  nameWithType: AWS.Lambda.Powertools.Tracing
- uid: AWS.Lambda.Powertools.Tracing.Internal
  name: AWS.Lambda.Powertools.Tracing.Internal
  href: api/AWS.Lambda.Powertools.Tracing.Internal.html
  commentId: N:AWS.Lambda.Powertools.Tracing.Internal
  fullName: AWS.Lambda.Powertools.Tracing.Internal
  nameWithType: AWS.Lambda.Powertools.Tracing.Internal
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder
  name: IXRayRecorder
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html
  commentId: T:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder
  nameWithType: IXRayRecorder
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddAnnotation(System.String,System.Object)
  name: AddAnnotation(string, object)
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_AddAnnotation_System_String_System_Object_
  commentId: M:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddAnnotation(System.String,System.Object)
  name.vb: AddAnnotation(String, Object)
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddAnnotation(string, object)
  fullName.vb: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddAnnotation(String, Object)
  nameWithType: IXRayRecorder.AddAnnotation(string, object)
  nameWithType.vb: IXRayRecorder.AddAnnotation(String, Object)
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddAnnotation*
  name: AddAnnotation
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_AddAnnotation_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddAnnotation
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddAnnotation
  nameWithType: IXRayRecorder.AddAnnotation
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddException(System.Exception)
  name: AddException(Exception)
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_AddException_System_Exception_
  commentId: M:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddException(System.Exception)
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddException(System.Exception)
  nameWithType: IXRayRecorder.AddException(Exception)
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddException*
  name: AddException
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_AddException_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddException
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddException
  nameWithType: IXRayRecorder.AddException
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddHttpInformation(System.String,System.Object)
  name: AddHttpInformation(string, object)
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_AddHttpInformation_System_String_System_Object_
  commentId: M:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddHttpInformation(System.String,System.Object)
  name.vb: AddHttpInformation(String, Object)
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddHttpInformation(string, object)
  fullName.vb: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddHttpInformation(String, Object)
  nameWithType: IXRayRecorder.AddHttpInformation(string, object)
  nameWithType.vb: IXRayRecorder.AddHttpInformation(String, Object)
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddHttpInformation*
  name: AddHttpInformation
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_AddHttpInformation_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddHttpInformation
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddHttpInformation
  nameWithType: IXRayRecorder.AddHttpInformation
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddMetadata(System.String,System.String,System.Object)
  name: AddMetadata(string, string, object)
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_AddMetadata_System_String_System_String_System_Object_
  commentId: M:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddMetadata(System.String,System.String,System.Object)
  name.vb: AddMetadata(String, String, Object)
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddMetadata(string, string, object)
  fullName.vb: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddMetadata(String, String, Object)
  nameWithType: IXRayRecorder.AddMetadata(string, string, object)
  nameWithType.vb: IXRayRecorder.AddMetadata(String, String, Object)
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddMetadata*
  name: AddMetadata
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_AddMetadata_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddMetadata
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.AddMetadata
  nameWithType: IXRayRecorder.AddMetadata
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.BeginSubsegment(System.String)
  name: BeginSubsegment(string)
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_BeginSubsegment_System_String_
  commentId: M:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.BeginSubsegment(System.String)
  name.vb: BeginSubsegment(String)
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.BeginSubsegment(string)
  fullName.vb: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.BeginSubsegment(String)
  nameWithType: IXRayRecorder.BeginSubsegment(string)
  nameWithType.vb: IXRayRecorder.BeginSubsegment(String)
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.BeginSubsegment*
  name: BeginSubsegment
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_BeginSubsegment_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.BeginSubsegment
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.BeginSubsegment
  nameWithType: IXRayRecorder.BeginSubsegment
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.Emitter
  name: Emitter
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_Emitter
  commentId: P:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.Emitter
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.Emitter
  nameWithType: IXRayRecorder.Emitter
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.Emitter*
  name: Emitter
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_Emitter_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.Emitter
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.Emitter
  nameWithType: IXRayRecorder.Emitter
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.EndSubsegment
  name: EndSubsegment()
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_EndSubsegment
  commentId: M:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.EndSubsegment
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.EndSubsegment()
  nameWithType: IXRayRecorder.EndSubsegment()
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.EndSubsegment*
  name: EndSubsegment
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_EndSubsegment_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.EndSubsegment
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.EndSubsegment
  nameWithType: IXRayRecorder.EndSubsegment
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.GetEntity
  name: GetEntity()
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_GetEntity
  commentId: M:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.GetEntity
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.GetEntity()
  nameWithType: IXRayRecorder.GetEntity()
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.GetEntity*
  name: GetEntity
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_GetEntity_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.GetEntity
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.GetEntity
  nameWithType: IXRayRecorder.GetEntity
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.SetEntity(Entity)
  name: SetEntity(Entity)
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_SetEntity_Entity_
  commentId: M:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.SetEntity(Entity)
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.SetEntity(Entity)
  nameWithType: IXRayRecorder.SetEntity(Entity)
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.SetEntity*
  name: SetEntity
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_SetEntity_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.SetEntity
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.SetEntity
  nameWithType: IXRayRecorder.SetEntity
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.SetNamespace(System.String)
  name: SetNamespace(string)
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_SetNamespace_System_String_
  commentId: M:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.SetNamespace(System.String)
  name.vb: SetNamespace(String)
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.SetNamespace(string)
  fullName.vb: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.SetNamespace(String)
  nameWithType: IXRayRecorder.SetNamespace(string)
  nameWithType.vb: IXRayRecorder.SetNamespace(String)
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.SetNamespace*
  name: SetNamespace
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_SetNamespace_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.SetNamespace
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.SetNamespace
  nameWithType: IXRayRecorder.SetNamespace
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.StreamingStrategy
  name: StreamingStrategy
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_StreamingStrategy
  commentId: P:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.StreamingStrategy
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.StreamingStrategy
  nameWithType: IXRayRecorder.StreamingStrategy
- uid: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.StreamingStrategy*
  name: StreamingStrategy
  href: api/AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.html#AWS_Lambda_Powertools_Tracing_Internal_IXRayRecorder_StreamingStrategy_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.StreamingStrategy
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.Internal.IXRayRecorder.StreamingStrategy
  nameWithType: IXRayRecorder.StreamingStrategy
- uid: AWS.Lambda.Powertools.Tracing.Tracing
  name: Tracing
  href: api/AWS.Lambda.Powertools.Tracing.Tracing.html
  commentId: T:AWS.Lambda.Powertools.Tracing.Tracing
  fullName: AWS.Lambda.Powertools.Tracing.Tracing
  nameWithType: Tracing
- uid: AWS.Lambda.Powertools.Tracing.Tracing.AddAnnotation(System.String,System.Object)
  name: AddAnnotation(string, object)
  href: api/AWS.Lambda.Powertools.Tracing.Tracing.html#AWS_Lambda_Powertools_Tracing_Tracing_AddAnnotation_System_String_System_Object_
  commentId: M:AWS.Lambda.Powertools.Tracing.Tracing.AddAnnotation(System.String,System.Object)
  name.vb: AddAnnotation(String, Object)
  fullName: AWS.Lambda.Powertools.Tracing.Tracing.AddAnnotation(string, object)
  fullName.vb: AWS.Lambda.Powertools.Tracing.Tracing.AddAnnotation(String, Object)
  nameWithType: Tracing.AddAnnotation(string, object)
  nameWithType.vb: Tracing.AddAnnotation(String, Object)
- uid: AWS.Lambda.Powertools.Tracing.Tracing.AddAnnotation*
  name: AddAnnotation
  href: api/AWS.Lambda.Powertools.Tracing.Tracing.html#AWS_Lambda_Powertools_Tracing_Tracing_AddAnnotation_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.Tracing.AddAnnotation
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.Tracing.AddAnnotation
  nameWithType: Tracing.AddAnnotation
- uid: AWS.Lambda.Powertools.Tracing.Tracing.AddException(System.Exception)
  name: AddException(Exception)
  href: api/AWS.Lambda.Powertools.Tracing.Tracing.html#AWS_Lambda_Powertools_Tracing_Tracing_AddException_System_Exception_
  commentId: M:AWS.Lambda.Powertools.Tracing.Tracing.AddException(System.Exception)
  fullName: AWS.Lambda.Powertools.Tracing.Tracing.AddException(System.Exception)
  nameWithType: Tracing.AddException(Exception)
- uid: AWS.Lambda.Powertools.Tracing.Tracing.AddException*
  name: AddException
  href: api/AWS.Lambda.Powertools.Tracing.Tracing.html#AWS_Lambda_Powertools_Tracing_Tracing_AddException_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.Tracing.AddException
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.Tracing.AddException
  nameWithType: Tracing.AddException
- uid: AWS.Lambda.Powertools.Tracing.Tracing.AddHttpInformation(System.String,System.Object)
  name: AddHttpInformation(string, object)
  href: api/AWS.Lambda.Powertools.Tracing.Tracing.html#AWS_Lambda_Powertools_Tracing_Tracing_AddHttpInformation_System_String_System_Object_
  commentId: M:AWS.Lambda.Powertools.Tracing.Tracing.AddHttpInformation(System.String,System.Object)
  name.vb: AddHttpInformation(String, Object)
  fullName: AWS.Lambda.Powertools.Tracing.Tracing.AddHttpInformation(string, object)
  fullName.vb: AWS.Lambda.Powertools.Tracing.Tracing.AddHttpInformation(String, Object)
  nameWithType: Tracing.AddHttpInformation(string, object)
  nameWithType.vb: Tracing.AddHttpInformation(String, Object)
- uid: AWS.Lambda.Powertools.Tracing.Tracing.AddHttpInformation*
  name: AddHttpInformation
  href: api/AWS.Lambda.Powertools.Tracing.Tracing.html#AWS_Lambda_Powertools_Tracing_Tracing_AddHttpInformation_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.Tracing.AddHttpInformation
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.Tracing.AddHttpInformation
  nameWithType: Tracing.AddHttpInformation
- uid: AWS.Lambda.Powertools.Tracing.Tracing.AddMetadata(System.String,System.Object)
  name: AddMetadata(string, object)
  href: api/AWS.Lambda.Powertools.Tracing.Tracing.html#AWS_Lambda_Powertools_Tracing_Tracing_AddMetadata_System_String_System_Object_
  commentId: M:AWS.Lambda.Powertools.Tracing.Tracing.AddMetadata(System.String,System.Object)
  name.vb: AddMetadata(String, Object)
  fullName: AWS.Lambda.Powertools.Tracing.Tracing.AddMetadata(string, object)
  fullName.vb: AWS.Lambda.Powertools.Tracing.Tracing.AddMetadata(String, Object)
  nameWithType: Tracing.AddMetadata(string, object)
  nameWithType.vb: Tracing.AddMetadata(String, Object)
- uid: AWS.Lambda.Powertools.Tracing.Tracing.AddMetadata(System.String,System.String,System.Object)
  name: AddMetadata(string, string, object)
  href: api/AWS.Lambda.Powertools.Tracing.Tracing.html#AWS_Lambda_Powertools_Tracing_Tracing_AddMetadata_System_String_System_String_System_Object_
  commentId: M:AWS.Lambda.Powertools.Tracing.Tracing.AddMetadata(System.String,System.String,System.Object)
  name.vb: AddMetadata(String, String, Object)
  fullName: AWS.Lambda.Powertools.Tracing.Tracing.AddMetadata(string, string, object)
  fullName.vb: AWS.Lambda.Powertools.Tracing.Tracing.AddMetadata(String, String, Object)
  nameWithType: Tracing.AddMetadata(string, string, object)
  nameWithType.vb: Tracing.AddMetadata(String, String, Object)
- uid: AWS.Lambda.Powertools.Tracing.Tracing.AddMetadata*
  name: AddMetadata
  href: api/AWS.Lambda.Powertools.Tracing.Tracing.html#AWS_Lambda_Powertools_Tracing_Tracing_AddMetadata_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.Tracing.AddMetadata
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.Tracing.AddMetadata
  nameWithType: Tracing.AddMetadata
- uid: AWS.Lambda.Powertools.Tracing.Tracing.GetEntity
  name: GetEntity()
  href: api/AWS.Lambda.Powertools.Tracing.Tracing.html#AWS_Lambda_Powertools_Tracing_Tracing_GetEntity
  commentId: M:AWS.Lambda.Powertools.Tracing.Tracing.GetEntity
  fullName: AWS.Lambda.Powertools.Tracing.Tracing.GetEntity()
  nameWithType: Tracing.GetEntity()
- uid: AWS.Lambda.Powertools.Tracing.Tracing.GetEntity*
  name: GetEntity
  href: api/AWS.Lambda.Powertools.Tracing.Tracing.html#AWS_Lambda_Powertools_Tracing_Tracing_GetEntity_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.Tracing.GetEntity
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.Tracing.GetEntity
  nameWithType: Tracing.GetEntity
- uid: AWS.Lambda.Powertools.Tracing.Tracing.SetEntity(Entity)
  name: SetEntity(Entity)
  href: api/AWS.Lambda.Powertools.Tracing.Tracing.html#AWS_Lambda_Powertools_Tracing_Tracing_SetEntity_Entity_
  commentId: M:AWS.Lambda.Powertools.Tracing.Tracing.SetEntity(Entity)
  fullName: AWS.Lambda.Powertools.Tracing.Tracing.SetEntity(Entity)
  nameWithType: Tracing.SetEntity(Entity)
- uid: AWS.Lambda.Powertools.Tracing.Tracing.SetEntity*
  name: SetEntity
  href: api/AWS.Lambda.Powertools.Tracing.Tracing.html#AWS_Lambda_Powertools_Tracing_Tracing_SetEntity_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.Tracing.SetEntity
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.Tracing.SetEntity
  nameWithType: Tracing.SetEntity
- uid: AWS.Lambda.Powertools.Tracing.Tracing.WithSubsegment(System.String,Entity,System.Action{Subsegment})
  name: WithSubsegment(string, Entity, Action<Subsegment>)
  href: api/AWS.Lambda.Powertools.Tracing.Tracing.html#AWS_Lambda_Powertools_Tracing_Tracing_WithSubsegment_System_String_Entity_System_Action_Subsegment__
  commentId: M:AWS.Lambda.Powertools.Tracing.Tracing.WithSubsegment(System.String,Entity,System.Action{Subsegment})
  name.vb: WithSubsegment(String, Entity, Action(Of Subsegment))
  fullName: AWS.Lambda.Powertools.Tracing.Tracing.WithSubsegment(string, Entity, System.Action<Subsegment>)
  fullName.vb: AWS.Lambda.Powertools.Tracing.Tracing.WithSubsegment(String, Entity, System.Action(Of Subsegment))
  nameWithType: Tracing.WithSubsegment(string, Entity, Action<Subsegment>)
  nameWithType.vb: Tracing.WithSubsegment(String, Entity, Action(Of Subsegment))
- uid: AWS.Lambda.Powertools.Tracing.Tracing.WithSubsegment(System.String,System.Action{Subsegment})
  name: WithSubsegment(string, Action<Subsegment>)
  href: api/AWS.Lambda.Powertools.Tracing.Tracing.html#AWS_Lambda_Powertools_Tracing_Tracing_WithSubsegment_System_String_System_Action_Subsegment__
  commentId: M:AWS.Lambda.Powertools.Tracing.Tracing.WithSubsegment(System.String,System.Action{Subsegment})
  name.vb: WithSubsegment(String, Action(Of Subsegment))
  fullName: AWS.Lambda.Powertools.Tracing.Tracing.WithSubsegment(string, System.Action<Subsegment>)
  fullName.vb: AWS.Lambda.Powertools.Tracing.Tracing.WithSubsegment(String, System.Action(Of Subsegment))
  nameWithType: Tracing.WithSubsegment(string, Action<Subsegment>)
  nameWithType.vb: Tracing.WithSubsegment(String, Action(Of Subsegment))
- uid: AWS.Lambda.Powertools.Tracing.Tracing.WithSubsegment(System.String,System.String,Entity,System.Action{Subsegment})
  name: WithSubsegment(string, string, Entity, Action<Subsegment>)
  href: api/AWS.Lambda.Powertools.Tracing.Tracing.html#AWS_Lambda_Powertools_Tracing_Tracing_WithSubsegment_System_String_System_String_Entity_System_Action_Subsegment__
  commentId: M:AWS.Lambda.Powertools.Tracing.Tracing.WithSubsegment(System.String,System.String,Entity,System.Action{Subsegment})
  name.vb: WithSubsegment(String, String, Entity, Action(Of Subsegment))
  fullName: AWS.Lambda.Powertools.Tracing.Tracing.WithSubsegment(string, string, Entity, System.Action<Subsegment>)
  fullName.vb: AWS.Lambda.Powertools.Tracing.Tracing.WithSubsegment(String, String, Entity, System.Action(Of Subsegment))
  nameWithType: Tracing.WithSubsegment(string, string, Entity, Action<Subsegment>)
  nameWithType.vb: Tracing.WithSubsegment(String, String, Entity, Action(Of Subsegment))
- uid: AWS.Lambda.Powertools.Tracing.Tracing.WithSubsegment(System.String,System.String,System.Action{Subsegment})
  name: WithSubsegment(string, string, Action<Subsegment>)
  href: api/AWS.Lambda.Powertools.Tracing.Tracing.html#AWS_Lambda_Powertools_Tracing_Tracing_WithSubsegment_System_String_System_String_System_Action_Subsegment__
  commentId: M:AWS.Lambda.Powertools.Tracing.Tracing.WithSubsegment(System.String,System.String,System.Action{Subsegment})
  name.vb: WithSubsegment(String, String, Action(Of Subsegment))
  fullName: AWS.Lambda.Powertools.Tracing.Tracing.WithSubsegment(string, string, System.Action<Subsegment>)
  fullName.vb: AWS.Lambda.Powertools.Tracing.Tracing.WithSubsegment(String, String, System.Action(Of Subsegment))
  nameWithType: Tracing.WithSubsegment(string, string, Action<Subsegment>)
  nameWithType.vb: Tracing.WithSubsegment(String, String, Action(Of Subsegment))
- uid: AWS.Lambda.Powertools.Tracing.Tracing.WithSubsegment*
  name: WithSubsegment
  href: api/AWS.Lambda.Powertools.Tracing.Tracing.html#AWS_Lambda_Powertools_Tracing_Tracing_WithSubsegment_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.Tracing.WithSubsegment
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.Tracing.WithSubsegment
  nameWithType: Tracing.WithSubsegment
- uid: AWS.Lambda.Powertools.Tracing.TracingAttribute
  name: TracingAttribute
  href: api/AWS.Lambda.Powertools.Tracing.TracingAttribute.html
  commentId: T:AWS.Lambda.Powertools.Tracing.TracingAttribute
  fullName: AWS.Lambda.Powertools.Tracing.TracingAttribute
  nameWithType: TracingAttribute
- uid: AWS.Lambda.Powertools.Tracing.TracingAttribute.CaptureMode
  name: CaptureMode
  href: api/AWS.Lambda.Powertools.Tracing.TracingAttribute.html#AWS_Lambda_Powertools_Tracing_TracingAttribute_CaptureMode
  commentId: P:AWS.Lambda.Powertools.Tracing.TracingAttribute.CaptureMode
  fullName: AWS.Lambda.Powertools.Tracing.TracingAttribute.CaptureMode
  nameWithType: TracingAttribute.CaptureMode
- uid: AWS.Lambda.Powertools.Tracing.TracingAttribute.CaptureMode*
  name: CaptureMode
  href: api/AWS.Lambda.Powertools.Tracing.TracingAttribute.html#AWS_Lambda_Powertools_Tracing_TracingAttribute_CaptureMode_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.TracingAttribute.CaptureMode
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.TracingAttribute.CaptureMode
  nameWithType: TracingAttribute.CaptureMode
- uid: AWS.Lambda.Powertools.Tracing.TracingAttribute.CreateHandler
  name: CreateHandler()
  href: api/AWS.Lambda.Powertools.Tracing.TracingAttribute.html#AWS_Lambda_Powertools_Tracing_TracingAttribute_CreateHandler
  commentId: M:AWS.Lambda.Powertools.Tracing.TracingAttribute.CreateHandler
  fullName: AWS.Lambda.Powertools.Tracing.TracingAttribute.CreateHandler()
  nameWithType: TracingAttribute.CreateHandler()
- uid: AWS.Lambda.Powertools.Tracing.TracingAttribute.CreateHandler*
  name: CreateHandler
  href: api/AWS.Lambda.Powertools.Tracing.TracingAttribute.html#AWS_Lambda_Powertools_Tracing_TracingAttribute_CreateHandler_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.TracingAttribute.CreateHandler
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.TracingAttribute.CreateHandler
  nameWithType: TracingAttribute.CreateHandler
- uid: AWS.Lambda.Powertools.Tracing.TracingAttribute.Namespace
  name: Namespace
  href: api/AWS.Lambda.Powertools.Tracing.TracingAttribute.html#AWS_Lambda_Powertools_Tracing_TracingAttribute_Namespace
  commentId: P:AWS.Lambda.Powertools.Tracing.TracingAttribute.Namespace
  fullName: AWS.Lambda.Powertools.Tracing.TracingAttribute.Namespace
  nameWithType: TracingAttribute.Namespace
- uid: AWS.Lambda.Powertools.Tracing.TracingAttribute.Namespace*
  name: Namespace
  href: api/AWS.Lambda.Powertools.Tracing.TracingAttribute.html#AWS_Lambda_Powertools_Tracing_TracingAttribute_Namespace_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.TracingAttribute.Namespace
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.TracingAttribute.Namespace
  nameWithType: TracingAttribute.Namespace
- uid: AWS.Lambda.Powertools.Tracing.TracingAttribute.SegmentName
  name: SegmentName
  href: api/AWS.Lambda.Powertools.Tracing.TracingAttribute.html#AWS_Lambda_Powertools_Tracing_TracingAttribute_SegmentName
  commentId: P:AWS.Lambda.Powertools.Tracing.TracingAttribute.SegmentName
  fullName: AWS.Lambda.Powertools.Tracing.TracingAttribute.SegmentName
  nameWithType: TracingAttribute.SegmentName
- uid: AWS.Lambda.Powertools.Tracing.TracingAttribute.SegmentName*
  name: SegmentName
  href: api/AWS.Lambda.Powertools.Tracing.TracingAttribute.html#AWS_Lambda_Powertools_Tracing_TracingAttribute_SegmentName_
  commentId: Overload:AWS.Lambda.Powertools.Tracing.TracingAttribute.SegmentName
  isSpec: "True"
  fullName: AWS.Lambda.Powertools.Tracing.TracingAttribute.SegmentName
  nameWithType: TracingAttribute.SegmentName
- uid: AWS.Lambda.Powertools.Tracing.TracingCaptureMode
  name: TracingCaptureMode
  href: api/AWS.Lambda.Powertools.Tracing.TracingCaptureMode.html
  commentId: T:AWS.Lambda.Powertools.Tracing.TracingCaptureMode
  fullName: AWS.Lambda.Powertools.Tracing.TracingCaptureMode
  nameWithType: TracingCaptureMode
- uid: AWS.Lambda.Powertools.Tracing.TracingCaptureMode.Disabled
  name: Disabled
  href: api/AWS.Lambda.Powertools.Tracing.TracingCaptureMode.html#AWS_Lambda_Powertools_Tracing_TracingCaptureMode_Disabled
  commentId: F:AWS.Lambda.Powertools.Tracing.TracingCaptureMode.Disabled
  fullName: AWS.Lambda.Powertools.Tracing.TracingCaptureMode.Disabled
  nameWithType: TracingCaptureMode.Disabled
- uid: AWS.Lambda.Powertools.Tracing.TracingCaptureMode.EnvironmentVariable
  name: EnvironmentVariable
  href: api/AWS.Lambda.Powertools.Tracing.TracingCaptureMode.html#AWS_Lambda_Powertools_Tracing_TracingCaptureMode_EnvironmentVariable
  commentId: F:AWS.Lambda.Powertools.Tracing.TracingCaptureMode.EnvironmentVariable
  fullName: AWS.Lambda.Powertools.Tracing.TracingCaptureMode.EnvironmentVariable
  nameWithType: TracingCaptureMode.EnvironmentVariable
- uid: AWS.Lambda.Powertools.Tracing.TracingCaptureMode.Error
  name: Error
  href: api/AWS.Lambda.Powertools.Tracing.TracingCaptureMode.html#AWS_Lambda_Powertools_Tracing_TracingCaptureMode_Error
  commentId: F:AWS.Lambda.Powertools.Tracing.TracingCaptureMode.Error
  fullName: AWS.Lambda.Powertools.Tracing.TracingCaptureMode.Error
  nameWithType: TracingCaptureMode.Error
- uid: AWS.Lambda.Powertools.Tracing.TracingCaptureMode.Response
  name: Response
  href: api/AWS.Lambda.Powertools.Tracing.TracingCaptureMode.html#AWS_Lambda_Powertools_Tracing_TracingCaptureMode_Response
  commentId: F:AWS.Lambda.Powertools.Tracing.TracingCaptureMode.Response
  fullName: AWS.Lambda.Powertools.Tracing.TracingCaptureMode.Response
  nameWithType: TracingCaptureMode.Response
- uid: AWS.Lambda.Powertools.Tracing.TracingCaptureMode.ResponseAndError
  name: ResponseAndError
  href: api/AWS.Lambda.Powertools.Tracing.TracingCaptureMode.html#AWS_Lambda_Powertools_Tracing_TracingCaptureMode_ResponseAndError
  commentId: F:AWS.Lambda.Powertools.Tracing.TracingCaptureMode.ResponseAndError
  fullName: AWS.Lambda.Powertools.Tracing.TracingCaptureMode.ResponseAndError
  nameWithType: TracingCaptureMode.ResponseAndError
